/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineabledomainArtifactMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineabledomainArtifactMeta{}

// PipelineabledomainArtifactMeta struct for PipelineabledomainArtifactMeta
type PipelineabledomainArtifactMeta struct {
	ArtifactType *string `json:"artifact_type,omitempty"`
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	VersionCode *string `json:"version_code,omitempty"`
	VersionName *string `json:"version_name,omitempty"`
}

// NewPipelineabledomainArtifactMeta instantiates a new PipelineabledomainArtifactMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineabledomainArtifactMeta() *PipelineabledomainArtifactMeta {
	this := PipelineabledomainArtifactMeta{}
	return &this
}

// NewPipelineabledomainArtifactMetaWithDefaults instantiates a new PipelineabledomainArtifactMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineabledomainArtifactMetaWithDefaults() *PipelineabledomainArtifactMeta {
	this := PipelineabledomainArtifactMeta{}
	return &this
}

// GetArtifactType returns the ArtifactType field value if set, zero value otherwise.
func (o *PipelineabledomainArtifactMeta) GetArtifactType() string {
	if o == nil || IsNil(o.ArtifactType) {
		var ret string
		return ret
	}
	return *o.ArtifactType
}

// GetArtifactTypeOk returns a tuple with the ArtifactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainArtifactMeta) GetArtifactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactType) {
		return nil, false
	}
	return o.ArtifactType, true
}

// HasArtifactType returns a boolean if a field has been set.
func (o *PipelineabledomainArtifactMeta) HasArtifactType() bool {
	if o != nil && !IsNil(o.ArtifactType) {
		return true
	}

	return false
}

// SetArtifactType gets a reference to the given string and assigns it to the ArtifactType field.
func (o *PipelineabledomainArtifactMeta) SetArtifactType(v string) {
	o.ArtifactType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PipelineabledomainArtifactMeta) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainArtifactMeta) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PipelineabledomainArtifactMeta) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PipelineabledomainArtifactMeta) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PipelineabledomainArtifactMeta) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainArtifactMeta) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PipelineabledomainArtifactMeta) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PipelineabledomainArtifactMeta) SetTitle(v string) {
	o.Title = &v
}

// GetVersionCode returns the VersionCode field value if set, zero value otherwise.
func (o *PipelineabledomainArtifactMeta) GetVersionCode() string {
	if o == nil || IsNil(o.VersionCode) {
		var ret string
		return ret
	}
	return *o.VersionCode
}

// GetVersionCodeOk returns a tuple with the VersionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainArtifactMeta) GetVersionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.VersionCode) {
		return nil, false
	}
	return o.VersionCode, true
}

// HasVersionCode returns a boolean if a field has been set.
func (o *PipelineabledomainArtifactMeta) HasVersionCode() bool {
	if o != nil && !IsNil(o.VersionCode) {
		return true
	}

	return false
}

// SetVersionCode gets a reference to the given string and assigns it to the VersionCode field.
func (o *PipelineabledomainArtifactMeta) SetVersionCode(v string) {
	o.VersionCode = &v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *PipelineabledomainArtifactMeta) GetVersionName() string {
	if o == nil || IsNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainArtifactMeta) GetVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionName) {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *PipelineabledomainArtifactMeta) HasVersionName() bool {
	if o != nil && !IsNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *PipelineabledomainArtifactMeta) SetVersionName(v string) {
	o.VersionName = &v
}

func (o PipelineabledomainArtifactMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineabledomainArtifactMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArtifactType) {
		toSerialize["artifact_type"] = o.ArtifactType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.VersionCode) {
		toSerialize["version_code"] = o.VersionCode
	}
	if !IsNil(o.VersionName) {
		toSerialize["version_name"] = o.VersionName
	}
	return toSerialize, nil
}

type NullablePipelineabledomainArtifactMeta struct {
	value *PipelineabledomainArtifactMeta
	isSet bool
}

func (v NullablePipelineabledomainArtifactMeta) Get() *PipelineabledomainArtifactMeta {
	return v.value
}

func (v *NullablePipelineabledomainArtifactMeta) Set(val *PipelineabledomainArtifactMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineabledomainArtifactMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineabledomainArtifactMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineabledomainArtifactMeta(val *PipelineabledomainArtifactMeta) *NullablePipelineabledomainArtifactMeta {
	return &NullablePipelineabledomainArtifactMeta{value: val, isSet: true}
}

func (v NullablePipelineabledomainArtifactMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineabledomainArtifactMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


