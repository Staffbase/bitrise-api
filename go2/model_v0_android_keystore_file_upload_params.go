/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the V0AndroidKeystoreFileUploadParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0AndroidKeystoreFileUploadParams{}

// V0AndroidKeystoreFileUploadParams struct for V0AndroidKeystoreFileUploadParams
type V0AndroidKeystoreFileUploadParams struct {
	Alias string `json:"alias"`
	KeystoreFileName *string `json:"keystore_file_name,omitempty"`
	Password string `json:"password"`
	PrivateKeyPassword string `json:"private_key_password"`
	UploadFileName string `json:"upload_file_name"`
	UploadFileSize int32 `json:"upload_file_size"`
}

type _V0AndroidKeystoreFileUploadParams V0AndroidKeystoreFileUploadParams

// NewV0AndroidKeystoreFileUploadParams instantiates a new V0AndroidKeystoreFileUploadParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0AndroidKeystoreFileUploadParams(alias string, password string, privateKeyPassword string, uploadFileName string, uploadFileSize int32) *V0AndroidKeystoreFileUploadParams {
	this := V0AndroidKeystoreFileUploadParams{}
	this.Alias = alias
	this.Password = password
	this.PrivateKeyPassword = privateKeyPassword
	this.UploadFileName = uploadFileName
	this.UploadFileSize = uploadFileSize
	return &this
}

// NewV0AndroidKeystoreFileUploadParamsWithDefaults instantiates a new V0AndroidKeystoreFileUploadParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0AndroidKeystoreFileUploadParamsWithDefaults() *V0AndroidKeystoreFileUploadParams {
	this := V0AndroidKeystoreFileUploadParams{}
	return &this
}

// GetAlias returns the Alias field value
func (o *V0AndroidKeystoreFileUploadParams) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *V0AndroidKeystoreFileUploadParams) SetAlias(v string) {
	o.Alias = v
}

// GetKeystoreFileName returns the KeystoreFileName field value if set, zero value otherwise.
func (o *V0AndroidKeystoreFileUploadParams) GetKeystoreFileName() string {
	if o == nil || IsNil(o.KeystoreFileName) {
		var ret string
		return ret
	}
	return *o.KeystoreFileName
}

// GetKeystoreFileNameOk returns a tuple with the KeystoreFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetKeystoreFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.KeystoreFileName) {
		return nil, false
	}
	return o.KeystoreFileName, true
}

// HasKeystoreFileName returns a boolean if a field has been set.
func (o *V0AndroidKeystoreFileUploadParams) HasKeystoreFileName() bool {
	if o != nil && !IsNil(o.KeystoreFileName) {
		return true
	}

	return false
}

// SetKeystoreFileName gets a reference to the given string and assigns it to the KeystoreFileName field.
func (o *V0AndroidKeystoreFileUploadParams) SetKeystoreFileName(v string) {
	o.KeystoreFileName = &v
}

// GetPassword returns the Password field value
func (o *V0AndroidKeystoreFileUploadParams) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *V0AndroidKeystoreFileUploadParams) SetPassword(v string) {
	o.Password = v
}

// GetPrivateKeyPassword returns the PrivateKeyPassword field value
func (o *V0AndroidKeystoreFileUploadParams) GetPrivateKeyPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKeyPassword
}

// GetPrivateKeyPasswordOk returns a tuple with the PrivateKeyPassword field value
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetPrivateKeyPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKeyPassword, true
}

// SetPrivateKeyPassword sets field value
func (o *V0AndroidKeystoreFileUploadParams) SetPrivateKeyPassword(v string) {
	o.PrivateKeyPassword = v
}

// GetUploadFileName returns the UploadFileName field value
func (o *V0AndroidKeystoreFileUploadParams) GetUploadFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadFileName
}

// GetUploadFileNameOk returns a tuple with the UploadFileName field value
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetUploadFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadFileName, true
}

// SetUploadFileName sets field value
func (o *V0AndroidKeystoreFileUploadParams) SetUploadFileName(v string) {
	o.UploadFileName = v
}

// GetUploadFileSize returns the UploadFileSize field value
func (o *V0AndroidKeystoreFileUploadParams) GetUploadFileSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UploadFileSize
}

// GetUploadFileSizeOk returns a tuple with the UploadFileSize field value
// and a boolean to check if the value has been set.
func (o *V0AndroidKeystoreFileUploadParams) GetUploadFileSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadFileSize, true
}

// SetUploadFileSize sets field value
func (o *V0AndroidKeystoreFileUploadParams) SetUploadFileSize(v int32) {
	o.UploadFileSize = v
}

func (o V0AndroidKeystoreFileUploadParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0AndroidKeystoreFileUploadParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alias"] = o.Alias
	if !IsNil(o.KeystoreFileName) {
		toSerialize["keystore_file_name"] = o.KeystoreFileName
	}
	toSerialize["password"] = o.Password
	toSerialize["private_key_password"] = o.PrivateKeyPassword
	toSerialize["upload_file_name"] = o.UploadFileName
	toSerialize["upload_file_size"] = o.UploadFileSize
	return toSerialize, nil
}

func (o *V0AndroidKeystoreFileUploadParams) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alias",
		"password",
		"private_key_password",
		"upload_file_name",
		"upload_file_size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0AndroidKeystoreFileUploadParams := _V0AndroidKeystoreFileUploadParams{}

	err = json.Unmarshal(bytes, &varV0AndroidKeystoreFileUploadParams)

	if err != nil {
		return err
	}

	*o = V0AndroidKeystoreFileUploadParams(varV0AndroidKeystoreFileUploadParams)

	return err
}

type NullableV0AndroidKeystoreFileUploadParams struct {
	value *V0AndroidKeystoreFileUploadParams
	isSet bool
}

func (v NullableV0AndroidKeystoreFileUploadParams) Get() *V0AndroidKeystoreFileUploadParams {
	return v.value
}

func (v *NullableV0AndroidKeystoreFileUploadParams) Set(val *V0AndroidKeystoreFileUploadParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0AndroidKeystoreFileUploadParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0AndroidKeystoreFileUploadParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0AndroidKeystoreFileUploadParams(val *V0AndroidKeystoreFileUploadParams) *NullableV0AndroidKeystoreFileUploadParams {
	return &NullableV0AndroidKeystoreFileUploadParams{value: val, isSet: true}
}

func (v NullableV0AndroidKeystoreFileUploadParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0AndroidKeystoreFileUploadParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


