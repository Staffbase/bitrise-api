/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganzationGroupsList200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganzationGroupsList200ResponseInner{}

// OrganzationGroupsList200ResponseInner struct for OrganzationGroupsList200ResponseInner
type OrganzationGroupsList200ResponseInner struct {
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

// NewOrganzationGroupsList200ResponseInner instantiates a new OrganzationGroupsList200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganzationGroupsList200ResponseInner() *OrganzationGroupsList200ResponseInner {
	this := OrganzationGroupsList200ResponseInner{}
	return &this
}

// NewOrganzationGroupsList200ResponseInnerWithDefaults instantiates a new OrganzationGroupsList200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganzationGroupsList200ResponseInnerWithDefaults() *OrganzationGroupsList200ResponseInner {
	this := OrganzationGroupsList200ResponseInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganzationGroupsList200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganzationGroupsList200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganzationGroupsList200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganzationGroupsList200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *OrganzationGroupsList200ResponseInner) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganzationGroupsList200ResponseInner) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *OrganzationGroupsList200ResponseInner) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *OrganzationGroupsList200ResponseInner) SetSlug(v string) {
	o.Slug = &v
}

func (o OrganzationGroupsList200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganzationGroupsList200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	return toSerialize, nil
}

type NullableOrganzationGroupsList200ResponseInner struct {
	value *OrganzationGroupsList200ResponseInner
	isSet bool
}

func (v NullableOrganzationGroupsList200ResponseInner) Get() *OrganzationGroupsList200ResponseInner {
	return v.value
}

func (v *NullableOrganzationGroupsList200ResponseInner) Set(val *OrganzationGroupsList200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganzationGroupsList200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganzationGroupsList200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganzationGroupsList200ResponseInner(val *OrganzationGroupsList200ResponseInner) *NullableOrganzationGroupsList200ResponseInner {
	return &NullableOrganzationGroupsList200ResponseInner{value: val, isSet: true}
}

func (v NullableOrganzationGroupsList200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganzationGroupsList200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


