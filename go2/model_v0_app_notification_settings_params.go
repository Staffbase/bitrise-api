/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0AppNotificationSettingsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0AppNotificationSettingsParams{}

// V0AppNotificationSettingsParams struct for V0AppNotificationSettingsParams
type V0AppNotificationSettingsParams struct {
	// When should Bitrise send notifications for the users on build failure? Possible values: always, never, change
	OnFailure *string `json:"on_failure,omitempty"`
	// When should Bitrise send notifications for the users on build success? Possible values: always, never, change
	OnSuccess *string `json:"on_success,omitempty"`
}

// NewV0AppNotificationSettingsParams instantiates a new V0AppNotificationSettingsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0AppNotificationSettingsParams() *V0AppNotificationSettingsParams {
	this := V0AppNotificationSettingsParams{}
	return &this
}

// NewV0AppNotificationSettingsParamsWithDefaults instantiates a new V0AppNotificationSettingsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0AppNotificationSettingsParamsWithDefaults() *V0AppNotificationSettingsParams {
	this := V0AppNotificationSettingsParams{}
	return &this
}

// GetOnFailure returns the OnFailure field value if set, zero value otherwise.
func (o *V0AppNotificationSettingsParams) GetOnFailure() string {
	if o == nil || IsNil(o.OnFailure) {
		var ret string
		return ret
	}
	return *o.OnFailure
}

// GetOnFailureOk returns a tuple with the OnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppNotificationSettingsParams) GetOnFailureOk() (*string, bool) {
	if o == nil || IsNil(o.OnFailure) {
		return nil, false
	}
	return o.OnFailure, true
}

// HasOnFailure returns a boolean if a field has been set.
func (o *V0AppNotificationSettingsParams) HasOnFailure() bool {
	if o != nil && !IsNil(o.OnFailure) {
		return true
	}

	return false
}

// SetOnFailure gets a reference to the given string and assigns it to the OnFailure field.
func (o *V0AppNotificationSettingsParams) SetOnFailure(v string) {
	o.OnFailure = &v
}

// GetOnSuccess returns the OnSuccess field value if set, zero value otherwise.
func (o *V0AppNotificationSettingsParams) GetOnSuccess() string {
	if o == nil || IsNil(o.OnSuccess) {
		var ret string
		return ret
	}
	return *o.OnSuccess
}

// GetOnSuccessOk returns a tuple with the OnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppNotificationSettingsParams) GetOnSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.OnSuccess) {
		return nil, false
	}
	return o.OnSuccess, true
}

// HasOnSuccess returns a boolean if a field has been set.
func (o *V0AppNotificationSettingsParams) HasOnSuccess() bool {
	if o != nil && !IsNil(o.OnSuccess) {
		return true
	}

	return false
}

// SetOnSuccess gets a reference to the given string and assigns it to the OnSuccess field.
func (o *V0AppNotificationSettingsParams) SetOnSuccess(v string) {
	o.OnSuccess = &v
}

func (o V0AppNotificationSettingsParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0AppNotificationSettingsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnFailure) {
		toSerialize["on_failure"] = o.OnFailure
	}
	if !IsNil(o.OnSuccess) {
		toSerialize["on_success"] = o.OnSuccess
	}
	return toSerialize, nil
}

type NullableV0AppNotificationSettingsParams struct {
	value *V0AppNotificationSettingsParams
	isSet bool
}

func (v NullableV0AppNotificationSettingsParams) Get() *V0AppNotificationSettingsParams {
	return v.value
}

func (v *NullableV0AppNotificationSettingsParams) Set(val *V0AppNotificationSettingsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0AppNotificationSettingsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0AppNotificationSettingsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0AppNotificationSettingsParams(val *V0AppNotificationSettingsParams) *NullableV0AppNotificationSettingsParams {
	return &NullableV0AppNotificationSettingsParams{value: val, isSet: true}
}

func (v NullableV0AppNotificationSettingsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0AppNotificationSettingsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


