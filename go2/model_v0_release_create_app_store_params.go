/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the V0ReleaseCreateAppStoreParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0ReleaseCreateAppStoreParams{}

// V0ReleaseCreateAppStoreParams struct for V0ReleaseCreateAppStoreParams
type V0ReleaseCreateAppStoreParams struct {
	// @Deprecated use `automatic_store_upload` instead. Indicates whether or not to upload every release candidate build automatically to TestFlight (default: `false`)
	AutomaticTestflightUpload *bool `json:"automatic_testflight_upload,omitempty"`
	// The bundle ID of the app to be released
	BundleId string `json:"bundle_id"`
	// An internal description of the release; it won't be propagated to the App Store (default: empty)
	Description *string `json:"description,omitempty"`
	// The name/version of the release (e.g. `1.2`)
	Name string `json:"name"`
	// The branch used for building the release candidate (default: empty)
	ReleaseBranch *string `json:"release_branch,omitempty"`
	// The Slack webhook URL to use for sending Slack notifications (default: empty)
	SlackWebhookUrl *string `json:"slack_webhook_url,omitempty"`
	// The Teams webhook URL to use for sending MS Teams notifications (default: empty)
	TeamsWebhookUrl *string `json:"teams_webhook_url,omitempty"`
	// The workflow used for building the release candidate (default: empty)
	Workflow *string `json:"workflow,omitempty"`
}

type _V0ReleaseCreateAppStoreParams V0ReleaseCreateAppStoreParams

// NewV0ReleaseCreateAppStoreParams instantiates a new V0ReleaseCreateAppStoreParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0ReleaseCreateAppStoreParams(bundleId string, name string) *V0ReleaseCreateAppStoreParams {
	this := V0ReleaseCreateAppStoreParams{}
	this.BundleId = bundleId
	this.Name = name
	return &this
}

// NewV0ReleaseCreateAppStoreParamsWithDefaults instantiates a new V0ReleaseCreateAppStoreParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0ReleaseCreateAppStoreParamsWithDefaults() *V0ReleaseCreateAppStoreParams {
	this := V0ReleaseCreateAppStoreParams{}
	return &this
}

// GetAutomaticTestflightUpload returns the AutomaticTestflightUpload field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetAutomaticTestflightUpload() bool {
	if o == nil || IsNil(o.AutomaticTestflightUpload) {
		var ret bool
		return ret
	}
	return *o.AutomaticTestflightUpload
}

// GetAutomaticTestflightUploadOk returns a tuple with the AutomaticTestflightUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetAutomaticTestflightUploadOk() (*bool, bool) {
	if o == nil || IsNil(o.AutomaticTestflightUpload) {
		return nil, false
	}
	return o.AutomaticTestflightUpload, true
}

// HasAutomaticTestflightUpload returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasAutomaticTestflightUpload() bool {
	if o != nil && !IsNil(o.AutomaticTestflightUpload) {
		return true
	}

	return false
}

// SetAutomaticTestflightUpload gets a reference to the given bool and assigns it to the AutomaticTestflightUpload field.
func (o *V0ReleaseCreateAppStoreParams) SetAutomaticTestflightUpload(v bool) {
	o.AutomaticTestflightUpload = &v
}

// GetBundleId returns the BundleId field value
func (o *V0ReleaseCreateAppStoreParams) GetBundleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleId, true
}

// SetBundleId sets field value
func (o *V0ReleaseCreateAppStoreParams) SetBundleId(v string) {
	o.BundleId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V0ReleaseCreateAppStoreParams) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *V0ReleaseCreateAppStoreParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V0ReleaseCreateAppStoreParams) SetName(v string) {
	o.Name = v
}

// GetReleaseBranch returns the ReleaseBranch field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetReleaseBranch() string {
	if o == nil || IsNil(o.ReleaseBranch) {
		var ret string
		return ret
	}
	return *o.ReleaseBranch
}

// GetReleaseBranchOk returns a tuple with the ReleaseBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetReleaseBranchOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseBranch) {
		return nil, false
	}
	return o.ReleaseBranch, true
}

// HasReleaseBranch returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasReleaseBranch() bool {
	if o != nil && !IsNil(o.ReleaseBranch) {
		return true
	}

	return false
}

// SetReleaseBranch gets a reference to the given string and assigns it to the ReleaseBranch field.
func (o *V0ReleaseCreateAppStoreParams) SetReleaseBranch(v string) {
	o.ReleaseBranch = &v
}

// GetSlackWebhookUrl returns the SlackWebhookUrl field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetSlackWebhookUrl() string {
	if o == nil || IsNil(o.SlackWebhookUrl) {
		var ret string
		return ret
	}
	return *o.SlackWebhookUrl
}

// GetSlackWebhookUrlOk returns a tuple with the SlackWebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetSlackWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SlackWebhookUrl) {
		return nil, false
	}
	return o.SlackWebhookUrl, true
}

// HasSlackWebhookUrl returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasSlackWebhookUrl() bool {
	if o != nil && !IsNil(o.SlackWebhookUrl) {
		return true
	}

	return false
}

// SetSlackWebhookUrl gets a reference to the given string and assigns it to the SlackWebhookUrl field.
func (o *V0ReleaseCreateAppStoreParams) SetSlackWebhookUrl(v string) {
	o.SlackWebhookUrl = &v
}

// GetTeamsWebhookUrl returns the TeamsWebhookUrl field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetTeamsWebhookUrl() string {
	if o == nil || IsNil(o.TeamsWebhookUrl) {
		var ret string
		return ret
	}
	return *o.TeamsWebhookUrl
}

// GetTeamsWebhookUrlOk returns a tuple with the TeamsWebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetTeamsWebhookUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TeamsWebhookUrl) {
		return nil, false
	}
	return o.TeamsWebhookUrl, true
}

// HasTeamsWebhookUrl returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasTeamsWebhookUrl() bool {
	if o != nil && !IsNil(o.TeamsWebhookUrl) {
		return true
	}

	return false
}

// SetTeamsWebhookUrl gets a reference to the given string and assigns it to the TeamsWebhookUrl field.
func (o *V0ReleaseCreateAppStoreParams) SetTeamsWebhookUrl(v string) {
	o.TeamsWebhookUrl = &v
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise.
func (o *V0ReleaseCreateAppStoreParams) GetWorkflow() string {
	if o == nil || IsNil(o.Workflow) {
		var ret string
		return ret
	}
	return *o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0ReleaseCreateAppStoreParams) GetWorkflowOk() (*string, bool) {
	if o == nil || IsNil(o.Workflow) {
		return nil, false
	}
	return o.Workflow, true
}

// HasWorkflow returns a boolean if a field has been set.
func (o *V0ReleaseCreateAppStoreParams) HasWorkflow() bool {
	if o != nil && !IsNil(o.Workflow) {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given string and assigns it to the Workflow field.
func (o *V0ReleaseCreateAppStoreParams) SetWorkflow(v string) {
	o.Workflow = &v
}

func (o V0ReleaseCreateAppStoreParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0ReleaseCreateAppStoreParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutomaticTestflightUpload) {
		toSerialize["automatic_testflight_upload"] = o.AutomaticTestflightUpload
	}
	toSerialize["bundle_id"] = o.BundleId
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ReleaseBranch) {
		toSerialize["release_branch"] = o.ReleaseBranch
	}
	if !IsNil(o.SlackWebhookUrl) {
		toSerialize["slack_webhook_url"] = o.SlackWebhookUrl
	}
	if !IsNil(o.TeamsWebhookUrl) {
		toSerialize["teams_webhook_url"] = o.TeamsWebhookUrl
	}
	if !IsNil(o.Workflow) {
		toSerialize["workflow"] = o.Workflow
	}
	return toSerialize, nil
}

func (o *V0ReleaseCreateAppStoreParams) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bundle_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0ReleaseCreateAppStoreParams := _V0ReleaseCreateAppStoreParams{}

	err = json.Unmarshal(bytes, &varV0ReleaseCreateAppStoreParams)

	if err != nil {
		return err
	}

	*o = V0ReleaseCreateAppStoreParams(varV0ReleaseCreateAppStoreParams)

	return err
}

type NullableV0ReleaseCreateAppStoreParams struct {
	value *V0ReleaseCreateAppStoreParams
	isSet bool
}

func (v NullableV0ReleaseCreateAppStoreParams) Get() *V0ReleaseCreateAppStoreParams {
	return v.value
}

func (v *NullableV0ReleaseCreateAppStoreParams) Set(val *V0ReleaseCreateAppStoreParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0ReleaseCreateAppStoreParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0ReleaseCreateAppStoreParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0ReleaseCreateAppStoreParams(val *V0ReleaseCreateAppStoreParams) *NullableV0ReleaseCreateAppStoreParams {
	return &NullableV0ReleaseCreateAppStoreParams{value: val, isSet: true}
}

func (v NullableV0ReleaseCreateAppStoreParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0ReleaseCreateAppStoreParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


