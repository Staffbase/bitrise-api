/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0WebhookRespModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0WebhookRespModel{}

// V0WebhookRespModel struct for V0WebhookRespModel
type V0WebhookRespModel struct {
	Status *string `json:"status,omitempty"`
}

// NewV0WebhookRespModel instantiates a new V0WebhookRespModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0WebhookRespModel() *V0WebhookRespModel {
	this := V0WebhookRespModel{}
	return &this
}

// NewV0WebhookRespModelWithDefaults instantiates a new V0WebhookRespModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0WebhookRespModelWithDefaults() *V0WebhookRespModel {
	this := V0WebhookRespModel{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V0WebhookRespModel) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0WebhookRespModel) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V0WebhookRespModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V0WebhookRespModel) SetStatus(v string) {
	o.Status = &v
}

func (o V0WebhookRespModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0WebhookRespModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV0WebhookRespModel struct {
	value *V0WebhookRespModel
	isSet bool
}

func (v NullableV0WebhookRespModel) Get() *V0WebhookRespModel {
	return v.value
}

func (v *NullableV0WebhookRespModel) Set(val *V0WebhookRespModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0WebhookRespModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0WebhookRespModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0WebhookRespModel(val *V0WebhookRespModel) *NullableV0WebhookRespModel {
	return &NullableV0WebhookRespModel{value: val, isSet: true}
}

func (v NullableV0WebhookRespModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0WebhookRespModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


