/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0BuildCertificateResponseItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0BuildCertificateResponseItemModel{}

// V0BuildCertificateResponseItemModel struct for V0BuildCertificateResponseItemModel
type V0BuildCertificateResponseItemModel struct {
	CertificatePassword *string `json:"certificate_password,omitempty"`
	DownloadUrl *string `json:"download_url,omitempty"`
	IsExpose *bool `json:"is_expose,omitempty"`
	IsProtected *bool `json:"is_protected,omitempty"`
	Processed *bool `json:"processed,omitempty"`
	Slug *string `json:"slug,omitempty"`
	UploadFileName *string `json:"upload_file_name,omitempty"`
	UploadFileSize *int32 `json:"upload_file_size,omitempty"`
	UploadUrl *string `json:"upload_url,omitempty"`
}

// NewV0BuildCertificateResponseItemModel instantiates a new V0BuildCertificateResponseItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0BuildCertificateResponseItemModel() *V0BuildCertificateResponseItemModel {
	this := V0BuildCertificateResponseItemModel{}
	return &this
}

// NewV0BuildCertificateResponseItemModelWithDefaults instantiates a new V0BuildCertificateResponseItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0BuildCertificateResponseItemModelWithDefaults() *V0BuildCertificateResponseItemModel {
	this := V0BuildCertificateResponseItemModel{}
	return &this
}

// GetCertificatePassword returns the CertificatePassword field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetCertificatePassword() string {
	if o == nil || IsNil(o.CertificatePassword) {
		var ret string
		return ret
	}
	return *o.CertificatePassword
}

// GetCertificatePasswordOk returns a tuple with the CertificatePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetCertificatePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.CertificatePassword) {
		return nil, false
	}
	return o.CertificatePassword, true
}

// HasCertificatePassword returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasCertificatePassword() bool {
	if o != nil && !IsNil(o.CertificatePassword) {
		return true
	}

	return false
}

// SetCertificatePassword gets a reference to the given string and assigns it to the CertificatePassword field.
func (o *V0BuildCertificateResponseItemModel) SetCertificatePassword(v string) {
	o.CertificatePassword = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetDownloadUrl() string {
	if o == nil || IsNil(o.DownloadUrl) {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadUrl) {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasDownloadUrl() bool {
	if o != nil && !IsNil(o.DownloadUrl) {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *V0BuildCertificateResponseItemModel) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetIsExpose returns the IsExpose field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetIsExpose() bool {
	if o == nil || IsNil(o.IsExpose) {
		var ret bool
		return ret
	}
	return *o.IsExpose
}

// GetIsExposeOk returns a tuple with the IsExpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetIsExposeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExpose) {
		return nil, false
	}
	return o.IsExpose, true
}

// HasIsExpose returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasIsExpose() bool {
	if o != nil && !IsNil(o.IsExpose) {
		return true
	}

	return false
}

// SetIsExpose gets a reference to the given bool and assigns it to the IsExpose field.
func (o *V0BuildCertificateResponseItemModel) SetIsExpose(v bool) {
	o.IsExpose = &v
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetIsProtected() bool {
	if o == nil || IsNil(o.IsProtected) {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetIsProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProtected) {
		return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasIsProtected() bool {
	if o != nil && !IsNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *V0BuildCertificateResponseItemModel) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetProcessed returns the Processed field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetProcessed() bool {
	if o == nil || IsNil(o.Processed) {
		var ret bool
		return ret
	}
	return *o.Processed
}

// GetProcessedOk returns a tuple with the Processed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetProcessedOk() (*bool, bool) {
	if o == nil || IsNil(o.Processed) {
		return nil, false
	}
	return o.Processed, true
}

// HasProcessed returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasProcessed() bool {
	if o != nil && !IsNil(o.Processed) {
		return true
	}

	return false
}

// SetProcessed gets a reference to the given bool and assigns it to the Processed field.
func (o *V0BuildCertificateResponseItemModel) SetProcessed(v bool) {
	o.Processed = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *V0BuildCertificateResponseItemModel) SetSlug(v string) {
	o.Slug = &v
}

// GetUploadFileName returns the UploadFileName field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetUploadFileName() string {
	if o == nil || IsNil(o.UploadFileName) {
		var ret string
		return ret
	}
	return *o.UploadFileName
}

// GetUploadFileNameOk returns a tuple with the UploadFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetUploadFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.UploadFileName) {
		return nil, false
	}
	return o.UploadFileName, true
}

// HasUploadFileName returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasUploadFileName() bool {
	if o != nil && !IsNil(o.UploadFileName) {
		return true
	}

	return false
}

// SetUploadFileName gets a reference to the given string and assigns it to the UploadFileName field.
func (o *V0BuildCertificateResponseItemModel) SetUploadFileName(v string) {
	o.UploadFileName = &v
}

// GetUploadFileSize returns the UploadFileSize field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetUploadFileSize() int32 {
	if o == nil || IsNil(o.UploadFileSize) {
		var ret int32
		return ret
	}
	return *o.UploadFileSize
}

// GetUploadFileSizeOk returns a tuple with the UploadFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetUploadFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadFileSize) {
		return nil, false
	}
	return o.UploadFileSize, true
}

// HasUploadFileSize returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasUploadFileSize() bool {
	if o != nil && !IsNil(o.UploadFileSize) {
		return true
	}

	return false
}

// SetUploadFileSize gets a reference to the given int32 and assigns it to the UploadFileSize field.
func (o *V0BuildCertificateResponseItemModel) SetUploadFileSize(v int32) {
	o.UploadFileSize = &v
}

// GetUploadUrl returns the UploadUrl field value if set, zero value otherwise.
func (o *V0BuildCertificateResponseItemModel) GetUploadUrl() string {
	if o == nil || IsNil(o.UploadUrl) {
		var ret string
		return ret
	}
	return *o.UploadUrl
}

// GetUploadUrlOk returns a tuple with the UploadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildCertificateResponseItemModel) GetUploadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UploadUrl) {
		return nil, false
	}
	return o.UploadUrl, true
}

// HasUploadUrl returns a boolean if a field has been set.
func (o *V0BuildCertificateResponseItemModel) HasUploadUrl() bool {
	if o != nil && !IsNil(o.UploadUrl) {
		return true
	}

	return false
}

// SetUploadUrl gets a reference to the given string and assigns it to the UploadUrl field.
func (o *V0BuildCertificateResponseItemModel) SetUploadUrl(v string) {
	o.UploadUrl = &v
}

func (o V0BuildCertificateResponseItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0BuildCertificateResponseItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertificatePassword) {
		toSerialize["certificate_password"] = o.CertificatePassword
	}
	if !IsNil(o.DownloadUrl) {
		toSerialize["download_url"] = o.DownloadUrl
	}
	if !IsNil(o.IsExpose) {
		toSerialize["is_expose"] = o.IsExpose
	}
	if !IsNil(o.IsProtected) {
		toSerialize["is_protected"] = o.IsProtected
	}
	if !IsNil(o.Processed) {
		toSerialize["processed"] = o.Processed
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.UploadFileName) {
		toSerialize["upload_file_name"] = o.UploadFileName
	}
	if !IsNil(o.UploadFileSize) {
		toSerialize["upload_file_size"] = o.UploadFileSize
	}
	if !IsNil(o.UploadUrl) {
		toSerialize["upload_url"] = o.UploadUrl
	}
	return toSerialize, nil
}

type NullableV0BuildCertificateResponseItemModel struct {
	value *V0BuildCertificateResponseItemModel
	isSet bool
}

func (v NullableV0BuildCertificateResponseItemModel) Get() *V0BuildCertificateResponseItemModel {
	return v.value
}

func (v *NullableV0BuildCertificateResponseItemModel) Set(val *V0BuildCertificateResponseItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0BuildCertificateResponseItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0BuildCertificateResponseItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0BuildCertificateResponseItemModel(val *V0BuildCertificateResponseItemModel) *NullableV0BuildCertificateResponseItemModel {
	return &NullableV0BuildCertificateResponseItemModel{value: val, isSet: true}
}

func (v NullableV0BuildCertificateResponseItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0BuildCertificateResponseItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


