/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineabledomainBuildToolInvocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineabledomainBuildToolInvocation{}

// PipelineabledomainBuildToolInvocation struct for PipelineabledomainBuildToolInvocation
type PipelineabledomainBuildToolInvocation struct {
	InvocationId *string `json:"invocation_id,omitempty"`
	Tool *string `json:"tool,omitempty"`
	ToolVersion *string `json:"tool_version,omitempty"`
}

// NewPipelineabledomainBuildToolInvocation instantiates a new PipelineabledomainBuildToolInvocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineabledomainBuildToolInvocation() *PipelineabledomainBuildToolInvocation {
	this := PipelineabledomainBuildToolInvocation{}
	return &this
}

// NewPipelineabledomainBuildToolInvocationWithDefaults instantiates a new PipelineabledomainBuildToolInvocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineabledomainBuildToolInvocationWithDefaults() *PipelineabledomainBuildToolInvocation {
	this := PipelineabledomainBuildToolInvocation{}
	return &this
}

// GetInvocationId returns the InvocationId field value if set, zero value otherwise.
func (o *PipelineabledomainBuildToolInvocation) GetInvocationId() string {
	if o == nil || IsNil(o.InvocationId) {
		var ret string
		return ret
	}
	return *o.InvocationId
}

// GetInvocationIdOk returns a tuple with the InvocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainBuildToolInvocation) GetInvocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InvocationId) {
		return nil, false
	}
	return o.InvocationId, true
}

// HasInvocationId returns a boolean if a field has been set.
func (o *PipelineabledomainBuildToolInvocation) HasInvocationId() bool {
	if o != nil && !IsNil(o.InvocationId) {
		return true
	}

	return false
}

// SetInvocationId gets a reference to the given string and assigns it to the InvocationId field.
func (o *PipelineabledomainBuildToolInvocation) SetInvocationId(v string) {
	o.InvocationId = &v
}

// GetTool returns the Tool field value if set, zero value otherwise.
func (o *PipelineabledomainBuildToolInvocation) GetTool() string {
	if o == nil || IsNil(o.Tool) {
		var ret string
		return ret
	}
	return *o.Tool
}

// GetToolOk returns a tuple with the Tool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainBuildToolInvocation) GetToolOk() (*string, bool) {
	if o == nil || IsNil(o.Tool) {
		return nil, false
	}
	return o.Tool, true
}

// HasTool returns a boolean if a field has been set.
func (o *PipelineabledomainBuildToolInvocation) HasTool() bool {
	if o != nil && !IsNil(o.Tool) {
		return true
	}

	return false
}

// SetTool gets a reference to the given string and assigns it to the Tool field.
func (o *PipelineabledomainBuildToolInvocation) SetTool(v string) {
	o.Tool = &v
}

// GetToolVersion returns the ToolVersion field value if set, zero value otherwise.
func (o *PipelineabledomainBuildToolInvocation) GetToolVersion() string {
	if o == nil || IsNil(o.ToolVersion) {
		var ret string
		return ret
	}
	return *o.ToolVersion
}

// GetToolVersionOk returns a tuple with the ToolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainBuildToolInvocation) GetToolVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ToolVersion) {
		return nil, false
	}
	return o.ToolVersion, true
}

// HasToolVersion returns a boolean if a field has been set.
func (o *PipelineabledomainBuildToolInvocation) HasToolVersion() bool {
	if o != nil && !IsNil(o.ToolVersion) {
		return true
	}

	return false
}

// SetToolVersion gets a reference to the given string and assigns it to the ToolVersion field.
func (o *PipelineabledomainBuildToolInvocation) SetToolVersion(v string) {
	o.ToolVersion = &v
}

func (o PipelineabledomainBuildToolInvocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineabledomainBuildToolInvocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InvocationId) {
		toSerialize["invocation_id"] = o.InvocationId
	}
	if !IsNil(o.Tool) {
		toSerialize["tool"] = o.Tool
	}
	if !IsNil(o.ToolVersion) {
		toSerialize["tool_version"] = o.ToolVersion
	}
	return toSerialize, nil
}

type NullablePipelineabledomainBuildToolInvocation struct {
	value *PipelineabledomainBuildToolInvocation
	isSet bool
}

func (v NullablePipelineabledomainBuildToolInvocation) Get() *PipelineabledomainBuildToolInvocation {
	return v.value
}

func (v *NullablePipelineabledomainBuildToolInvocation) Set(val *PipelineabledomainBuildToolInvocation) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineabledomainBuildToolInvocation) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineabledomainBuildToolInvocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineabledomainBuildToolInvocation(val *PipelineabledomainBuildToolInvocation) *NullablePipelineabledomainBuildToolInvocation {
	return &NullablePipelineabledomainBuildToolInvocation{value: val, isSet: true}
}

func (v NullablePipelineabledomainBuildToolInvocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineabledomainBuildToolInvocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


