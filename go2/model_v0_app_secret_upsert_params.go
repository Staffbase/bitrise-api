/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0AppSecretUpsertParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0AppSecretUpsertParams{}

// V0AppSecretUpsertParams struct for V0AppSecretUpsertParams
type V0AppSecretUpsertParams struct {
	// Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
	ExpandInStepInputs *bool `json:"expand_in_step_inputs,omitempty"`
	// Expose for Pull Requests?
	IsExposedForPullRequests *bool `json:"is_exposed_for_pull_requests,omitempty"`
	// Secret marked as protected?
	IsProtected *bool `json:"is_protected,omitempty"`
	// Value of the secret
	Value *string `json:"value,omitempty"`
}

// NewV0AppSecretUpsertParams instantiates a new V0AppSecretUpsertParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0AppSecretUpsertParams() *V0AppSecretUpsertParams {
	this := V0AppSecretUpsertParams{}
	return &this
}

// NewV0AppSecretUpsertParamsWithDefaults instantiates a new V0AppSecretUpsertParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0AppSecretUpsertParamsWithDefaults() *V0AppSecretUpsertParams {
	this := V0AppSecretUpsertParams{}
	return &this
}

// GetExpandInStepInputs returns the ExpandInStepInputs field value if set, zero value otherwise.
func (o *V0AppSecretUpsertParams) GetExpandInStepInputs() bool {
	if o == nil || IsNil(o.ExpandInStepInputs) {
		var ret bool
		return ret
	}
	return *o.ExpandInStepInputs
}

// GetExpandInStepInputsOk returns a tuple with the ExpandInStepInputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecretUpsertParams) GetExpandInStepInputsOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpandInStepInputs) {
		return nil, false
	}
	return o.ExpandInStepInputs, true
}

// HasExpandInStepInputs returns a boolean if a field has been set.
func (o *V0AppSecretUpsertParams) HasExpandInStepInputs() bool {
	if o != nil && !IsNil(o.ExpandInStepInputs) {
		return true
	}

	return false
}

// SetExpandInStepInputs gets a reference to the given bool and assigns it to the ExpandInStepInputs field.
func (o *V0AppSecretUpsertParams) SetExpandInStepInputs(v bool) {
	o.ExpandInStepInputs = &v
}

// GetIsExposedForPullRequests returns the IsExposedForPullRequests field value if set, zero value otherwise.
func (o *V0AppSecretUpsertParams) GetIsExposedForPullRequests() bool {
	if o == nil || IsNil(o.IsExposedForPullRequests) {
		var ret bool
		return ret
	}
	return *o.IsExposedForPullRequests
}

// GetIsExposedForPullRequestsOk returns a tuple with the IsExposedForPullRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecretUpsertParams) GetIsExposedForPullRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExposedForPullRequests) {
		return nil, false
	}
	return o.IsExposedForPullRequests, true
}

// HasIsExposedForPullRequests returns a boolean if a field has been set.
func (o *V0AppSecretUpsertParams) HasIsExposedForPullRequests() bool {
	if o != nil && !IsNil(o.IsExposedForPullRequests) {
		return true
	}

	return false
}

// SetIsExposedForPullRequests gets a reference to the given bool and assigns it to the IsExposedForPullRequests field.
func (o *V0AppSecretUpsertParams) SetIsExposedForPullRequests(v bool) {
	o.IsExposedForPullRequests = &v
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *V0AppSecretUpsertParams) GetIsProtected() bool {
	if o == nil || IsNil(o.IsProtected) {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecretUpsertParams) GetIsProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProtected) {
		return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *V0AppSecretUpsertParams) HasIsProtected() bool {
	if o != nil && !IsNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *V0AppSecretUpsertParams) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *V0AppSecretUpsertParams) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecretUpsertParams) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *V0AppSecretUpsertParams) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *V0AppSecretUpsertParams) SetValue(v string) {
	o.Value = &v
}

func (o V0AppSecretUpsertParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0AppSecretUpsertParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpandInStepInputs) {
		toSerialize["expand_in_step_inputs"] = o.ExpandInStepInputs
	}
	if !IsNil(o.IsExposedForPullRequests) {
		toSerialize["is_exposed_for_pull_requests"] = o.IsExposedForPullRequests
	}
	if !IsNil(o.IsProtected) {
		toSerialize["is_protected"] = o.IsProtected
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableV0AppSecretUpsertParams struct {
	value *V0AppSecretUpsertParams
	isSet bool
}

func (v NullableV0AppSecretUpsertParams) Get() *V0AppSecretUpsertParams {
	return v.value
}

func (v *NullableV0AppSecretUpsertParams) Set(val *V0AppSecretUpsertParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0AppSecretUpsertParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0AppSecretUpsertParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0AppSecretUpsertParams(val *V0AppSecretUpsertParams) *NullableV0AppSecretUpsertParams {
	return &NullableV0AppSecretUpsertParams{value: val, isSet: true}
}

func (v NullableV0AppSecretUpsertParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0AppSecretUpsertParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


