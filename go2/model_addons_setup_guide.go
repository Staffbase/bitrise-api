/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddonsSetupGuide type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonsSetupGuide{}

// AddonsSetupGuide struct for AddonsSetupGuide
type AddonsSetupGuide struct {
	Instructions []AddonsSetupInstruction `json:"instructions,omitempty"`
	Notification *string `json:"notification,omitempty"`
}

// NewAddonsSetupGuide instantiates a new AddonsSetupGuide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonsSetupGuide() *AddonsSetupGuide {
	this := AddonsSetupGuide{}
	return &this
}

// NewAddonsSetupGuideWithDefaults instantiates a new AddonsSetupGuide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonsSetupGuideWithDefaults() *AddonsSetupGuide {
	this := AddonsSetupGuide{}
	return &this
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *AddonsSetupGuide) GetInstructions() []AddonsSetupInstruction {
	if o == nil || IsNil(o.Instructions) {
		var ret []AddonsSetupInstruction
		return ret
	}
	return o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsSetupGuide) GetInstructionsOk() ([]AddonsSetupInstruction, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *AddonsSetupGuide) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []AddonsSetupInstruction and assigns it to the Instructions field.
func (o *AddonsSetupGuide) SetInstructions(v []AddonsSetupInstruction) {
	o.Instructions = v
}

// GetNotification returns the Notification field value if set, zero value otherwise.
func (o *AddonsSetupGuide) GetNotification() string {
	if o == nil || IsNil(o.Notification) {
		var ret string
		return ret
	}
	return *o.Notification
}

// GetNotificationOk returns a tuple with the Notification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonsSetupGuide) GetNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.Notification) {
		return nil, false
	}
	return o.Notification, true
}

// HasNotification returns a boolean if a field has been set.
func (o *AddonsSetupGuide) HasNotification() bool {
	if o != nil && !IsNil(o.Notification) {
		return true
	}

	return false
}

// SetNotification gets a reference to the given string and assigns it to the Notification field.
func (o *AddonsSetupGuide) SetNotification(v string) {
	o.Notification = &v
}

func (o AddonsSetupGuide) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonsSetupGuide) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.Notification) {
		toSerialize["notification"] = o.Notification
	}
	return toSerialize, nil
}

type NullableAddonsSetupGuide struct {
	value *AddonsSetupGuide
	isSet bool
}

func (v NullableAddonsSetupGuide) Get() *AddonsSetupGuide {
	return v.value
}

func (v *NullableAddonsSetupGuide) Set(val *AddonsSetupGuide) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonsSetupGuide) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonsSetupGuide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonsSetupGuide(val *AddonsSetupGuide) *NullableAddonsSetupGuide {
	return &NullableAddonsSetupGuide{value: val, isSet: true}
}

func (v NullableAddonsSetupGuide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonsSetupGuide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


