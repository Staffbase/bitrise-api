/*
Bitrise API

Testing WebhookDeliveryItemAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/staffbase/bitrise-api"
)

func Test_openapi_WebhookDeliveryItemAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test WebhookDeliveryItemAPIService WebhookDeliveryItemList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var appWebhookSlug string

		resp, httpRes, err := apiClient.WebhookDeliveryItemAPI.WebhookDeliveryItemList(context.Background(), appSlug, appWebhookSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebhookDeliveryItemAPIService WebhookDeliveryItemRedeliver", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var appWebhookSlug string
		var webhookDeliveryItemSlug string

		resp, httpRes, err := apiClient.WebhookDeliveryItemAPI.WebhookDeliveryItemRedeliver(context.Background(), appSlug, appWebhookSlug, webhookDeliveryItemSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test WebhookDeliveryItemAPIService WebhookDeliveryItemShow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var appWebhookSlug string
		var webhookDeliveryItemSlug string

		resp, httpRes, err := apiClient.WebhookDeliveryItemAPI.WebhookDeliveryItemShow(context.Background(), appSlug, appWebhookSlug, webhookDeliveryItemSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
