/*
Bitrise API

Testing ProvisioningProfileAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/staffbase/bitrise-api"
)

func Test_openapi_ProvisioningProfileAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileConfirm", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var provisioningProfileSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileConfirm(context.Background(), appSlug, provisioningProfileSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileCreate(context.Background(), appSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var provisioningProfileSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileDelete(context.Background(), appSlug, provisioningProfileSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileList(context.Background(), appSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileShow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var provisioningProfileSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileShow(context.Background(), appSlug, provisioningProfileSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProvisioningProfileAPIService ProvisioningProfileUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var appSlug string
		var provisioningProfileSlug string

		resp, httpRes, err := apiClient.ProvisioningProfileAPI.ProvisioningProfileUpdate(context.Background(), appSlug, provisioningProfileSlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
