/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0BuildParamsEnvironment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0BuildParamsEnvironment{}

// V0BuildParamsEnvironment struct for V0BuildParamsEnvironment
type V0BuildParamsEnvironment struct {
	IsExpand *bool `json:"is_expand,omitempty"`
	MappedTo *string `json:"mapped_to,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewV0BuildParamsEnvironment instantiates a new V0BuildParamsEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0BuildParamsEnvironment() *V0BuildParamsEnvironment {
	this := V0BuildParamsEnvironment{}
	return &this
}

// NewV0BuildParamsEnvironmentWithDefaults instantiates a new V0BuildParamsEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0BuildParamsEnvironmentWithDefaults() *V0BuildParamsEnvironment {
	this := V0BuildParamsEnvironment{}
	return &this
}

// GetIsExpand returns the IsExpand field value if set, zero value otherwise.
func (o *V0BuildParamsEnvironment) GetIsExpand() bool {
	if o == nil || IsNil(o.IsExpand) {
		var ret bool
		return ret
	}
	return *o.IsExpand
}

// GetIsExpandOk returns a tuple with the IsExpand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildParamsEnvironment) GetIsExpandOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExpand) {
		return nil, false
	}
	return o.IsExpand, true
}

// HasIsExpand returns a boolean if a field has been set.
func (o *V0BuildParamsEnvironment) HasIsExpand() bool {
	if o != nil && !IsNil(o.IsExpand) {
		return true
	}

	return false
}

// SetIsExpand gets a reference to the given bool and assigns it to the IsExpand field.
func (o *V0BuildParamsEnvironment) SetIsExpand(v bool) {
	o.IsExpand = &v
}

// GetMappedTo returns the MappedTo field value if set, zero value otherwise.
func (o *V0BuildParamsEnvironment) GetMappedTo() string {
	if o == nil || IsNil(o.MappedTo) {
		var ret string
		return ret
	}
	return *o.MappedTo
}

// GetMappedToOk returns a tuple with the MappedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildParamsEnvironment) GetMappedToOk() (*string, bool) {
	if o == nil || IsNil(o.MappedTo) {
		return nil, false
	}
	return o.MappedTo, true
}

// HasMappedTo returns a boolean if a field has been set.
func (o *V0BuildParamsEnvironment) HasMappedTo() bool {
	if o != nil && !IsNil(o.MappedTo) {
		return true
	}

	return false
}

// SetMappedTo gets a reference to the given string and assigns it to the MappedTo field.
func (o *V0BuildParamsEnvironment) SetMappedTo(v string) {
	o.MappedTo = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *V0BuildParamsEnvironment) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildParamsEnvironment) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *V0BuildParamsEnvironment) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *V0BuildParamsEnvironment) SetValue(v string) {
	o.Value = &v
}

func (o V0BuildParamsEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0BuildParamsEnvironment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsExpand) {
		toSerialize["is_expand"] = o.IsExpand
	}
	if !IsNil(o.MappedTo) {
		toSerialize["mapped_to"] = o.MappedTo
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableV0BuildParamsEnvironment struct {
	value *V0BuildParamsEnvironment
	isSet bool
}

func (v NullableV0BuildParamsEnvironment) Get() *V0BuildParamsEnvironment {
	return v.value
}

func (v *NullableV0BuildParamsEnvironment) Set(val *V0BuildParamsEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableV0BuildParamsEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableV0BuildParamsEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0BuildParamsEnvironment(val *V0BuildParamsEnvironment) *NullableV0BuildParamsEnvironment {
	return &NullableV0BuildParamsEnvironment{value: val, isSet: true}
}

func (v NullableV0BuildParamsEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0BuildParamsEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


