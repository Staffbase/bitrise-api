/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0OrganizationDataModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0OrganizationDataModel{}

// V0OrganizationDataModel struct for V0OrganizationDataModel
type V0OrganizationDataModel struct {
	AvatarIconUrl *NullsString `json:"avatar_icon_url,omitempty"`
	ConcurrencyCount *int32 `json:"concurrency_count,omitempty"`
	Name *string `json:"name,omitempty"`
	Owners []V0OrganizationOwner `json:"owners,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

// NewV0OrganizationDataModel instantiates a new V0OrganizationDataModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0OrganizationDataModel() *V0OrganizationDataModel {
	this := V0OrganizationDataModel{}
	return &this
}

// NewV0OrganizationDataModelWithDefaults instantiates a new V0OrganizationDataModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0OrganizationDataModelWithDefaults() *V0OrganizationDataModel {
	this := V0OrganizationDataModel{}
	return &this
}

// GetAvatarIconUrl returns the AvatarIconUrl field value if set, zero value otherwise.
func (o *V0OrganizationDataModel) GetAvatarIconUrl() NullsString {
	if o == nil || IsNil(o.AvatarIconUrl) {
		var ret NullsString
		return ret
	}
	return *o.AvatarIconUrl
}

// GetAvatarIconUrlOk returns a tuple with the AvatarIconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0OrganizationDataModel) GetAvatarIconUrlOk() (*NullsString, bool) {
	if o == nil || IsNil(o.AvatarIconUrl) {
		return nil, false
	}
	return o.AvatarIconUrl, true
}

// HasAvatarIconUrl returns a boolean if a field has been set.
func (o *V0OrganizationDataModel) HasAvatarIconUrl() bool {
	if o != nil && !IsNil(o.AvatarIconUrl) {
		return true
	}

	return false
}

// SetAvatarIconUrl gets a reference to the given NullsString and assigns it to the AvatarIconUrl field.
func (o *V0OrganizationDataModel) SetAvatarIconUrl(v NullsString) {
	o.AvatarIconUrl = &v
}

// GetConcurrencyCount returns the ConcurrencyCount field value if set, zero value otherwise.
func (o *V0OrganizationDataModel) GetConcurrencyCount() int32 {
	if o == nil || IsNil(o.ConcurrencyCount) {
		var ret int32
		return ret
	}
	return *o.ConcurrencyCount
}

// GetConcurrencyCountOk returns a tuple with the ConcurrencyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0OrganizationDataModel) GetConcurrencyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ConcurrencyCount) {
		return nil, false
	}
	return o.ConcurrencyCount, true
}

// HasConcurrencyCount returns a boolean if a field has been set.
func (o *V0OrganizationDataModel) HasConcurrencyCount() bool {
	if o != nil && !IsNil(o.ConcurrencyCount) {
		return true
	}

	return false
}

// SetConcurrencyCount gets a reference to the given int32 and assigns it to the ConcurrencyCount field.
func (o *V0OrganizationDataModel) SetConcurrencyCount(v int32) {
	o.ConcurrencyCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0OrganizationDataModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0OrganizationDataModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0OrganizationDataModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0OrganizationDataModel) SetName(v string) {
	o.Name = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *V0OrganizationDataModel) GetOwners() []V0OrganizationOwner {
	if o == nil || IsNil(o.Owners) {
		var ret []V0OrganizationOwner
		return ret
	}
	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0OrganizationDataModel) GetOwnersOk() ([]V0OrganizationOwner, bool) {
	if o == nil || IsNil(o.Owners) {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *V0OrganizationDataModel) HasOwners() bool {
	if o != nil && !IsNil(o.Owners) {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []V0OrganizationOwner and assigns it to the Owners field.
func (o *V0OrganizationDataModel) SetOwners(v []V0OrganizationOwner) {
	o.Owners = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *V0OrganizationDataModel) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0OrganizationDataModel) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *V0OrganizationDataModel) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *V0OrganizationDataModel) SetSlug(v string) {
	o.Slug = &v
}

func (o V0OrganizationDataModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0OrganizationDataModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvatarIconUrl) {
		toSerialize["avatar_icon_url"] = o.AvatarIconUrl
	}
	if !IsNil(o.ConcurrencyCount) {
		toSerialize["concurrency_count"] = o.ConcurrencyCount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owners) {
		toSerialize["owners"] = o.Owners
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	return toSerialize, nil
}

type NullableV0OrganizationDataModel struct {
	value *V0OrganizationDataModel
	isSet bool
}

func (v NullableV0OrganizationDataModel) Get() *V0OrganizationDataModel {
	return v.value
}

func (v *NullableV0OrganizationDataModel) Set(val *V0OrganizationDataModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0OrganizationDataModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0OrganizationDataModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0OrganizationDataModel(val *V0OrganizationDataModel) *NullableV0OrganizationDataModel {
	return &NullableV0OrganizationDataModel{value: val, isSet: true}
}

func (v NullableV0OrganizationDataModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0OrganizationDataModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


