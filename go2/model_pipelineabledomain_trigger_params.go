/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PipelineabledomainTriggerParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineabledomainTriggerParams{}

// PipelineabledomainTriggerParams struct for PipelineabledomainTriggerParams
type PipelineabledomainTriggerParams struct {
	Branch *string `json:"branch,omitempty"`
	BranchDest *string `json:"branch_dest,omitempty"`
	BranchDestRepoOwner *string `json:"branch_dest_repo_owner,omitempty"`
	BranchRepoOwner *string `json:"branch_repo_owner,omitempty"`
	CommitHash *string `json:"commit_hash,omitempty"`
	CommitMessage *string `json:"commit_message,omitempty"`
	Environments []PipelineabledomainEnvironments `json:"environments,omitempty"`
	PullRequestAuthor *string `json:"pull_request_author,omitempty"`
	PullRequestHeadBranch *string `json:"pull_request_head_branch,omitempty"`
	PullRequestId map[string]interface{} `json:"pull_request_id,omitempty"`
	PullRequestMergeBranch *string `json:"pull_request_merge_branch,omitempty"`
	PullRequestRepositoryUrl *string `json:"pull_request_repository_url,omitempty"`
	PullRequestUnverifiedMergeBranch *string `json:"pull_request_unverified_merge_branch,omitempty"`
	Tag map[string]interface{} `json:"tag,omitempty"`
}

// NewPipelineabledomainTriggerParams instantiates a new PipelineabledomainTriggerParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineabledomainTriggerParams() *PipelineabledomainTriggerParams {
	this := PipelineabledomainTriggerParams{}
	return &this
}

// NewPipelineabledomainTriggerParamsWithDefaults instantiates a new PipelineabledomainTriggerParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineabledomainTriggerParamsWithDefaults() *PipelineabledomainTriggerParams {
	this := PipelineabledomainTriggerParams{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *PipelineabledomainTriggerParams) SetBranch(v string) {
	o.Branch = &v
}

// GetBranchDest returns the BranchDest field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetBranchDest() string {
	if o == nil || IsNil(o.BranchDest) {
		var ret string
		return ret
	}
	return *o.BranchDest
}

// GetBranchDestOk returns a tuple with the BranchDest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetBranchDestOk() (*string, bool) {
	if o == nil || IsNil(o.BranchDest) {
		return nil, false
	}
	return o.BranchDest, true
}

// HasBranchDest returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasBranchDest() bool {
	if o != nil && !IsNil(o.BranchDest) {
		return true
	}

	return false
}

// SetBranchDest gets a reference to the given string and assigns it to the BranchDest field.
func (o *PipelineabledomainTriggerParams) SetBranchDest(v string) {
	o.BranchDest = &v
}

// GetBranchDestRepoOwner returns the BranchDestRepoOwner field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetBranchDestRepoOwner() string {
	if o == nil || IsNil(o.BranchDestRepoOwner) {
		var ret string
		return ret
	}
	return *o.BranchDestRepoOwner
}

// GetBranchDestRepoOwnerOk returns a tuple with the BranchDestRepoOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetBranchDestRepoOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.BranchDestRepoOwner) {
		return nil, false
	}
	return o.BranchDestRepoOwner, true
}

// HasBranchDestRepoOwner returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasBranchDestRepoOwner() bool {
	if o != nil && !IsNil(o.BranchDestRepoOwner) {
		return true
	}

	return false
}

// SetBranchDestRepoOwner gets a reference to the given string and assigns it to the BranchDestRepoOwner field.
func (o *PipelineabledomainTriggerParams) SetBranchDestRepoOwner(v string) {
	o.BranchDestRepoOwner = &v
}

// GetBranchRepoOwner returns the BranchRepoOwner field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetBranchRepoOwner() string {
	if o == nil || IsNil(o.BranchRepoOwner) {
		var ret string
		return ret
	}
	return *o.BranchRepoOwner
}

// GetBranchRepoOwnerOk returns a tuple with the BranchRepoOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetBranchRepoOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.BranchRepoOwner) {
		return nil, false
	}
	return o.BranchRepoOwner, true
}

// HasBranchRepoOwner returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasBranchRepoOwner() bool {
	if o != nil && !IsNil(o.BranchRepoOwner) {
		return true
	}

	return false
}

// SetBranchRepoOwner gets a reference to the given string and assigns it to the BranchRepoOwner field.
func (o *PipelineabledomainTriggerParams) SetBranchRepoOwner(v string) {
	o.BranchRepoOwner = &v
}

// GetCommitHash returns the CommitHash field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetCommitHash() string {
	if o == nil || IsNil(o.CommitHash) {
		var ret string
		return ret
	}
	return *o.CommitHash
}

// GetCommitHashOk returns a tuple with the CommitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetCommitHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitHash) {
		return nil, false
	}
	return o.CommitHash, true
}

// HasCommitHash returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasCommitHash() bool {
	if o != nil && !IsNil(o.CommitHash) {
		return true
	}

	return false
}

// SetCommitHash gets a reference to the given string and assigns it to the CommitHash field.
func (o *PipelineabledomainTriggerParams) SetCommitHash(v string) {
	o.CommitHash = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetCommitMessage() string {
	if o == nil || IsNil(o.CommitMessage) {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetCommitMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CommitMessage) {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasCommitMessage() bool {
	if o != nil && !IsNil(o.CommitMessage) {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *PipelineabledomainTriggerParams) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetEnvironments() []PipelineabledomainEnvironments {
	if o == nil || IsNil(o.Environments) {
		var ret []PipelineabledomainEnvironments
		return ret
	}
	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetEnvironmentsOk() ([]PipelineabledomainEnvironments, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []PipelineabledomainEnvironments and assigns it to the Environments field.
func (o *PipelineabledomainTriggerParams) SetEnvironments(v []PipelineabledomainEnvironments) {
	o.Environments = v
}

// GetPullRequestAuthor returns the PullRequestAuthor field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestAuthor() string {
	if o == nil || IsNil(o.PullRequestAuthor) {
		var ret string
		return ret
	}
	return *o.PullRequestAuthor
}

// GetPullRequestAuthorOk returns a tuple with the PullRequestAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.PullRequestAuthor) {
		return nil, false
	}
	return o.PullRequestAuthor, true
}

// HasPullRequestAuthor returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestAuthor() bool {
	if o != nil && !IsNil(o.PullRequestAuthor) {
		return true
	}

	return false
}

// SetPullRequestAuthor gets a reference to the given string and assigns it to the PullRequestAuthor field.
func (o *PipelineabledomainTriggerParams) SetPullRequestAuthor(v string) {
	o.PullRequestAuthor = &v
}

// GetPullRequestHeadBranch returns the PullRequestHeadBranch field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestHeadBranch() string {
	if o == nil || IsNil(o.PullRequestHeadBranch) {
		var ret string
		return ret
	}
	return *o.PullRequestHeadBranch
}

// GetPullRequestHeadBranchOk returns a tuple with the PullRequestHeadBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestHeadBranchOk() (*string, bool) {
	if o == nil || IsNil(o.PullRequestHeadBranch) {
		return nil, false
	}
	return o.PullRequestHeadBranch, true
}

// HasPullRequestHeadBranch returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestHeadBranch() bool {
	if o != nil && !IsNil(o.PullRequestHeadBranch) {
		return true
	}

	return false
}

// SetPullRequestHeadBranch gets a reference to the given string and assigns it to the PullRequestHeadBranch field.
func (o *PipelineabledomainTriggerParams) SetPullRequestHeadBranch(v string) {
	o.PullRequestHeadBranch = &v
}

// GetPullRequestId returns the PullRequestId field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestId() map[string]interface{} {
	if o == nil || IsNil(o.PullRequestId) {
		var ret map[string]interface{}
		return ret
	}
	return o.PullRequestId
}

// GetPullRequestIdOk returns a tuple with the PullRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PullRequestId) {
		return map[string]interface{}{}, false
	}
	return o.PullRequestId, true
}

// HasPullRequestId returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestId() bool {
	if o != nil && !IsNil(o.PullRequestId) {
		return true
	}

	return false
}

// SetPullRequestId gets a reference to the given map[string]interface{} and assigns it to the PullRequestId field.
func (o *PipelineabledomainTriggerParams) SetPullRequestId(v map[string]interface{}) {
	o.PullRequestId = v
}

// GetPullRequestMergeBranch returns the PullRequestMergeBranch field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestMergeBranch() string {
	if o == nil || IsNil(o.PullRequestMergeBranch) {
		var ret string
		return ret
	}
	return *o.PullRequestMergeBranch
}

// GetPullRequestMergeBranchOk returns a tuple with the PullRequestMergeBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestMergeBranchOk() (*string, bool) {
	if o == nil || IsNil(o.PullRequestMergeBranch) {
		return nil, false
	}
	return o.PullRequestMergeBranch, true
}

// HasPullRequestMergeBranch returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestMergeBranch() bool {
	if o != nil && !IsNil(o.PullRequestMergeBranch) {
		return true
	}

	return false
}

// SetPullRequestMergeBranch gets a reference to the given string and assigns it to the PullRequestMergeBranch field.
func (o *PipelineabledomainTriggerParams) SetPullRequestMergeBranch(v string) {
	o.PullRequestMergeBranch = &v
}

// GetPullRequestRepositoryUrl returns the PullRequestRepositoryUrl field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestRepositoryUrl() string {
	if o == nil || IsNil(o.PullRequestRepositoryUrl) {
		var ret string
		return ret
	}
	return *o.PullRequestRepositoryUrl
}

// GetPullRequestRepositoryUrlOk returns a tuple with the PullRequestRepositoryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestRepositoryUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PullRequestRepositoryUrl) {
		return nil, false
	}
	return o.PullRequestRepositoryUrl, true
}

// HasPullRequestRepositoryUrl returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestRepositoryUrl() bool {
	if o != nil && !IsNil(o.PullRequestRepositoryUrl) {
		return true
	}

	return false
}

// SetPullRequestRepositoryUrl gets a reference to the given string and assigns it to the PullRequestRepositoryUrl field.
func (o *PipelineabledomainTriggerParams) SetPullRequestRepositoryUrl(v string) {
	o.PullRequestRepositoryUrl = &v
}

// GetPullRequestUnverifiedMergeBranch returns the PullRequestUnverifiedMergeBranch field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetPullRequestUnverifiedMergeBranch() string {
	if o == nil || IsNil(o.PullRequestUnverifiedMergeBranch) {
		var ret string
		return ret
	}
	return *o.PullRequestUnverifiedMergeBranch
}

// GetPullRequestUnverifiedMergeBranchOk returns a tuple with the PullRequestUnverifiedMergeBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetPullRequestUnverifiedMergeBranchOk() (*string, bool) {
	if o == nil || IsNil(o.PullRequestUnverifiedMergeBranch) {
		return nil, false
	}
	return o.PullRequestUnverifiedMergeBranch, true
}

// HasPullRequestUnverifiedMergeBranch returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasPullRequestUnverifiedMergeBranch() bool {
	if o != nil && !IsNil(o.PullRequestUnverifiedMergeBranch) {
		return true
	}

	return false
}

// SetPullRequestUnverifiedMergeBranch gets a reference to the given string and assigns it to the PullRequestUnverifiedMergeBranch field.
func (o *PipelineabledomainTriggerParams) SetPullRequestUnverifiedMergeBranch(v string) {
	o.PullRequestUnverifiedMergeBranch = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *PipelineabledomainTriggerParams) GetTag() map[string]interface{} {
	if o == nil || IsNil(o.Tag) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineabledomainTriggerParams) GetTagOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return map[string]interface{}{}, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *PipelineabledomainTriggerParams) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given map[string]interface{} and assigns it to the Tag field.
func (o *PipelineabledomainTriggerParams) SetTag(v map[string]interface{}) {
	o.Tag = v
}

func (o PipelineabledomainTriggerParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PipelineabledomainTriggerParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.BranchDest) {
		toSerialize["branch_dest"] = o.BranchDest
	}
	if !IsNil(o.BranchDestRepoOwner) {
		toSerialize["branch_dest_repo_owner"] = o.BranchDestRepoOwner
	}
	if !IsNil(o.BranchRepoOwner) {
		toSerialize["branch_repo_owner"] = o.BranchRepoOwner
	}
	if !IsNil(o.CommitHash) {
		toSerialize["commit_hash"] = o.CommitHash
	}
	if !IsNil(o.CommitMessage) {
		toSerialize["commit_message"] = o.CommitMessage
	}
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	if !IsNil(o.PullRequestAuthor) {
		toSerialize["pull_request_author"] = o.PullRequestAuthor
	}
	if !IsNil(o.PullRequestHeadBranch) {
		toSerialize["pull_request_head_branch"] = o.PullRequestHeadBranch
	}
	if !IsNil(o.PullRequestId) {
		toSerialize["pull_request_id"] = o.PullRequestId
	}
	if !IsNil(o.PullRequestMergeBranch) {
		toSerialize["pull_request_merge_branch"] = o.PullRequestMergeBranch
	}
	if !IsNil(o.PullRequestRepositoryUrl) {
		toSerialize["pull_request_repository_url"] = o.PullRequestRepositoryUrl
	}
	if !IsNil(o.PullRequestUnverifiedMergeBranch) {
		toSerialize["pull_request_unverified_merge_branch"] = o.PullRequestUnverifiedMergeBranch
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullablePipelineabledomainTriggerParams struct {
	value *PipelineabledomainTriggerParams
	isSet bool
}

func (v NullablePipelineabledomainTriggerParams) Get() *PipelineabledomainTriggerParams {
	return v.value
}

func (v *NullablePipelineabledomainTriggerParams) Set(val *PipelineabledomainTriggerParams) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineabledomainTriggerParams) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineabledomainTriggerParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineabledomainTriggerParams(val *PipelineabledomainTriggerParams) *NullablePipelineabledomainTriggerParams {
	return &NullablePipelineabledomainTriggerParams{value: val, isSet: true}
}

func (v NullablePipelineabledomainTriggerParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineabledomainTriggerParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


