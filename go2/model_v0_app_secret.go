/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0AppSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0AppSecret{}

// V0AppSecret struct for V0AppSecret
type V0AppSecret struct {
	// Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
	ExpandInStepInputs *bool `json:"expand_in_step_inputs,omitempty"`
	// Expose for Pull Requests?
	IsExposedForPullRequests *bool `json:"is_exposed_for_pull_requests,omitempty"`
	// Secret marked as protected?
	IsProtected *bool `json:"is_protected,omitempty"`
	// Name of the secret
	Name *string `json:"name,omitempty"`
}

// NewV0AppSecret instantiates a new V0AppSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0AppSecret() *V0AppSecret {
	this := V0AppSecret{}
	return &this
}

// NewV0AppSecretWithDefaults instantiates a new V0AppSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0AppSecretWithDefaults() *V0AppSecret {
	this := V0AppSecret{}
	return &this
}

// GetExpandInStepInputs returns the ExpandInStepInputs field value if set, zero value otherwise.
func (o *V0AppSecret) GetExpandInStepInputs() bool {
	if o == nil || IsNil(o.ExpandInStepInputs) {
		var ret bool
		return ret
	}
	return *o.ExpandInStepInputs
}

// GetExpandInStepInputsOk returns a tuple with the ExpandInStepInputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecret) GetExpandInStepInputsOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpandInStepInputs) {
		return nil, false
	}
	return o.ExpandInStepInputs, true
}

// HasExpandInStepInputs returns a boolean if a field has been set.
func (o *V0AppSecret) HasExpandInStepInputs() bool {
	if o != nil && !IsNil(o.ExpandInStepInputs) {
		return true
	}

	return false
}

// SetExpandInStepInputs gets a reference to the given bool and assigns it to the ExpandInStepInputs field.
func (o *V0AppSecret) SetExpandInStepInputs(v bool) {
	o.ExpandInStepInputs = &v
}

// GetIsExposedForPullRequests returns the IsExposedForPullRequests field value if set, zero value otherwise.
func (o *V0AppSecret) GetIsExposedForPullRequests() bool {
	if o == nil || IsNil(o.IsExposedForPullRequests) {
		var ret bool
		return ret
	}
	return *o.IsExposedForPullRequests
}

// GetIsExposedForPullRequestsOk returns a tuple with the IsExposedForPullRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecret) GetIsExposedForPullRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExposedForPullRequests) {
		return nil, false
	}
	return o.IsExposedForPullRequests, true
}

// HasIsExposedForPullRequests returns a boolean if a field has been set.
func (o *V0AppSecret) HasIsExposedForPullRequests() bool {
	if o != nil && !IsNil(o.IsExposedForPullRequests) {
		return true
	}

	return false
}

// SetIsExposedForPullRequests gets a reference to the given bool and assigns it to the IsExposedForPullRequests field.
func (o *V0AppSecret) SetIsExposedForPullRequests(v bool) {
	o.IsExposedForPullRequests = &v
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *V0AppSecret) GetIsProtected() bool {
	if o == nil || IsNil(o.IsProtected) {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecret) GetIsProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProtected) {
		return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *V0AppSecret) HasIsProtected() bool {
	if o != nil && !IsNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *V0AppSecret) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V0AppSecret) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AppSecret) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V0AppSecret) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V0AppSecret) SetName(v string) {
	o.Name = &v
}

func (o V0AppSecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0AppSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpandInStepInputs) {
		toSerialize["expand_in_step_inputs"] = o.ExpandInStepInputs
	}
	if !IsNil(o.IsExposedForPullRequests) {
		toSerialize["is_exposed_for_pull_requests"] = o.IsExposedForPullRequests
	}
	if !IsNil(o.IsProtected) {
		toSerialize["is_protected"] = o.IsProtected
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV0AppSecret struct {
	value *V0AppSecret
	isSet bool
}

func (v NullableV0AppSecret) Get() *V0AppSecret {
	return v.value
}

func (v *NullableV0AppSecret) Set(val *V0AppSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableV0AppSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableV0AppSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0AppSecret(val *V0AppSecret) *NullableV0AppSecret {
	return &NullableV0AppSecret{value: val, isSet: true}
}

func (v NullableV0AppSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0AppSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


