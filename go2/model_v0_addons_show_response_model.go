/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0AddonsShowResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0AddonsShowResponseModel{}

// V0AddonsShowResponseModel struct for V0AddonsShowResponseModel
type V0AddonsShowResponseModel struct {
	Data *AddonsAddon `json:"data,omitempty"`
}

// NewV0AddonsShowResponseModel instantiates a new V0AddonsShowResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0AddonsShowResponseModel() *V0AddonsShowResponseModel {
	this := V0AddonsShowResponseModel{}
	return &this
}

// NewV0AddonsShowResponseModelWithDefaults instantiates a new V0AddonsShowResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0AddonsShowResponseModelWithDefaults() *V0AddonsShowResponseModel {
	this := V0AddonsShowResponseModel{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V0AddonsShowResponseModel) GetData() AddonsAddon {
	if o == nil || IsNil(o.Data) {
		var ret AddonsAddon
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0AddonsShowResponseModel) GetDataOk() (*AddonsAddon, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V0AddonsShowResponseModel) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AddonsAddon and assigns it to the Data field.
func (o *V0AddonsShowResponseModel) SetData(v AddonsAddon) {
	o.Data = &v
}

func (o V0AddonsShowResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0AddonsShowResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableV0AddonsShowResponseModel struct {
	value *V0AddonsShowResponseModel
	isSet bool
}

func (v NullableV0AddonsShowResponseModel) Get() *V0AddonsShowResponseModel {
	return v.value
}

func (v *NullableV0AddonsShowResponseModel) Set(val *V0AddonsShowResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0AddonsShowResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0AddonsShowResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0AddonsShowResponseModel(val *V0AddonsShowResponseModel) *NullableV0AddonsShowResponseModel {
	return &NullableV0AddonsShowResponseModel{value: val, isSet: true}
}

func (v NullableV0AddonsShowResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0AddonsShowResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


