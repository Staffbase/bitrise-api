/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0CacheItemListResponseItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0CacheItemListResponseItemModel{}

// V0CacheItemListResponseItemModel struct for V0CacheItemListResponseItemModel
type V0CacheItemListResponseItemModel struct {
	AppId *string `json:"app_id,omitempty"`
	ArchiveFilename *string `json:"archive_filename,omitempty"`
	ArchiveSize *int32 `json:"archive_size,omitempty"`
	CacheKey *string `json:"cache_key,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	ExpiresAt *string `json:"expires_at,omitempty"`
	Id *string `json:"id,omitempty"`
	LastUsedAt *string `json:"last_used_at,omitempty"`
}

// NewV0CacheItemListResponseItemModel instantiates a new V0CacheItemListResponseItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0CacheItemListResponseItemModel() *V0CacheItemListResponseItemModel {
	this := V0CacheItemListResponseItemModel{}
	return &this
}

// NewV0CacheItemListResponseItemModelWithDefaults instantiates a new V0CacheItemListResponseItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0CacheItemListResponseItemModelWithDefaults() *V0CacheItemListResponseItemModel {
	this := V0CacheItemListResponseItemModel{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *V0CacheItemListResponseItemModel) SetAppId(v string) {
	o.AppId = &v
}

// GetArchiveFilename returns the ArchiveFilename field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetArchiveFilename() string {
	if o == nil || IsNil(o.ArchiveFilename) {
		var ret string
		return ret
	}
	return *o.ArchiveFilename
}

// GetArchiveFilenameOk returns a tuple with the ArchiveFilename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetArchiveFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.ArchiveFilename) {
		return nil, false
	}
	return o.ArchiveFilename, true
}

// HasArchiveFilename returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasArchiveFilename() bool {
	if o != nil && !IsNil(o.ArchiveFilename) {
		return true
	}

	return false
}

// SetArchiveFilename gets a reference to the given string and assigns it to the ArchiveFilename field.
func (o *V0CacheItemListResponseItemModel) SetArchiveFilename(v string) {
	o.ArchiveFilename = &v
}

// GetArchiveSize returns the ArchiveSize field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetArchiveSize() int32 {
	if o == nil || IsNil(o.ArchiveSize) {
		var ret int32
		return ret
	}
	return *o.ArchiveSize
}

// GetArchiveSizeOk returns a tuple with the ArchiveSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetArchiveSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveSize) {
		return nil, false
	}
	return o.ArchiveSize, true
}

// HasArchiveSize returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasArchiveSize() bool {
	if o != nil && !IsNil(o.ArchiveSize) {
		return true
	}

	return false
}

// SetArchiveSize gets a reference to the given int32 and assigns it to the ArchiveSize field.
func (o *V0CacheItemListResponseItemModel) SetArchiveSize(v int32) {
	o.ArchiveSize = &v
}

// GetCacheKey returns the CacheKey field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetCacheKey() string {
	if o == nil || IsNil(o.CacheKey) {
		var ret string
		return ret
	}
	return *o.CacheKey
}

// GetCacheKeyOk returns a tuple with the CacheKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetCacheKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CacheKey) {
		return nil, false
	}
	return o.CacheKey, true
}

// HasCacheKey returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasCacheKey() bool {
	if o != nil && !IsNil(o.CacheKey) {
		return true
	}

	return false
}

// SetCacheKey gets a reference to the given string and assigns it to the CacheKey field.
func (o *V0CacheItemListResponseItemModel) SetCacheKey(v string) {
	o.CacheKey = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *V0CacheItemListResponseItemModel) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *V0CacheItemListResponseItemModel) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V0CacheItemListResponseItemModel) SetId(v string) {
	o.Id = &v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise.
func (o *V0CacheItemListResponseItemModel) GetLastUsedAt() string {
	if o == nil || IsNil(o.LastUsedAt) {
		var ret string
		return ret
	}
	return *o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0CacheItemListResponseItemModel) GetLastUsedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastUsedAt) {
		return nil, false
	}
	return o.LastUsedAt, true
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *V0CacheItemListResponseItemModel) HasLastUsedAt() bool {
	if o != nil && !IsNil(o.LastUsedAt) {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given string and assigns it to the LastUsedAt field.
func (o *V0CacheItemListResponseItemModel) SetLastUsedAt(v string) {
	o.LastUsedAt = &v
}

func (o V0CacheItemListResponseItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0CacheItemListResponseItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.ArchiveFilename) {
		toSerialize["archive_filename"] = o.ArchiveFilename
	}
	if !IsNil(o.ArchiveSize) {
		toSerialize["archive_size"] = o.ArchiveSize
	}
	if !IsNil(o.CacheKey) {
		toSerialize["cache_key"] = o.CacheKey
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUsedAt) {
		toSerialize["last_used_at"] = o.LastUsedAt
	}
	return toSerialize, nil
}

type NullableV0CacheItemListResponseItemModel struct {
	value *V0CacheItemListResponseItemModel
	isSet bool
}

func (v NullableV0CacheItemListResponseItemModel) Get() *V0CacheItemListResponseItemModel {
	return v.value
}

func (v *NullableV0CacheItemListResponseItemModel) Set(val *V0CacheItemListResponseItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0CacheItemListResponseItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0CacheItemListResponseItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0CacheItemListResponseItemModel(val *V0CacheItemListResponseItemModel) *NullableV0CacheItemListResponseItemModel {
	return &NullableV0CacheItemListResponseItemModel{value: val, isSet: true}
}

func (v NullableV0CacheItemListResponseItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0CacheItemListResponseItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


