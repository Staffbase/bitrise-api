/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the V0BuildRequestUpdateParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0BuildRequestUpdateParams{}

// V0BuildRequestUpdateParams struct for V0BuildRequestUpdateParams
type V0BuildRequestUpdateParams struct {
	IsApproved bool `json:"is_approved"`
}

type _V0BuildRequestUpdateParams V0BuildRequestUpdateParams

// NewV0BuildRequestUpdateParams instantiates a new V0BuildRequestUpdateParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0BuildRequestUpdateParams(isApproved bool) *V0BuildRequestUpdateParams {
	this := V0BuildRequestUpdateParams{}
	this.IsApproved = isApproved
	return &this
}

// NewV0BuildRequestUpdateParamsWithDefaults instantiates a new V0BuildRequestUpdateParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0BuildRequestUpdateParamsWithDefaults() *V0BuildRequestUpdateParams {
	this := V0BuildRequestUpdateParams{}
	return &this
}

// GetIsApproved returns the IsApproved field value
func (o *V0BuildRequestUpdateParams) GetIsApproved() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsApproved
}

// GetIsApprovedOk returns a tuple with the IsApproved field value
// and a boolean to check if the value has been set.
func (o *V0BuildRequestUpdateParams) GetIsApprovedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsApproved, true
}

// SetIsApproved sets field value
func (o *V0BuildRequestUpdateParams) SetIsApproved(v bool) {
	o.IsApproved = v
}

func (o V0BuildRequestUpdateParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0BuildRequestUpdateParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_approved"] = o.IsApproved
	return toSerialize, nil
}

func (o *V0BuildRequestUpdateParams) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_approved",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varV0BuildRequestUpdateParams := _V0BuildRequestUpdateParams{}

	err = json.Unmarshal(bytes, &varV0BuildRequestUpdateParams)

	if err != nil {
		return err
	}

	*o = V0BuildRequestUpdateParams(varV0BuildRequestUpdateParams)

	return err
}

type NullableV0BuildRequestUpdateParams struct {
	value *V0BuildRequestUpdateParams
	isSet bool
}

func (v NullableV0BuildRequestUpdateParams) Get() *V0BuildRequestUpdateParams {
	return v.value
}

func (v *NullableV0BuildRequestUpdateParams) Set(val *V0BuildRequestUpdateParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0BuildRequestUpdateParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0BuildRequestUpdateParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0BuildRequestUpdateParams(val *V0BuildRequestUpdateParams) *NullableV0BuildRequestUpdateParams {
	return &NullableV0BuildRequestUpdateParams{value: val, isSet: true}
}

func (v NullableV0BuildRequestUpdateParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0BuildRequestUpdateParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


