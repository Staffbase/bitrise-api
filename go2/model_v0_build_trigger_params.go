/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0BuildTriggerParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0BuildTriggerParams{}

// V0BuildTriggerParams struct for V0BuildTriggerParams
type V0BuildTriggerParams struct {
	BuildParams *V0BuildTriggerParamsBuildParams `json:"build_params,omitempty"`
	HookInfo *V0BuildTriggerParamsHookInfo `json:"hook_info,omitempty"`
}

// NewV0BuildTriggerParams instantiates a new V0BuildTriggerParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0BuildTriggerParams() *V0BuildTriggerParams {
	this := V0BuildTriggerParams{}
	return &this
}

// NewV0BuildTriggerParamsWithDefaults instantiates a new V0BuildTriggerParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0BuildTriggerParamsWithDefaults() *V0BuildTriggerParams {
	this := V0BuildTriggerParams{}
	return &this
}

// GetBuildParams returns the BuildParams field value if set, zero value otherwise.
func (o *V0BuildTriggerParams) GetBuildParams() V0BuildTriggerParamsBuildParams {
	if o == nil || IsNil(o.BuildParams) {
		var ret V0BuildTriggerParamsBuildParams
		return ret
	}
	return *o.BuildParams
}

// GetBuildParamsOk returns a tuple with the BuildParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildTriggerParams) GetBuildParamsOk() (*V0BuildTriggerParamsBuildParams, bool) {
	if o == nil || IsNil(o.BuildParams) {
		return nil, false
	}
	return o.BuildParams, true
}

// HasBuildParams returns a boolean if a field has been set.
func (o *V0BuildTriggerParams) HasBuildParams() bool {
	if o != nil && !IsNil(o.BuildParams) {
		return true
	}

	return false
}

// SetBuildParams gets a reference to the given V0BuildTriggerParamsBuildParams and assigns it to the BuildParams field.
func (o *V0BuildTriggerParams) SetBuildParams(v V0BuildTriggerParamsBuildParams) {
	o.BuildParams = &v
}

// GetHookInfo returns the HookInfo field value if set, zero value otherwise.
func (o *V0BuildTriggerParams) GetHookInfo() V0BuildTriggerParamsHookInfo {
	if o == nil || IsNil(o.HookInfo) {
		var ret V0BuildTriggerParamsHookInfo
		return ret
	}
	return *o.HookInfo
}

// GetHookInfoOk returns a tuple with the HookInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildTriggerParams) GetHookInfoOk() (*V0BuildTriggerParamsHookInfo, bool) {
	if o == nil || IsNil(o.HookInfo) {
		return nil, false
	}
	return o.HookInfo, true
}

// HasHookInfo returns a boolean if a field has been set.
func (o *V0BuildTriggerParams) HasHookInfo() bool {
	if o != nil && !IsNil(o.HookInfo) {
		return true
	}

	return false
}

// SetHookInfo gets a reference to the given V0BuildTriggerParamsHookInfo and assigns it to the HookInfo field.
func (o *V0BuildTriggerParams) SetHookInfo(v V0BuildTriggerParamsHookInfo) {
	o.HookInfo = &v
}

func (o V0BuildTriggerParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0BuildTriggerParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildParams) {
		toSerialize["build_params"] = o.BuildParams
	}
	if !IsNil(o.HookInfo) {
		toSerialize["hook_info"] = o.HookInfo
	}
	return toSerialize, nil
}

type NullableV0BuildTriggerParams struct {
	value *V0BuildTriggerParams
	isSet bool
}

func (v NullableV0BuildTriggerParams) Get() *V0BuildTriggerParams {
	return v.value
}

func (v *NullableV0BuildTriggerParams) Set(val *V0BuildTriggerParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV0BuildTriggerParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV0BuildTriggerParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0BuildTriggerParams(val *V0BuildTriggerParams) *NullableV0BuildTriggerParams {
	return &NullableV0BuildTriggerParams{value: val, isSet: true}
}

func (v NullableV0BuildTriggerParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0BuildTriggerParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


