/*
Bitrise API

Official REST API for Bitrise.io

API version: 0.1
Contact: letsconnect@bitrise.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V0BuildListResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V0BuildListResponseModel{}

// V0BuildListResponseModel struct for V0BuildListResponseModel
type V0BuildListResponseModel struct {
	Data []V0BuildResponseItemModel `json:"data,omitempty"`
	Paging *V0PagingResponseModel `json:"paging,omitempty"`
}

// NewV0BuildListResponseModel instantiates a new V0BuildListResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV0BuildListResponseModel() *V0BuildListResponseModel {
	this := V0BuildListResponseModel{}
	return &this
}

// NewV0BuildListResponseModelWithDefaults instantiates a new V0BuildListResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV0BuildListResponseModelWithDefaults() *V0BuildListResponseModel {
	this := V0BuildListResponseModel{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V0BuildListResponseModel) GetData() []V0BuildResponseItemModel {
	if o == nil || IsNil(o.Data) {
		var ret []V0BuildResponseItemModel
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildListResponseModel) GetDataOk() ([]V0BuildResponseItemModel, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V0BuildListResponseModel) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []V0BuildResponseItemModel and assigns it to the Data field.
func (o *V0BuildListResponseModel) SetData(v []V0BuildResponseItemModel) {
	o.Data = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *V0BuildListResponseModel) GetPaging() V0PagingResponseModel {
	if o == nil || IsNil(o.Paging) {
		var ret V0PagingResponseModel
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V0BuildListResponseModel) GetPagingOk() (*V0PagingResponseModel, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *V0BuildListResponseModel) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given V0PagingResponseModel and assigns it to the Paging field.
func (o *V0BuildListResponseModel) SetPaging(v V0PagingResponseModel) {
	o.Paging = &v
}

func (o V0BuildListResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V0BuildListResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

type NullableV0BuildListResponseModel struct {
	value *V0BuildListResponseModel
	isSet bool
}

func (v NullableV0BuildListResponseModel) Get() *V0BuildListResponseModel {
	return v.value
}

func (v *NullableV0BuildListResponseModel) Set(val *V0BuildListResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableV0BuildListResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableV0BuildListResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV0BuildListResponseModel(val *V0BuildListResponseModel) *NullableV0BuildListResponseModel {
	return &NullableV0BuildListResponseModel{value: val, isSet: true}
}

func (v NullableV0BuildListResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV0BuildListResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


