openapi: 3.0.1
info:
  contact:
    email: letsconnect@bitrise.io
    name: Bitrise Support
    url: https://www.bitrise.io/contact
  description: Official REST API for Bitrise.io
  license:
    name: MIT
  title: Bitrise API
  version: "0.1"
servers:
- url: https://api.bitrise.io/v0.1
paths:
  /addons:
    get:
      description: List all the available Bitrise addons
      operationId: addons-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AddonsListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      summary: Get list of available Bitrise addons
      tags:
      - addons
  /addons/{addon-id}:
    get:
      description: Show details of a specific Bitrise addon
      operationId: addons-show
      parameters:
      - description: Addon ID
        in: path
        name: addon-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AddonsShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      summary: Get a specific Bitrise addon
      tags:
      - addons
  /apps:
    get:
      description: "List all the apps available for the authenticated account, including\
        \ those that are owned by other users or Organizations."
      operationId: app-list
      parameters:
      - description: "Order of the applications: sort them based on when they were\
          \ created or the time of their last build"
        in: query
        name: sort_by
        schema:
          enum:
          - last_build_at
          - created_at
          type: string
      - description: Slug of the first app in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      - description: The title of the app
        in: query
        name: title
        schema:
          type: string
      - description: "The project type of the app (eg. 'ios', 'android')"
        in: query
        name: project_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of the apps
      tags:
      - application
  /apps/register:
    post:
      description: "Add a new app to Bitrise. This is the first step of the app registration\
        \ process. To successfully set it up, you need to provide the required app\
        \ parameters: the repository URL and the isPublic field. Read more about the\
        \ app creation process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app)."
      operationId: app-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppUploadParams'
        description: App parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Add a new app
      tags:
      - app-setup
      x-codegen-request-body-name: app
  /apps/{app-slug}:
    delete:
      description: "Deletes an app by slug. Use with care, make sure you really want\
        \ to delete the app. This action cannot be undone."
      operationId: app-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppDeleteRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Deletes an app
      tags:
      - application
    get:
      description: "Get the details of a specific app by providing the app slug. You\
        \ can get the app slug by calling the [/apps](https://api-docs.bitrise.io/#/application/app-list)\
        \ endpoint or by opening the app on bitrise.io and copying the slug from the\
        \ URL."
      operationId: app-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a specific app
      tags:
      - application
    patch:
      description: Updates an app by slug. Only updates the fields specified in the
        body.
      operationId: app-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppUpdateParams'
        description: "App update params. All fields are optional, omit the fields\
          \ you don't wish to update."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppUpdateRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Updates an app
      tags:
      - application
      x-codegen-request-body-name: app
  /apps/{app-slug}/addons:
    get:
      description: List all the provisioned addons for the authorized apps
      operationId: addon-list-by-app
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppAddOnsListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get list of the addons for apps
      tags:
      - addons
  /apps/{app-slug}/android-keystore-files:
    get:
      description: List all the android keystore files that have been uploaded to
        a specific app.
      operationId: android-keystore-file-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Slug of the first android keystore file in the response
        in: query
        name: next
        schema:
          type: string
      - description: Max number of build certificates per page is 50.
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a list of the android keystore files
      tags:
      - android-keystore-file
    post:
      description: Add a new Android keystore file to an app
      operationId: android-keystore-file-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AndroidKeystoreFileUploadParams'
        description: Android keystore file parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create an Android keystore file
      tags:
      - android-keystore-file
      x-codegen-request-body-name: android-keystore-file
  /apps/{app-slug}/android-keystore-files/{android-keystore-file-slug}:
    delete:
      description: "Delete an app's android keystore file. You can fetch an app's\
        \ android keystore file slug if you first list all the uploaded files with\
        \ the [GET /apps/{app-slug}/android-keystore-files](https://api-docs.bitrise.io/#/android-keystore-file/android-keystore-file-list)\
        \ endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-android-keystore-files.html)\
        \ guide."
      operationId: android-keystore-file-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Android keystore file slug
        in: path
        name: android-keystore-file-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete an android keystore file
      tags:
      - android-keystore-file
    post:
      description: "This is the last step of uploading an android keystore file to\
        \ Bitrise. Confirm the android keystore file upload and view the file on the\
        \ Code Signing tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload)\
        \ guide."
      operationId: android-keystore-file-confirm
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Android keystore file slug
        in: path
        name: android-keystore-file-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Confirm an android keystore file upload
      tags:
      - android-keystore-file
  /apps/{app-slug}/archived-builds:
    get:
      description: 'List the first 1000 archived builds of a specified Bitrise app.
        Set parameters to filter builds:'
      operationId: archived-builds-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Listed builds should only be the ones which ran after the given
          date (Unix Timestamp)
        in: query
        name: after
        required: true
        schema:
          type: integer
      - description: Listed builds should only be the ones which ran before the given
          date (Unix Timestamp)
        in: query
        name: before
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ArchivedBuildListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List 1000 archived builds of an app
      tags:
      - builds
  /apps/{app-slug}/bitrise.yml:
    get:
      description: "Get the full `bitrise.yml` configuration of an application, by\
        \ providing the app slug. It returns the current `bitrise.yml` that is stored\
        \ on bitrise.io in full, including the trigger map, the different workflows\
        \ and the Steps."
      operationId: app-config-datastore-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "{the bitrise.yml in yml format}"
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get bitrise.yml of a specific app
      tags:
      - application
    post:
      description: Upload a new bitrise.yml for your application.
      operationId: app-config-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppConfigRequestParam'
        description: App config parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppConfigRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Upload a new bitrise.yml for your application.
      tags:
      - app-setup
      x-codegen-request-body-name: app-config
  /apps/{app-slug}/bitrise.yml/config:
    get:
      description: Getting the location of the application's bitrise.yaml. Requires
        administrator level privileges to the app.
      operationId: app-setup-bitrise-yml-config-get
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BitriseYMLConfigGetResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Getting the location of the application's bitrise.yaml
      tags:
      - app-setup
    put:
      description: Changing the location of the application's bitrise.yaml. Requires
        administrator level privileges to the app.
      operationId: app-setup-bitrise-yml-config-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BitriseYMLConfigUpdateParams'
        description: Bitrise YML Config Update Params
        required: true
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Changing the location of the application's bitrise.yaml
      tags:
      - app-setup
      x-codegen-request-body-name: app
  /apps/{app-slug}/branches:
    get:
      description: Lists only those branches of a specified Bitrise app that have
        existing builds.
      operationId: branch-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BranchListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List the branches with existing builds of an app's repository
      tags:
      - application
  /apps/{app-slug}/build-certificates:
    get:
      description: "List all the build certificates that have been uploaded to a specific\
        \ app. Read more in our [Listing the uploaded iOS code signing files of an\
        \ app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app)\
        \ guide."
      operationId: build-certificate-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Slug of the first build certificate in the response
        in: query
        name: next
        schema:
          type: string
      - description: Max number of build certificates per page is 50.
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a list of the build certificates
      tags:
      - build-certificate
    post:
      description: "Create a temporary pre-signed upload URL for the build certificate\
        \ and upload the file to AWS with a simple `curl` request. To complete the\
        \ uploading process and view your files on the Code Signing tab of your app,\
        \ continue with the [POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded](https://api-docs.bitrise.io/#/build-certificate/build-certificate-confirm)\
        \ endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file)\
        \ guide."
      operationId: build-certificate-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BuildCertificateUploadParams'
        description: Build certificate parameters such as file name and its file size
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateResponseModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create a build certificate
      tags:
      - build-certificate
      x-codegen-request-body-name: build-certificate
  /apps/{app-slug}/build-certificates/{build-certificate-slug}:
    delete:
      description: "Delete an app's build certificate. You can fetch the build certificate\
        \ slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list)\
        \ endpoint to list all available build certificates of an app. Read more in\
        \ our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file)\
        \ guide."
      operationId: build-certificate-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build certificate slug
        in: path
        name: build-certificate-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete a build certificate
      tags:
      - build-certificate
    get:
      description: "Retrieve data of a specific build certificate. You can fetch the\
        \ build certificate slug for this endpoint if you first call the [GET /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list)\
        \ endpoint to list all available build certificates of an app. Read more in\
        \ our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data)\
        \ guide."
      operationId: build-certificate-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build certificate slug
        in: path
        name: build-certificate-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specific build certificate
      tags:
      - build-certificate
    patch:
      description: "Update an uploaded build certificate's attributes. You can fetch\
        \ the build certificate slug for this endpoint if you first call the [GET\
        \ /apps/{app-slug}/build-certificates](https://api-docs.bitrise.io/#/build-certificate/build-certificate-list)\
        \ endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload)\
        \ guide."
      operationId: build-certificate-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build certificate slug
        in: path
        name: build-certificate-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BuildCertificateUpdateParams'
        description: Build certificate parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update a build certificate
      tags:
      - build-certificate
      x-codegen-request-body-name: build-certificate
  /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded:
    post:
      description: "This is the last step of uploading a build certificate to Bitrise.\
        \ Confirm the build certificate upload and view the file on the Code Signing\
        \ tab of a specific app. Read more in our [Confirming the iOS code signing\
        \ file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload)\
        \ guide."
      operationId: build-certificate-confirm
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build certificate slug
        in: path
        name: build-certificate-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildCertificateResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Confirm a build certificate upload
      tags:
      - build-certificate
  /apps/{app-slug}/build-requests:
    get:
      description: List the existing open build requests of a specified Bitrise app
      operationId: build-request-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildRequestListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List the open build requests for an app
      tags:
      - build-request
  /apps/{app-slug}/build-requests/{build-request-slug}:
    patch:
      description: Update a specific build request of a specific app
      operationId: build-request-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build request slug
        in: path
        name: build-request-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BuildRequestUpdateParams'
        description: Build request parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildRequestUpdateResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update a build request
      tags:
      - build-request
      x-codegen-request-body-name: build-request
  /apps/{app-slug}/build-workflows:
    get:
      description: "List the workflows that were triggered at any time for a given\
        \ Bitrise app. Note that it might list workflows that are currently not defined\
        \ in the app's `bitrise.yml` configuration - and conversely, workflows that\
        \ were never triggered will not be listed even if they are defined in the\
        \ `bitrise.yml` file."
      operationId: build-workflow-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildWorkflowListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List the workflows of an app
      tags:
      - builds
  /apps/{app-slug}/builds:
    get:
      description: "List all the builds of a specified Bitrise app. Set parameters\
        \ to filter builds: for example, you can search for builds run with a given\
        \ workflow or all builds that were triggered by Pull Requests. It returns\
        \ all the relevant data of the build."
      operationId: build-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: "Order of builds: sort them based on when they were created or\
          \ the time when they were triggered"
        in: query
        name: sort_by
        schema:
          enum:
          - running_first
          - created_at
          type: string
      - description: The branch which was built
        in: query
        name: branch
        schema:
          type: string
      - description: The name of the workflow used for the build
        in: query
        name: workflow
        schema:
          type: string
      - description: The commit message of the build
        in: query
        name: commit_message
        schema:
          type: string
      - description: "The event that triggered the build (push, pull-request, tag)"
        in: query
        name: trigger_event_type
        schema:
          type: string
      - description: The id of the pull request that triggered the build
        in: query
        name: pull_request_id
        schema:
          type: integer
      - description: The build number
        in: query
        name: build_number
        schema:
          type: integer
      - description: List builds run after a given date (Unix Timestamp)
        in: query
        name: after
        schema:
          type: integer
      - description: List builds run before a given date (Unix Timestamp)
        in: query
        name: before
        schema:
          type: integer
      - description: "The status of the build: not finished (0), successful (1), failed\
          \ (2), aborted with failure (3), aborted with success (4)"
        in: query
        name: status
        schema:
          maximum: 4
          type: integer
      - description: Whether the builds are part of a pipeline or not
        in: query
        name: is_pipeline_build
        schema:
          type: boolean
      - description: Slug of the first build in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List all builds of an app
      tags:
      - builds
    post:
      description: "Trigger a new build/pipeline. Specify an app slug and at least\
        \ one parameter out of three: a git tag or git commit hash, a branch, or a\
        \ workflow/pipeline ID. You can also set specific parameters for Pull Request\
        \ builds/pipelines and define additional environment variables for your build/pipeline.\
        \ [Check out our detailed guide](https://devcenter.bitrise.io/api/build-trigger/)."
      operationId: build-trigger
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BuildTriggerParams'
        description: Build trigger parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildTriggerRespModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Trigger a new build/pipeline
      tags:
      - builds
      x-codegen-request-body-name: build_params
  /apps/{app-slug}/builds/{build-slug}:
    get:
      description: "Get the specified build of a given Bitrise app. You need to provide\
        \ both an app slug and a build slug. You can get the build slug either by\
        \ calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list) endpoint\
        \ or by clicking on the build on bitrise.io and copying the slug from the\
        \ URL. The endpoint returns all the relevant data of the build."
      operationId: build-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a build of a given app
      tags:
      - builds
  /apps/{app-slug}/builds/{build-slug}/abort:
    post:
      description: Abort a specific build. Set an abort reason with the `abort_reason`
        parameter. Use the `abort_with_success` parameter to abort a build but still
        count it as a successful one.
      operationId: build-abort
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.BuildAbortParams'
        description: Build abort parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildAbortResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Too Many Requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Abort a specific build
      tags:
      - builds
      x-codegen-request-body-name: build-abort-params
  /apps/{app-slug}/builds/{build-slug}/artifacts:
    get:
      description: "List all build artifacts that have been generated for an app's\
        \ build. This endpoint can retrieve artifacts from the archive as well. You\
        \ can use the created build artifact slugs from the response output to retrieve\
        \ data of a specific build artifact with the [GET/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-show)\
        \ endpoint or update a build artifact with the [PATCH/apps](https://api-docs.bitrise.io/#/build-artifact/artifact-update)\
        \ endpoint."
      operationId: artifact-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      - description: Slug of the first build artifact in the response
        in: query
        name: next
        schema:
          type: string
      - description: Max number of build artifacts per page is 50.
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ArtifactListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a list of all build artifacts
      tags:
      - build-artifact
  /apps/{app-slug}/builds/{build-slug}/artifacts/{artifact-slug}:
    delete:
      description: "Delete a build artifact of an app's build. The required parameters\
        \ are app slug, build slug and artifact slug. You can fetch the build artifact\
        \ slug if you first list all build artifacts of an app with the [/apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list)\
        \ endpoint."
      operationId: artifact-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      - description: Artifact slug
        in: path
        name: artifact-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ArtifactDeleteResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete a build artifact
      tags:
      - build-artifact
    get:
      description: "Retrieve data of a specific build artifact. The endpoint can retrieve\
        \ archived artifacts as well. The response output contains a time-limited\
        \ download url (expires in 10 minutes) and a public install-page URL. You\
        \ can view the build artifact with both URLs, but the public install-page\
        \ url will not work unless you [enable it](https://devcenter.bitrise.io/tutorials/deploy/bitrise-app-deployment/#enabling-public-page-for-the-app)."
      operationId: artifact-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      - description: Artifact slug
        in: path
        name: artifact-slug
        required: true
        schema:
          type: string
      - description: Setting this will result in a redirect to the artifact download
          location
        in: query
        name: download
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ArtifactShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a specific build artifact
      tags:
      - build-artifact
    patch:
      description: "Update the `is_public_page_enabled` attribute of your app's build.\
        \ The required parameters are app slug, build slug and artifact slug. You\
        \ can fetch the build artifact slug if you first list all build artifacts\
        \ of an app with the [GET /apps/](https://api-docs.bitrise.io/#/build-artifact/artifact-list)\
        \ endpoint."
      operationId: artifact-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      - description: Artifact slug
        in: path
        name: artifact-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ArtifactUpdateParams'
        description: Artifact parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ArtifactShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update a build artifact
      tags:
      - build-artifact
      x-codegen-request-body-name: artifact-params
  /apps/{app-slug}/builds/{build-slug}/bitrise.yml:
    get:
      description: "Get the bitrise.yml file of one of the builds of a given app.\
        \ This will return the `bitrise.yml` configuration with which the build ran.\
        \ You can compare it to [the current bitrise.yml configuration](https://api-docs.bitrise.io/#/application/app-config-datastore-show)\
        \ of the app."
      operationId: build-bitrise-yml-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "{the bitrise.yml in yml format}"
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get the bitrise.yml of a build
      tags:
      - builds
  /apps/{app-slug}/builds/{build-slug}/log:
    get:
      description: "Get the build log of a specified build of a Bitrise app. You can\
        \ get the build slug either by calling the [/builds](https://api-docs.bitrise.io/#/builds/build-list)\
        \ endpoint or by clicking on the build on bitrise.io and copying the slug\
        \ from the URL. Preview of the log is returned in `log_chunks` field in JSON\
        \ format. You can download the full raw log in txt by using the signed url\
        \ returned in `expiring_raw_log_url`. Be aware that this url is expiring in\
        \ 10 minutes!"
      operationId: build-log
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Build slug
        in: path
        name: build-slug
        required: true
        schema:
          type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get the build log of a build
      tags:
      - builds
  /apps/{app-slug}/cache-items:
    delete:
      description: Deletes all key-value cache items created by the builds of an app.
        Deleted cache items are no longer accessible and cannot be restored.
      operationId: cache-item-delete-all
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Deletes all key-value cache items belonging to an app
      tags:
      - key-value-cache
    get:
      description: List all the available cache items that the builds of the app created
        via the save-cache step.
      operationId: cache-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: "Getting cache items created before the given parameter (RFC3339\
          \ time format, default: now)"
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 100)"
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.CacheItemListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List the key-value cache items belonging to an app
      tags:
      - key-value-cache
  /apps/{app-slug}/cache-items/{cache-item-id}:
    delete:
      description: Deletes a key-value cache item. Deleted cache items are no longer
        accessible and cannot be restored.
      operationId: cache-item-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: The ID of the cache item to be deleted
        in: path
        name: cache-item-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Deletes a key-value cache item
      tags:
      - key-value-cache
  /apps/{app-slug}/cache-items/{cache-item-id}/download:
    get:
      description: Gets a download URL of a cache item.
      operationId: cache-item-download
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: The ID of the cache item to be downloaded
        in: path
        name: cache-item-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.CacheItemDownloadResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Gets the download URL of a key-value cache item
      tags:
      - key-value-cache
  /apps/{app-slug}/finish:
    post:
      description: "Save the application after registering it on Bitrise and registering\
        \ an SSH key (and, optionally, adding a webhook). With this endpoint you can\
        \ define the initial configuration, define application-level environment variables,\
        \ determine the project type, and set an Organization to be the owner of the\
        \ app. Read more about the app registration process in our [detailed guide](https://devcenter.bitrise.io/api/adding-and-managing-apps/#adding-a-new-app)."
      operationId: app-finish
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppFinishParams'
        description: App finish parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppFinishRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Save the application at the end of the app registration process
      tags:
      - app-setup
      x-codegen-request-body-name: app
  /apps/{app-slug}/generic-project-files:
    get:
      description: "List all the generic project files that have been uploaded to\
        \ a specific app. Read more in our [Listing the uploaded files of an app](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#listing-the-uploaded-files-of-an-app)\
        \ guide."
      operationId: generic-project-file-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Slug of the first generic project file in the response
        in: query
        name: next
        schema:
          type: string
      - description: Max number of build certificates per page is 50.
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a list of the generic project files
      tags:
      - generic-project-file
    post:
      description: "Create a temporary pre-signed upload URL (expires in 10 minutes)\
        \ for the generic project file and upload it to AWS with a simple `curl` request.\
        \ To complete the uploading process and view your files on the Code Signing\
        \ tab of your app, continue with the [POST /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-confirm)\
        \ endpoint. Read more in our [Creating and uploading files to Generic File\
        \ Storage](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#creating-and-uploading-files-to-generic-file-storage)\
        \ guide."
      operationId: generic-project-files-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ProjectFileStorageUploadParams'
        description: Generic project file parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create a generic project file
      tags:
      - generic-project-file
      x-codegen-request-body-name: generic-project-file
  /apps/{app-slug}/generic-project-files/{generic-project-file-slug}:
    delete:
      description: "Delete an app's generic project file. You can fetch an app's generic\
        \ project file slug if you first list all the uploaded files with the [GET\
        \ /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list)\
        \ endpoint. Read more in our [Deleting a file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#deleting-a-file)\
        \ guide."
      operationId: generic-project-file-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Generic project file slug
        in: path
        name: generic-project-file-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete a generic project file
      tags:
      - generic-project-file
    get:
      description: "Retrieve data of a specific generic project file to check its\
        \ attributes and optionally modify them with the [PATCH /apps/](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-update)\
        \ endpoint. Read more in our [Retrieving a specific file's data](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#retrieving-a-specific-files-data)\
        \ guide."
      operationId: generic-project-file-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Generic project file slug
        in: path
        name: generic-project-file-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specific generic project file
      tags:
      - generic-project-file
    patch:
      description: "Update a generic project file's attributes. You can fetch an app's\
        \ generic project file slug if you first list all the uploaded files with\
        \ the [GET /apps/{app-slug}/generic-project-files](https://api-docs.bitrise.io/#/generic-project-file/generic-project-file-list)\
        \ endpoint. Read more in our [Updating an uploaded file](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#updating-an-uploaded-file)\
        \ guide."
      operationId: generic-project-file-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Generic project file slug
        in: path
        name: generic-project-file-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ProjectFileStorageDocumentUpdateParams'
        description: Generic project file parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update a generic project file
      tags:
      - generic-project-file
      x-codegen-request-body-name: generic-project-file
  /apps/{app-slug}/generic-project-files/{generic-project-file-slug}/uploaded:
    post:
      description: "This is the last step of uploading a generic project file to Bitrise.\
        \ Confirm the generic project file upload and view the file on the Code Signing\
        \ tab of a specific app. Read more in our [Confirming the upload](https://devcenter.bitrise.io/api/managing-files-in-generic-file-storage/#confirming-the-file-upload)\
        \ guide."
      operationId: generic-project-file-confirm
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Generic project file slug
        in: path
        name: generic-project-file-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProjectFileStorageResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Confirm a generic project file upload
      tags:
      - generic-project-file
  /apps/{app-slug}/local-builds:
    get:
      description: List all the local builds belonging to the specified Bitrise app.
        Set parameters to filter builds
      operationId: local-build-list
      parameters:
      - description: List local builds run after a given date (RFC3339 time format)
        in: query
        name: after
        schema:
          type: string
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: List local builds run before a given date (RFC3339 time format)
          - was called 'next' earlier
        in: query
        name: before
        schema:
          type: string
      - description: "Max number of elements per page (default: 10)"
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.PipelineListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List local builds of an app
      tags:
      - local-builds
  /apps/{app-slug}/outgoing-webhooks:
    get:
      description: "List all the outgoing webhooks registered for a specified Bitrise\
        \ app. This returns all the relevant data of the webhook, including the slug\
        \ of the webhook and its URL."
      operationId: outgoing-webhook-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Slug of the first webhook in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppWebhookListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List the outgoing webhooks of an app
      tags:
      - outgoing-webhook
    post:
      description: "Create an outgoing webhook for a specified Bitrise app: this can\
        \ be used to send build events to a specified URL with custom headers. Currently,\
        \ only build events can trigger outgoing webhooks."
      operationId: outgoing-webhook-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v0.AppWebhookCreateParams'
        description: App webhook creation params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppWebhookCreatedResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Create an outgoing webhook for an app
      tags:
      - outgoing-webhook
      x-codegen-request-body-name: app-webhook-create-params
  /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}:
    delete:
      description: Delete an existing outgoing webhook for a specified Bitrise app.
      operationId: outgoing-webhook-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: App webhook slug
        in: path
        name: app-webhook-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppWebhookDeletedResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete an outgoing webhook of an app
      tags:
      - outgoing-webhook
    put:
      description: "Update an existing outgoing webhook (URL, events, secrets and\
        \ headers) for a specified Bitrise app. Even if you do not want to change\
        \ one of the parameters, you still have to provide that parameter as well:\
        \ simply use its existing value."
      operationId: outgoing-webhook-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: App webhook slug
        in: path
        name: app-webhook-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v0.AppWebhookUpdateParams'
        description: App webhook update params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppWebhookResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update an outgoing webhook of an app
      tags:
      - outgoing-webhook
      x-codegen-request-body-name: app-webhook-update-params
  /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items:
    get:
      description: List all the delivery items of an outgoing webhook of a Bitrise
        application
      operationId: webhook-delivery-item-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: App webhook slug
        in: path
        name: app-webhook-slug
        required: true
        schema:
          type: string
      - description: Slug of the first delivery item in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.WebhookDeliveryItemShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List the webhook delivery items of an app
      tags:
      - webhook-delivery-item
  /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}:
    get:
      description: Get the specified delivery item of an outgoing webhook of a Bitrise
        application
      operationId: webhook-delivery-item-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: App webhook slug
        in: path
        name: app-webhook-slug
        required: true
        schema:
          type: string
      - description: Webhook delivery item slug
        in: path
        name: webhook-delivery-item-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.WebhookDeliveryItemResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specific delivery item of a webhook
      tags:
      - webhook-delivery-item
  /apps/{app-slug}/outgoing-webhooks/{app-webhook-slug}/delivery-items/{webhook-delivery-item-slug}/redeliver:
    post:
      description: Re-deliver the delivery item of a specified webhook of a Bitrise
        application
      operationId: webhook-delivery-item-redeliver
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: App webhook slug
        in: path
        name: app-webhook-slug
        required: true
        schema:
          type: string
      - description: Webhook delivery item slug
        in: path
        name: webhook-delivery-item-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Re-deliver the webhook delivery items of an app
      tags:
      - webhook-delivery-item
  /apps/{app-slug}/pipelines:
    get:
      description: "List all the pipelines and standalone builds of a specified Bitrise\
        \ app. Set parameters to filter pipelines: for example, you can search for\
        \ pipelines/standalone builds run with a given workflow name or all pipelines/standalone\
        \ builds that were triggered by Pull Requests. It returns all the relevant\
        \ data of the pipelines/standalone builds."
      operationId: pipeline-list
      parameters:
      - description: List pipelines/standalone builds run after a given date (RFC3339
          time format)
        in: query
        name: after
        schema:
          type: string
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: List pipelines/standalone builds run before a given date (RFC3339
          time format) - was called 'next' earlier
        in: query
        name: before
        schema:
          type: string
      - description: The branch which was built
        in: query
        name: branch
        schema:
          type: string
      - description: The pipeline/standalone build number
        in: query
        name: build_number
        schema:
          type: integer
      - description: "The build environment of the listed builds (ci, local, all)\
          \ - default: ci"
        in: query
        name: build_environment
        schema:
          type: string
      - description: The commit message of the pipeline/standalone build
        in: query
        name: commit_message
        schema:
          type: string
      - description: "Max number of elements per page - default: 10"
        in: query
        name: limit
        schema:
          type: integer
      - description: List pipelines/standalone builds run before a given date (RFC3339
          time format) - deprecated
        in: query
        name: next
        schema:
          type: string
      - description: Name of the pipeline
        in: query
        name: pipeline
        schema:
          type: string
      - description: "The status of the pipeline/standalone build: initializing, on_hold,\
          \ running, succeeded, failed, aborted, succeeded_with_abort"
        in: query
        name: status
        schema:
          type: string
      - description: "The event that triggered the pipeline/standalone build (push,\
          \ pull-request, tag)"
        in: query
        name: trigger_event_type
        schema:
          type: string
      - description: The name of the workflow used for the pipeline/standalone build
        in: query
        name: workflow
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.PipelineListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List all pipelines and standalone builds of an app
      tags:
      - pipelines
  /apps/{app-slug}/pipelines/{pipeline-id}:
    get:
      description: "Get the specified pipeline of a given Bitrise app. You need to\
        \ provide both an app slug and a pipeline id. You can get the pipeline id\
        \ either by calling the [/pipelines](https://api-docs.bitrise.io/#/pipelines/pipeline-list)\
        \ endpoint or by clicking on the pipeline on bitrise.io and copying the id\
        \ from the URL. The endpoint returns all the relevant data of the pipeline."
      operationId: pipeline-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Pipeline id
        in: path
        name: pipeline-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.PipelineShowResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a pipeline of a given app
      tags:
      - pipelines
  /apps/{app-slug}/pipelines/{pipeline-id}/abort:
    post:
      description: "Aborts a pipeline. You need to provide the app slug and the id\
        \ of the pipeline. You can add an abort reason, choose to skip notifications\
        \ and make the abort with success state."
      operationId: pipeline-abort
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Pipeline id
        in: path
        name: pipeline-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v0.PipelineAbortParams'
        description: Pipeline abort parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Aborts a pipeline
      tags:
      - pipelines
      x-codegen-request-body-name: pipeline-abort-params
  /apps/{app-slug}/pipelines/{pipeline-id}/rebuild:
    post:
      description: Rebuilds a pipeline. You can rebuild the whole pipeline or only
        the unsuccessful and subsequent workflows by setting the partial flag to true.
      operationId: pipeline-rebuild
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Pipeline id
        in: path
        name: pipeline-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v0.PipelineRebuildParams'
        description: Pipeline rebuild parameters
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Precondition Failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Rebuilds a pipeline
      tags:
      - pipelines
      x-codegen-request-body-name: pipeline-rebuild-params
  /apps/{app-slug}/provisioning-profiles:
    get:
      description: "List all the provisioning profiles that have been uploaded to\
        \ a specific app. Read more in our [Listing the uploaded iOS code signing\
        \ files of an app](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#listing-the-uploaded-ios-code-signing-files-of-an-app)\
        \ guide."
      operationId: provisioning-profile-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Slug of the first provisioning profile in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: Get a list of the provisioning profiles
      tags:
      - provisioning-profile
    post:
      description: "Create a temporary pre-signed upload URL (expires in 10 minutes)\
        \ for the provisioning profile and upload it to AWS with a simple `curl` request.\
        \ To complete the upload process, continue with the [POST /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-confirm)\
        \ endpoint. Read more in our [Creating and uploading an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#creating--uploading-an-ios-code-signing-file)\
        \ guide."
      operationId: provisioning-profile-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ProvisionProfileUploadParams'
        description: Provisioning profile parameters such as file name and file size
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileResponseModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create a provisioning profile
      tags:
      - provisioning-profile
      x-codegen-request-body-name: provisioning-profile
  /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}:
    delete:
      description: "Delete an app's provisioning profile. You can fetch the provisioning\
        \ profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list)\
        \ endpoint. Read more in our [Deleting an iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#deleting-an-ios-code-signing-file)\
        \ guide."
      operationId: provisioning-profile-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Provisioning profile slug
        in: path
        name: provisioning-profile-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete a provisioning profile
      tags:
      - provisioning-profile
    get:
      description: "Retrieve data of a specific provisioning profile. You can fetch\
        \ the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list)\
        \ endpoint. Read more in our [Getting a specific iOS code signing file's data](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#getting-a-specific-ios-code-signing-files-data)\
        \ guide."
      operationId: provisioning-profile-show
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Provisioning profile slug
        in: path
        name: provisioning-profile-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specific provisioning profile
      tags:
      - provisioning-profile
    patch:
      description: "Update an uploaded provisioning profile's attributes. You can\
        \ fetch the provisioning profile's slug if you call the [GET /apps/{app-slug}/provisioning-profiles](https://api-docs.bitrise.io/#/provisioning-profile/provisioning-profile-list)\
        \ endpoint. Read more in our [Updating an uploaded iOS code signing file](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload)\
        \ guide."
      operationId: provisioning-profile-update
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Provisioning profile slug
        in: path
        name: provisioning-profile-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ProvProfileDocumentUpdateParams'
        description: Provisioning profile parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Update a provisioning profile
      tags:
      - provisioning-profile
      x-codegen-request-body-name: provisioning-profile
  /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}/uploaded:
    post:
      description: "This is the last step of the upload process. Confirm the provisioning\
        \ profile upload and view the file on the Code Signing tab of a specific app.\
        \ Read more in our [Confirming the iOS code signing file upload](https://devcenter.bitrise.io/api/managing-ios-code-signing-files/#confirming-the-ios-code-signing-file-upload)\
        \ guide."
      operationId: provisioning-profile-confirm
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Provisioning profile slug
        in: path
        name: provisioning-profile-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ProvisionProfileResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Confirm a provisioning profile upload
      tags:
      - provisioning-profile
  /apps/{app-slug}/register-ssh-key:
    post:
      description: "Add an SSH-key to a specific app. After creating an app, you need\
        \ to register the SSH key so that Bitrise will be able to access and clone\
        \ your repository during the build process. This requires the app slug of\
        \ your newly created app."
      operationId: ssh-key-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.SSHKeyUploadParams'
        description: SSH key parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.SSHKeyRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Add an SSH-key to a specific app
      tags:
      - app-setup
      x-codegen-request-body-name: ssh-key
  /apps/{app-slug}/register-webhook:
    post:
      description: "[Register an incoming webhook](https://devcenter.bitrise.io/api/incoming-and-outgoing-webhooks/#incoming-webhooks)\
        \ for a specific application. You can do this during the app registration\
        \ process or at any other time in an app's life. When calling this endpoint,\
        \ a webhook is registered at your git provider: this is necessary to automatically\
        \ trigger builds on Bitrise."
      operationId: app-webhook-create
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.WebhookRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Register an incoming webhook for a specific application
      tags:
      - app-setup
  /apps/{app-slug}/releases/app-store:
    post:
      description: "Create a new iOS release for the specified app. If the release\
        \ candidate parameters (`release_branch` and `workflow`) are specified then\
        \ the latest successful build is automatically picked up as release candidate\
        \ and if `automatic_testflight_upload` is also turned on, then an upload to\
        \ TestFlight is started immediately. You can use this endpoint to set up a\
        \ fully automated release flow."
      operationId: release-create-app-store
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ReleaseCreateAppStoreParams'
        description: App Store release parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ReleaseCreateAppStoreRespModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create a new Apple App Store release for the app.
      tags:
      - releases
      x-codegen-request-body-name: app
  /apps/{app-slug}/releases/google-play:
    post:
      description: "Create a new android release for the specified app. If the release\
        \ candidate parameters (`release_branch` and `workflow`) are specified then\
        \ the latest successful build is automatically picked up as release candidate\
        \ and if `automatic_play_console_upload` is also turned on, then an upload\
        \ to Google Play Console is started immediately. You can use this endpoint\
        \ to set up a fully automated release flow."
      operationId: release-create-google-play
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.ReleaseCreateGooglePlayParams'
        description: Google Play release parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ReleaseCreateGooglePlayRespModel'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unprocessable Entity
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Create a new Google Play Store release for the app.
      tags:
      - releases
      x-codegen-request-body-name: app
  /apps/{app-slug}/roles/{role-name}:
    get:
      operationId: app-roles-query
      parameters:
      - description: Slug of the app
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: "Name of the role being queried, supported values are: admin,\
          \ manager (equals developer), and member (equals tester/qa)"
        in: path
        name: role-name
        required: true
        schema:
          enum:
          - admin
          - manager
          - member
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_roles_query_200_response'
          description: List of group slugs
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Not Found
      security:
      - PersonalAccessToken: []
      summary: Lists group roles for an app
      tags:
      - application
    put:
      description: Replaces the groups for a given role on an app. Only the given
        groups will be present for a role on the app after this call.
      operationId: app-roles-update
      parameters:
      - description: Slug of the app
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: "Name of the role being modified, supported values are: admin,\
          \ manager (equals developer), and member (equals tester/qa)"
        in: path
        name: role-name
        required: true
        schema:
          enum:
          - admin
          - manager
          - member
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/app_roles_query_200_response'
        description: List of group slugs
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_roles_query_200_response'
          description: List of group slugs
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Unprocessable Entity
      security:
      - PersonalAccessToken: []
      summary: Replaces group roles for an app
      tags:
      - application
      x-codegen-request-body-name: groups
  /apps/{app-slug}/secrets:
    get:
      description: List the application secrets (with no values). Requires administrator
        level privileges to the app.
      operationId: secret-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppSecretListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List the application secrets (with no values)
      tags:
      - secrets
  /apps/{app-slug}/secrets/{secret-name}:
    delete:
      description: Delete an application secret. Requires administrator level privileges
        to the app.
      operationId: secret-delete
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Secret name
        in: path
        name: secret-name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Delete an application secret
      tags:
      - secrets
    put:
      description: Upsert an application secret. Requires administrator level privileges
        to the app.
      operationId: secret-upsert
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Secret name
        in: path
        name: secret-name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppSecretUpsertParams'
        description: Secret parameters
        required: true
      responses:
        "201":
          content: {}
          description: Created
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Upsert an application secret
      tags:
      - secrets
      x-codegen-request-body-name: app
  /apps/{app-slug}/secrets/{secret-name}/value:
    get:
      description: Get the value of an (unprotected) application secrets. Requires
        administrator level privileges to the app.
      operationId: secret-value-get
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      - description: Secret name
        in: path
        name: secret-name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppSecretGetValueResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get the value of an (unprotected) application secrets
      tags:
      - secrets
  /apps/{app-slug}/test-devices:
    get:
      description: List registered test devices of all members of a specified Bitrise
        app
      operationId: test-device-list
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.TestDeviceListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      - AddonAuthToken: []
      summary: List the test devices for an app
      tags:
      - test-devices
  /apps/{app-slug}/update-email-notifications:
    patch:
      description: Updates the app's email notification settings with parameters
      operationId: app-notifications
      parameters:
      - description: App slug
        in: path
        name: app-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.AppNotificationSettingsParams'
        description: App notification settings parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppNotificationSettingsUpdateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Updates the app's notification settings
      tags:
      - application
      x-codegen-request-body-name: notification_settings_params
  /builds:
    get:
      description: "List all the Bitrise builds that can be accessed with the authenticated\
        \ account. Filter builds based on their owner, using the owner slug, or the\
        \ status of the build."
      operationId: build-list-all
      parameters:
      - description: The slug of the owner of the app or apps
        in: query
        name: owner_slug
        schema:
          type: string
      - description: "Indicates whether the build has started yet (true: the build\
          \ hasn't started)"
        in: query
        name: is_on_hold
        schema:
          type: boolean
      - description: "The status of the build: not finished (0), successful (1), failed\
          \ (2), aborted with failure (3), aborted with success (4)"
        in: query
        name: status
        schema:
          maximum: 4
          type: integer
      - description: Slug of the first build in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.BuildListAllResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List all builds
      tags:
      - builds
  /me:
    get:
      description: Shows the authenticated users profile info
      operationId: user-profile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.UserProfileRespModel'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get your profile info
      tags:
      - user
  /me/activities:
    get:
      description: List all the Bitrise activity events
      operationId: activity-list
      parameters:
      - description: Slug of the first activity event in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.ActivityEventListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of Bitrise activity events
      tags:
      - activity
  /me/plan:
    get:
      description: "Get the subscription of the user: the current plan, any pending\
        \ plans, and the duration of a trial period if applicable"
      operationId: user-plan
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.UserPlanRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: The subscription plan of the user
      tags:
      - user
  /organizations:
    get:
      description: List all Bitrise organizations that the user is part of
      operationId: org-list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OrganizationListRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List the organizations that the user is part of
      tags:
      - organizations
  /organizations/{org-slug}:
    get:
      description: Get a specified Bitrise organization that the user is part of.
      operationId: org-show
      parameters:
      - description: The organization slug
        in: path
        name: org-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OrganizationRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specified organization.
      tags:
      - organizations
  /organizations/{org-slug}/apps:
    get:
      description: "List all the available apps owned by a given organization. [Find\
        \ the organization URL](https://devcenter.bitrise.io/team-management/organizations/org-url/)\
        \ of the organisations you are part of; be aware that the endpoint will not\
        \ return any apps if the authenticated account is not a member of the given\
        \ organisation."
      operationId: app-list-by-organization
      parameters:
      - description: Organization slug
        in: path
        name: org-slug
        required: true
        schema:
          type: string
      - description: "Order of applications: sort them based on when they were created\
          \ or the time of their last build"
        in: query
        name: sort_by
        schema:
          enum:
          - last_build_at
          - created_at
          type: string
      - description: Slug of the first app in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      - description: The title of the app
        in: query
        name: title
        schema:
          type: string
      - description: "The project type of the app (eg. 'ios', 'android')"
        in: query
        name: project_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of the apps for an organization
      tags:
      - application
  /organizations/{org-slug}/apps/machine_types:
    patch:
      description: Migrates all apps' machine types of an organization from one machine
        type to another
      operationId: organization-machine-type-update
      parameters:
      - description: Organization slug
        in: path
        name: org-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.OrganizationUpdateMachineTypeParams'
        description: Machine type to migrate from and to
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OrganizationUpdateMachineTypeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Migrate machine types
      tags:
      - organizations
      x-codegen-request-body-name: types
  /organizations/{org-slug}/groups:
    get:
      description: Lists the groups of an organization
      operationId: organzation-groups-list
      parameters:
      - description: slug of the organization
        in: path
        name: org-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/organzation_groups_list_200_response_inner'
                type: array
          description: list of groups
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.ProxyErrorRespModel'
          description: Not Found
      security:
      - PersonalAccessToken: []
      summary: List organizations groups
      tags:
      - organizations
  /organizations/{organization-slug}/addons:
    get:
      description: List all the provisioned addons for organization
      operationId: addon-list-by-organization
      parameters:
      - description: Organization slug
        in: path
        name: organization-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OwnerAddOnsListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of the addons for organization
      tags:
      - addons
  /pipelines:
    get:
      description: "List all the Bitrise pipelines/standalone builds that can be accessed\
        \ with the authenticated account. Filter pipelines/standalone builds based\
        \ on their owner, using the owner slug, or the status of the pipeline/standalone\
        \ build."
      operationId: pipeline-list-all
      parameters:
      - description: The slug of the owner of the app or apps
        in: query
        name: owner_slug
        schema:
          type: string
      - description: "The status of the pipelines/standalone build: initializing,\
          \ on_hold, running, succeeded, failed, aborted, succeeded_with_abort"
        in: query
        name: status
        schema:
          type: integer
      - description: Getting pipelines/standalone builds before the given parameter
          (RFC3339 time format)
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 10)"
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.PipelineListAllResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List all pipelines/standalone builds
      tags:
      - pipelines
  /user/{user-slug}/apps/machine_types:
    patch:
      description: Migrates all apps' machine types of a user from one machine type
        to another
      operationId: user-machine-type-update
      parameters:
      - description: User slug
        in: path
        name: user-slug
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v0.OrganizationUpdateMachineTypeParams'
        description: Machine type to migrate from and to
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OrganizationUpdateMachineTypeResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Migrate machine types
      tags:
      - user
      x-codegen-request-body-name: types
  /users/{user-slug}:
    get:
      description: Show information about a specific user
      operationId: user-show
      parameters:
      - description: User slug
        in: path
        name: user-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.UserProfileRespModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get a specific user
      tags:
      - user
  /users/{user-slug}/addons:
    get:
      description: List all the provisioned addons for the authenticated user
      operationId: addon-list-by-user
      parameters:
      - description: User slug
        in: path
        name: user-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.OwnerAddOnsListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of the addons for user
      tags:
      - addons
  /users/{user-slug}/apple-api-credentials:
    get:
      description: List Apple API credentials for a specific Bitrise user
      operationId: apple-api-credential-list
      parameters:
      - description: User slug
        in: path
        name: user-slug
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppleAPICredentialsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: List Apple API credentials for a specific user
      tags:
      - apple-api-credentials
  /users/{user-slug}/apps:
    get:
      description: "List all the available apps for the given user.  It needs the\
        \ user slug that you can get from the [GET /me](https://api-docs.bitrise.io/#/user/user-profile)\
        \ endpoint."
      operationId: app-list-by-user
      parameters:
      - description: User slug
        in: path
        name: user-slug
        required: true
        schema:
          type: string
      - description: Order of applications
        in: query
        name: sort_by
        schema:
          enum:
          - last_build_at
          - created_at
          type: string
      - description: Slug of the first app in the response
        in: query
        name: next
        schema:
          type: string
      - description: "Max number of elements per page (default: 50)"
        in: query
        name: limit
        schema:
          maximum: 50
          type: integer
      - description: The title of the app
        in: query
        name: title
        schema:
          type: string
      - description: "The project type of the app (eg. 'ios', 'android')"
        in: query
        name: project_type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v0.AppListResponseModel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service.StandardErrorRespModel'
          description: Internal Server Error
      security:
      - PersonalAccessToken: []
      summary: Get list of the apps for a user
      tags:
      - application
components:
  schemas:
    addons.Addon:
      example:
        setup_guide:
          instructions:
          - description: description
            card_content: card_content
            type: type
          - description: description
            card_content: card_content
            type: type
          notification: notification
        summary: summary
        icon: icon
        description: description
        documentation_url: documentation_url
        title: title
        card_header_colors:
        - card_header_colors
        - card_header_colors
        platforms:
        - platforms
        - platforms
        is_beta: true
        developer_links:
        - title: title
          url: url
        - title: title
          url: url
        plans:
        - features:
          - quantity: quantity
            available: true
            description: description
          - quantity: quantity
            available: true
            description: description
          price: 0
          name: name
          id: id
        - features:
          - quantity: quantity
            available: true
            description: description
          - quantity: quantity
            available: true
            description: description
          price: 0
          name: name
          id: id
        subtitle: subtitle
        preview_images:
        - preview_images
        - preview_images
        banner_image: banner_image
        categories:
        - categories
        - categories
        id: id
        has_ui: true
      properties:
        banner_image:
          type: string
        card_header_colors:
          items:
            type: string
          type: array
        categories:
          items:
            type: string
          type: array
        description:
          type: string
        developer_links:
          items:
            $ref: '#/components/schemas/addons.DeveloperLink'
          type: array
        documentation_url:
          type: string
        has_ui:
          type: boolean
        icon:
          type: string
        id:
          type: string
        is_beta:
          type: boolean
        plans:
          items:
            $ref: '#/components/schemas/addons.Plan'
          type: array
        platforms:
          items:
            type: string
          type: array
        preview_images:
          items:
            type: string
          type: array
        setup_guide:
          $ref: '#/components/schemas/addons.SetupGuide'
        subtitle:
          type: string
        summary:
          type: string
        title:
          type: string
      type: object
    addons.DeveloperLink:
      example:
        title: title
        url: url
      properties:
        title:
          type: string
        url:
          type: string
      type: object
    addons.Feature:
      example:
        quantity: quantity
        available: true
        description: description
      properties:
        available:
          type: boolean
        description:
          type: string
        quantity:
          type: string
      type: object
    addons.Plan:
      example:
        features:
        - quantity: quantity
          available: true
          description: description
        - quantity: quantity
          available: true
          description: description
        price: 0
        name: name
        id: id
      properties:
        features:
          items:
            $ref: '#/components/schemas/addons.Feature'
          type: array
        id:
          type: string
        name:
          type: string
        price:
          type: integer
      type: object
    addons.SetupGuide:
      example:
        instructions:
        - description: description
          card_content: card_content
          type: type
        - description: description
          card_content: card_content
          type: type
        notification: notification
      properties:
        instructions:
          items:
            $ref: '#/components/schemas/addons.SetupInstruction'
          type: array
        notification:
          type: string
      type: object
    addons.SetupInstruction:
      example:
        description: description
        card_content: card_content
        type: type
      properties:
        card_content:
          type: string
        description:
          type: string
        type:
          type: string
      type: object
    nulls.Int64:
      example:
        valid: true
        int64: 6
      properties:
        int64:
          type: integer
        valid:
          description: Valid is true if Int64 is not NULL
          type: boolean
      type: object
    nulls.String:
      example:
        valid: true
        string: string
      properties:
        string:
          type: string
        valid:
          description: Valid is true if String is not NULL
          type: boolean
      type: object
    pipelineabledomain.ArtifactMeta:
      example:
        artifact_type: artifact_type
        version_name: version_name
        version_code: version_code
        id: id
        title: title
      properties:
        artifact_type:
          type: string
        id:
          type: string
        title:
          type: string
        version_code:
          type: string
        version_name:
          type: string
      type: object
    pipelineabledomain.BuildToolInvocation:
      example:
        tool_version: tool_version
        invocation_id: invocation_id
        tool: tool
      properties:
        invocation_id:
          type: string
        tool:
          type: string
        tool_version:
          type: string
      type: object
    pipelineabledomain.Environments:
      example:
        value: "{}"
        is_expand: "{}"
        key: key
      properties:
        is_expand:
          type: object
        key:
          type: string
        value:
          type: object
      type: object
    pipelineabledomain.LocalConfig:
      example:
        host: host
        username: username
      properties:
        host:
          type: string
        username:
          type: string
      type: object
    pipelineabledomain.TriggerParams:
      example:
        pull_request_merge_branch: pull_request_merge_branch
        branch_dest: branch_dest
        environments:
        - value: "{}"
          is_expand: "{}"
          key: key
        - value: "{}"
          is_expand: "{}"
          key: key
        pull_request_head_branch: pull_request_head_branch
        commit_message: commit_message
        branch: branch
        pull_request_author: pull_request_author
        pull_request_id: "{}"
        commit_hash: commit_hash
        pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
        branch_dest_repo_owner: branch_dest_repo_owner
        pull_request_repository_url: pull_request_repository_url
        tag: "{}"
        branch_repo_owner: branch_repo_owner
      properties:
        branch:
          type: string
        branch_dest:
          type: string
        branch_dest_repo_owner:
          type: string
        branch_repo_owner:
          type: string
        commit_hash:
          type: string
        commit_message:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/pipelineabledomain.Environments'
          type: array
        pull_request_author:
          type: string
        pull_request_head_branch:
          type: string
        pull_request_id:
          type: object
        pull_request_merge_branch:
          type: string
        pull_request_repository_url:
          type: string
        pull_request_unverified_merge_branch:
          type: string
        tag:
          type: object
      type: object
    service.ProxyErrorRespModel:
      properties:
        error_msg:
          type: string
      type: object
    service.StandardErrorRespModel:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    v0.ActivityEventListResponseModel:
      example:
        data:
        - repository_avatar_icon_url: repository_avatar_icon_url
          repository_title: repository_title
          event_stype:
            valid: true
            string: string
          created_at: created_at
          description:
            valid: true
            string: string
          event_icon:
            valid: true
            string: string
          title:
            valid: true
            string: string
          slug: slug
          target_path_string:
            valid: true
            string: string
        - repository_avatar_icon_url: repository_avatar_icon_url
          repository_title: repository_title
          event_stype:
            valid: true
            string: string
          created_at: created_at
          description:
            valid: true
            string: string
          event_icon:
            valid: true
            string: string
          title:
            valid: true
            string: string
          slug: slug
          target_path_string:
            valid: true
            string: string
        paging:
          next: next
          page_item_limit: 6
          total_item_count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.ActivityEventResponseItemModel'
          type: array
        paging:
          $ref: '#/components/schemas/v0.PagingResponseModel'
      type: object
    v0.ActivityEventResponseItemModel:
      example:
        repository_avatar_icon_url: repository_avatar_icon_url
        repository_title: repository_title
        event_stype:
          valid: true
          string: string
        created_at: created_at
        description:
          valid: true
          string: string
        event_icon:
          valid: true
          string: string
        title:
          valid: true
          string: string
        slug: slug
        target_path_string:
          valid: true
          string: string
      properties:
        created_at:
          type: string
        description:
          $ref: '#/components/schemas/nulls.String'
        event_icon:
          $ref: '#/components/schemas/nulls.String'
        event_stype:
          $ref: '#/components/schemas/nulls.String'
        repository_avatar_icon_url:
          type: string
        repository_title:
          type: string
        slug:
          type: string
        target_path_string:
          $ref: '#/components/schemas/nulls.String'
        title:
          $ref: '#/components/schemas/nulls.String'
      type: object
    v0.AddOnAppResponseItemModel:
      example:
        plan_started_at: plan_started_at
        icon:
          valid: true
          string: string
        title: title
        plan:
          features:
          - quantity: quantity
            available: true
            description: description
          - quantity: quantity
            available: true
            description: description
          price: 0
          name: name
          id: id
        slug: slug
      properties:
        icon:
          $ref: '#/components/schemas/nulls.String'
        plan:
          $ref: '#/components/schemas/addons.Plan'
        plan_started_at:
          type: string
        slug:
          type: string
        title:
          type: string
      type: object
    v0.AddonsListResponseModel:
      example:
        data:
        - setup_guide:
            instructions:
            - description: description
              card_content: card_content
              type: type
            - description: description
              card_content: card_content
              type: type
            notification: notification
          summary: summary
          icon: icon
          description: description
          documentation_url: documentation_url
          title: title
          card_header_colors:
          - card_header_colors
          - card_header_colors
          platforms:
          - platforms
          - platforms
          is_beta: true
          developer_links:
          - title: title
            url: url
          - title: title
            url: url
          plans:
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          subtitle: subtitle
          preview_images:
          - preview_images
          - preview_images
          banner_image: banner_image
          categories:
          - categories
          - categories
          id: id
          has_ui: true
        - setup_guide:
            instructions:
            - description: description
              card_content: card_content
              type: type
            - description: description
              card_content: card_content
              type: type
            notification: notification
          summary: summary
          icon: icon
          description: description
          documentation_url: documentation_url
          title: title
          card_header_colors:
          - card_header_colors
          - card_header_colors
          platforms:
          - platforms
          - platforms
          is_beta: true
          developer_links:
          - title: title
            url: url
          - title: title
            url: url
          plans:
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          subtitle: subtitle
          preview_images:
          - preview_images
          - preview_images
          banner_image: banner_image
          categories:
          - categories
          - categories
          id: id
          has_ui: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/addons.Addon'
          type: array
      type: object
    v0.AddonsShowResponseModel:
      example:
        data:
          setup_guide:
            instructions:
            - description: description
              card_content: card_content
              type: type
            - description: description
              card_content: card_content
              type: type
            notification: notification
          summary: summary
          icon: icon
          description: description
          documentation_url: documentation_url
          title: title
          card_header_colors:
          - card_header_colors
          - card_header_colors
          platforms:
          - platforms
          - platforms
          is_beta: true
          developer_links:
          - title: title
            url: url
          - title: title
            url: url
          plans:
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          - features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          subtitle: subtitle
          preview_images:
          - preview_images
          - preview_images
          banner_image: banner_image
          categories:
          - categories
          - categories
          id: id
          has_ui: true
      properties:
        data:
          $ref: '#/components/schemas/addons.Addon'
      type: object
    v0.AndroidKeystoreFileUploadParams:
      properties:
        alias:
          type: string
        keystore_file_name:
          type: string
        password:
          type: string
        private_key_password:
          type: string
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
      required:
      - alias
      - password
      - private_key_password
      - upload_file_name
      - upload_file_size
      type: object
    v0.AppAddOnResponseItemModel:
      example:
        setup_guide:
          instructions:
          - description: description
            card_content: card_content
            type: type
          - description: description
            card_content: card_content
            type: type
          notification: notification
        summary: summary
        icon: icon
        description: description
        documentation_url: documentation_url
        title: title
        is_enabled: true
        is_beta: true
        login_url: login_url
        terms_url: terms_url
        id: id
        scopes:
        - scopes
        - scopes
        has_ui: true
        plan:
          features:
          - quantity: quantity
            available: true
            description: description
          - quantity: quantity
            available: true
            description: description
          price: 0
          name: name
          id: id
      properties:
        description:
          type: string
        documentation_url:
          type: string
        has_ui:
          type: boolean
        icon:
          type: string
        id:
          type: string
        is_beta:
          type: boolean
        is_enabled:
          type: boolean
        login_url:
          type: string
        plan:
          $ref: '#/components/schemas/addons.Plan'
        scopes:
          items:
            type: string
          type: array
        setup_guide:
          $ref: '#/components/schemas/addons.SetupGuide'
        summary:
          type: string
        terms_url:
          type: string
        title:
          type: string
      type: object
    v0.AppAddOnsListResponseModel:
      example:
        data:
        - setup_guide:
            instructions:
            - description: description
              card_content: card_content
              type: type
            - description: description
              card_content: card_content
              type: type
            notification: notification
          summary: summary
          icon: icon
          description: description
          documentation_url: documentation_url
          title: title
          is_enabled: true
          is_beta: true
          login_url: login_url
          terms_url: terms_url
          id: id
          scopes:
          - scopes
          - scopes
          has_ui: true
          plan:
            features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
        - setup_guide:
            instructions:
            - description: description
              card_content: card_content
              type: type
            - description: description
              card_content: card_content
              type: type
            notification: notification
          summary: summary
          icon: icon
          description: description
          documentation_url: documentation_url
          title: title
          is_enabled: true
          is_beta: true
          login_url: login_url
          terms_url: terms_url
          id: id
          scopes:
          - scopes
          - scopes
          has_ui: true
          plan:
            features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.AppAddOnResponseItemModel'
          type: array
      type: object
    v0.AppConfigRequestParam:
      properties:
        app_config_datastore_yaml:
          description: "The bitrise.yml of your application, defined in JSON format"
          type: string
      required:
      - app_config_datastore_yaml
      type: object
    v0.AppConfigRespModel:
      additionalProperties:
        type: string
      type: object
    v0.AppDeleteRespModel:
      example:
        msg: msg
      properties:
        msg:
          type: string
      type: object
    v0.AppFinishParams:
      properties:
        config:
          description: "Which config to use. Specify a config that matches your project\
            \ type (e. g. `default-android-config` for `android`, etc.). If not speficied,\
            \ default value is `other-config`. The available values are `default-android-config`,\
            \ `default-cordova-config`, `default-fastlane-android-config`, `default-fastlane-ios-config`,\
            \ `flutter-config-notest-app-android`, `flutter-config-notest-app-both`,\
            \ `flutter-config-notest-app-ios`, `flutter-config-test-app-android`,\
            \ `flutter-config-test-app-both`, `flutter-config-test-app-ios`, `default-ionic-config`,\
            \ `default-ios-config`, `default-macos-config`, `default-react-native-config`,\
            \ `default-react-native-expo-config`, `other-config`."
          type: string
        envs:
          additionalProperties:
            type: string
          description: "Environment variables for the application workflows, e.g.\
            \ {\"env1\":\"val1\",\"env2\":\"val2\"}"
          type: object
        mode:
          description: "config specification mode, has to be specified with `manual`\
            \ value"
          type: string
        organization_slug:
          description: "The slug of the organization, who will be the owner of the\
            \ application, if it's not specified, then the authenticated user will\
            \ be the owner"
          type: string
        project_type:
          description: "The type of your project (`android`, `ios`, `cordova`, `other`,\
            \ `xamarin`, `macos`, `ionic`, `react-native`, `fastlane`, null)"
          type: string
        stack_id:
          description: "The id of the stack the application will be built (these can\
            \ be found in the [system report](https://github.com/bitrise-io/bitrise.io/tree/master/system_reports)\
            \ file names)"
          type: string
      required:
      - project_type
      - stack_id
      type: object
    v0.AppFinishRespModel:
      example:
        branch_name: branch_name
        is_webhook_auto_reg_supported: true
        build_trigger_token: build_trigger_token
        status: status
      properties:
        branch_name:
          type: string
        build_trigger_token:
          type: string
        is_webhook_auto_reg_supported:
          type: boolean
        status:
          type: string
      type: object
    v0.AppListResponseModel:
      example:
        data:
        - owner:
            account_type: account_type
            name: name
            slug: slug
          project_type:
            valid: true
            string: string
          repo_url:
            valid: true
            string: string
          is_disabled: true
          title: title
          avatar_url:
            valid: true
            string: string
          provider:
            valid: true
            string: string
          is_public: true
          repo_slug:
            valid: true
            string: string
          repo_owner:
            valid: true
            string: string
          slug: slug
          is_github_checks_enabled: true
          status: 0
        - owner:
            account_type: account_type
            name: name
            slug: slug
          project_type:
            valid: true
            string: string
          repo_url:
            valid: true
            string: string
          is_disabled: true
          title: title
          avatar_url:
            valid: true
            string: string
          provider:
            valid: true
            string: string
          is_public: true
          repo_slug:
            valid: true
            string: string
          repo_owner:
            valid: true
            string: string
          slug: slug
          is_github_checks_enabled: true
          status: 0
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.AppResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.AppNotificationSettingsParams:
      properties:
        on_failure:
          description: "When should Bitrise send notifications for the users on build\
            \ failure? Possible values: always, never, change"
          type: string
        on_success:
          description: "When should Bitrise send notifications for the users on build\
            \ success? Possible values: always, never, change"
          type: string
      type: object
    v0.AppNotificationSettingsUpdateResponse:
      example:
        msg: msg
      properties:
        msg:
          type: string
      type: object
    v0.AppRespModel:
      example:
        slug: slug
        status: status
      properties:
        slug:
          type: string
        status:
          type: string
      type: object
    v0.AppResponseItemModel:
      example:
        owner:
          account_type: account_type
          name: name
          slug: slug
        project_type:
          valid: true
          string: string
        repo_url:
          valid: true
          string: string
        is_disabled: true
        title: title
        avatar_url:
          valid: true
          string: string
        provider:
          valid: true
          string: string
        is_public: true
        repo_slug:
          valid: true
          string: string
        repo_owner:
          valid: true
          string: string
        slug: slug
        is_github_checks_enabled: true
        status: 0
      properties:
        avatar_url:
          $ref: '#/components/schemas/nulls.String'
        is_disabled:
          type: boolean
        is_github_checks_enabled:
          type: boolean
        is_public:
          type: boolean
        owner:
          $ref: '#/components/schemas/v0.OwnerAccountResponseModel'
        project_type:
          $ref: '#/components/schemas/nulls.String'
        provider:
          $ref: '#/components/schemas/nulls.String'
        repo_owner:
          $ref: '#/components/schemas/nulls.String'
        repo_slug:
          $ref: '#/components/schemas/nulls.String'
        repo_url:
          $ref: '#/components/schemas/nulls.String'
        slug:
          type: string
        status:
          type: integer
        title:
          type: string
      type: object
    v0.AppSecret:
      example:
        is_exposed_for_pull_requests: true
        expand_in_step_inputs: true
        name: name
        is_protected: true
      properties:
        expand_in_step_inputs:
          description: Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
          type: boolean
        is_exposed_for_pull_requests:
          description: Expose for Pull Requests?
          type: boolean
        is_protected:
          description: Secret marked as protected?
          type: boolean
        name:
          description: Name of the secret
          type: string
      type: object
    v0.AppSecretGetValueResponse:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    v0.AppSecretListResponse:
      example:
        secrets:
        - is_exposed_for_pull_requests: true
          expand_in_step_inputs: true
          name: name
          is_protected: true
        - is_exposed_for_pull_requests: true
          expand_in_step_inputs: true
          name: name
          is_protected: true
      properties:
        secrets:
          items:
            $ref: '#/components/schemas/v0.AppSecret'
          type: array
      type: object
    v0.AppSecretUpsertParams:
      properties:
        expand_in_step_inputs:
          description: Replace variable in inputs? https://devcenter.bitrise.io/en/references/steps-reference/step-inputs-reference.html#step-input-properties
          type: boolean
        is_exposed_for_pull_requests:
          description: Expose for Pull Requests?
          type: boolean
        is_protected:
          description: Secret marked as protected?
          type: boolean
        value:
          description: Value of the secret
          type: string
      type: object
    v0.AppShowResponseModel:
      example:
        data:
          owner:
            account_type: account_type
            name: name
            slug: slug
          project_type:
            valid: true
            string: string
          repo_url:
            valid: true
            string: string
          is_disabled: true
          title: title
          avatar_url:
            valid: true
            string: string
          provider:
            valid: true
            string: string
          is_public: true
          repo_slug:
            valid: true
            string: string
          repo_owner:
            valid: true
            string: string
          slug: slug
          is_github_checks_enabled: true
          status: 0
      properties:
        data:
          $ref: '#/components/schemas/v0.AppResponseItemModel'
      type: object
    v0.AppUpdateParams:
      properties:
        apple_credential_user_id:
          description: "The new apple credential user ID (recommendation: use the\
            \ UI to set this)"
          type: integer
        apple_credential_user_slug:
          description: "The new apple credential user slug (recommendation: use the\
            \ UI to set this)"
          type: string
        default_branch:
          description: The new default branch for the application.
          type: string
        is_public:
          description: The new value of whether an application should be publicly
            visible
          type: boolean
        repository_url:
          description: The new repository URL for the application.
          type: string
        services_credential_user_id:
          description: "The new service credential user ID (recommendation: use the\
            \ UI to set this)"
          type: integer
        title:
          description: The new title of the application.
          type: string
      type: object
    v0.AppUpdateRespModel:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    v0.AppUploadParams:
      properties:
        default_branch_name:
          description: "The default branch of the repository. If it's not specified,\
            \ it will be `master`."
          type: string
        git_owner:
          description: "[Deprecated] You no longer need to provide this field."
          type: string
        git_repo_slug:
          description: "[Deprecated] You no longer need to provide this field."
          type: string
        is_public:
          description: "If `true` then the repository visibility setting will be public,\
            \ in case of `false` it will be private"
          type: boolean
        manual_approval_enabled:
          description: "Toggles whether manual approval should be enabled for the\
            \ app's builds. If it's not specified, it will be `true`."
          type: boolean
        organization_slug:
          description: "The slug of the organization, who will be the owner of the\
            \ application. If it's not specified, then the authenticated user will\
            \ be the owner."
          type: string
        provider:
          description: "The git provider you are using, it can be `github`, `bitbucket`,\
            \ `gitlab`, `gitlab-self-hosted` or `custom`"
          type: string
        repo_url:
          description: The URL of your repository
          type: string
        title:
          description: "The title of the application. If it's not specified, it will\
            \ be the git repository's name."
          type: string
        type:
          description: "[Deprecated] You no longer need to provide this field."
          type: string
      required:
      - is_public
      - repo_url
      type: object
    v0.AppWebhookCreateParams:
      properties:
        events:
          items:
            type: string
          type: array
        headers:
          items:
            type: integer
          type: array
        secret:
          type: string
        url:
          type: string
      required:
      - events
      - secret
      - url
      type: object
    v0.AppWebhookCreatedResponseModel:
      example:
        data:
          headers:
          - 0
          - 0
          updated_at: updated_at
          created_at: created_at
          registered_by_addon: true
          events:
          - events
          - events
          slug: slug
          url: url
      properties:
        data:
          $ref: '#/components/schemas/v0.AppWebhookResponseItemModel'
      type: object
    v0.AppWebhookDeletedResponseModel:
      example:
        data:
          headers:
          - 0
          - 0
          updated_at: updated_at
          created_at: created_at
          registered_by_addon: true
          events:
          - events
          - events
          slug: slug
          url: url
      properties:
        data:
          $ref: '#/components/schemas/v0.AppWebhookResponseItemModel'
      type: object
    v0.AppWebhookListResponseModel:
      example:
        data:
        - headers:
          - 0
          - 0
          updated_at: updated_at
          created_at: created_at
          registered_by_addon: true
          events:
          - events
          - events
          slug: slug
          url: url
        - headers:
          - 0
          - 0
          updated_at: updated_at
          created_at: created_at
          registered_by_addon: true
          events:
          - events
          - events
          slug: slug
          url: url
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.AppWebhookResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.AppWebhookResponseItemModel:
      example:
        headers:
        - 0
        - 0
        updated_at: updated_at
        created_at: created_at
        registered_by_addon: true
        events:
        - events
        - events
        slug: slug
        url: url
      properties:
        created_at:
          type: string
        events:
          items:
            type: string
          type: array
        headers:
          items:
            type: integer
          type: array
        registered_by_addon:
          type: boolean
        slug:
          type: string
        updated_at:
          type: string
        url:
          type: string
      type: object
    v0.AppWebhookResponseModel:
      example:
        data:
          headers:
          - 0
          - 0
          updated_at: updated_at
          created_at: created_at
          registered_by_addon: true
          events:
          - events
          - events
          slug: slug
          url: url
      properties:
        data:
          $ref: '#/components/schemas/v0.AppWebhookResponseItemModel'
      type: object
    v0.AppWebhookUpdateParams:
      properties:
        events:
          items:
            type: string
          type: array
        headers:
          items:
            type: integer
          type: array
        url:
          type: string
      required:
      - events
      - url
      type: object
    v0.AppleAPICredentialResponseItem:
      example:
        issuer_id: issuer_id
        updated_at: updated_at
        key_id: key_id
        name: name
        created_at: created_at
        slug: slug
      properties:
        created_at:
          type: string
        issuer_id:
          type: string
        key_id:
          type: string
        name:
          type: string
        slug:
          type: string
        updated_at:
          type: string
      type: object
    v0.AppleAPICredentialsListResponse:
      example:
        data:
        - issuer_id: issuer_id
          updated_at: updated_at
          key_id: key_id
          name: name
          created_at: created_at
          slug: slug
        - issuer_id: issuer_id
          updated_at: updated_at
          key_id: key_id
          name: name
          created_at: created_at
          slug: slug
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.AppleAPICredentialResponseItem'
          type: array
      type: object
    v0.ArchivedBuildArtifact:
      example:
        artifact_meta:
          key: ""
        artifact_type: artifact_type
        public_page_token: public_page_token
        is_public_page_enabled: true
        created_at: created_at
        id: id
        title: title
        file_size_bytes: 0
      properties:
        artifact_meta:
          additionalProperties: true
          type: object
        artifact_type:
          type: string
        created_at:
          type: string
        file_size_bytes:
          type: integer
        id:
          type: string
        is_public_page_enabled:
          type: boolean
        public_page_token:
          type: string
        title:
          type: string
      type: object
    v0.ArchivedBuildListResponseModel:
      example:
        data:
        - finished_at: finished_at
          commit_message: commit_message
          started_on_worker_at: started_on_worker_at
          triggered_by: triggered_by
          branch: branch
          pipeline_workflow_id: pipeline_workflow_id
          pull_request_id: 5
          commit_hash: commit_hash
          pull_request_view_url: pull_request_view_url
          stack_identifier: stack_identifier
          build_artifacts:
          - artifact_meta:
              key: ""
            artifact_type: artifact_type
            public_page_token: public_page_token
            is_public_page_enabled: true
            created_at: created_at
            id: id
            title: title
            file_size_bytes: 0
          - artifact_meta:
              key: ""
            artifact_type: artifact_type
            public_page_token: public_page_token
            is_public_page_enabled: true
            created_at: created_at
            id: id
            title: title
            file_size_bytes: 0
          pull_request_target_branch: pull_request_target_branch
          machine_type_id: machine_type_id
          credit_cost: 1
          triggered_workflow: triggered_workflow
          abort_reason: abort_reason
          build_number: 6
          status_text: status_text
          tag: tag
          slug: slug
          original_build_params:
          - 5
          - 5
          status: 2
        - finished_at: finished_at
          commit_message: commit_message
          started_on_worker_at: started_on_worker_at
          triggered_by: triggered_by
          branch: branch
          pipeline_workflow_id: pipeline_workflow_id
          pull_request_id: 5
          commit_hash: commit_hash
          pull_request_view_url: pull_request_view_url
          stack_identifier: stack_identifier
          build_artifacts:
          - artifact_meta:
              key: ""
            artifact_type: artifact_type
            public_page_token: public_page_token
            is_public_page_enabled: true
            created_at: created_at
            id: id
            title: title
            file_size_bytes: 0
          - artifact_meta:
              key: ""
            artifact_type: artifact_type
            public_page_token: public_page_token
            is_public_page_enabled: true
            created_at: created_at
            id: id
            title: title
            file_size_bytes: 0
          pull_request_target_branch: pull_request_target_branch
          machine_type_id: machine_type_id
          credit_cost: 1
          triggered_workflow: triggered_workflow
          abort_reason: abort_reason
          build_number: 6
          status_text: status_text
          tag: tag
          slug: slug
          original_build_params:
          - 5
          - 5
          status: 2
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.ArchivedBuildResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.ArchivedBuildResponseItemModel:
      example:
        finished_at: finished_at
        commit_message: commit_message
        started_on_worker_at: started_on_worker_at
        triggered_by: triggered_by
        branch: branch
        pipeline_workflow_id: pipeline_workflow_id
        pull_request_id: 5
        commit_hash: commit_hash
        pull_request_view_url: pull_request_view_url
        stack_identifier: stack_identifier
        build_artifacts:
        - artifact_meta:
            key: ""
          artifact_type: artifact_type
          public_page_token: public_page_token
          is_public_page_enabled: true
          created_at: created_at
          id: id
          title: title
          file_size_bytes: 0
        - artifact_meta:
            key: ""
          artifact_type: artifact_type
          public_page_token: public_page_token
          is_public_page_enabled: true
          created_at: created_at
          id: id
          title: title
          file_size_bytes: 0
        pull_request_target_branch: pull_request_target_branch
        machine_type_id: machine_type_id
        credit_cost: 1
        triggered_workflow: triggered_workflow
        abort_reason: abort_reason
        build_number: 6
        status_text: status_text
        tag: tag
        slug: slug
        original_build_params:
        - 5
        - 5
        status: 2
      properties:
        abort_reason:
          type: string
        branch:
          type: string
        build_artifacts:
          items:
            $ref: '#/components/schemas/v0.ArchivedBuildArtifact'
          type: array
        build_number:
          type: integer
        commit_hash:
          type: string
        commit_message:
          type: string
        credit_cost:
          type: integer
        finished_at:
          type: string
        machine_type_id:
          type: string
        original_build_params:
          items:
            type: integer
          type: array
        pipeline_workflow_id:
          type: string
        pull_request_id:
          type: integer
        pull_request_target_branch:
          type: string
        pull_request_view_url:
          type: string
        slug:
          type: string
        stack_identifier:
          type: string
        started_on_worker_at:
          type: string
        status:
          type: integer
        status_text:
          type: string
        tag:
          type: string
        triggered_by:
          type: string
        triggered_workflow:
          type: string
      type: object
    v0.ArtifactDeleteResponseModel:
      example:
        data:
          intermediate_file_info:
          - 1
          - 1
          artifact_meta:
          - 0
          - 0
          artifact_type:
            valid: true
            string: string
          is_public_page_enabled: true
          expiring_download_url: expiring_download_url
          public_install_page_url: public_install_page_url
          title:
            valid: true
            string: string
          file_size_bytes: 6
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.ArtifactResponseItemModel'
      type: object
    v0.ArtifactListElementResponseModel:
      example:
        intermediate_file_info:
        - 1
        - 1
        artifact_meta:
        - 0
        - 0
        artifact_type:
          valid: true
          string: string
        is_public_page_enabled: true
        title:
          valid: true
          string: string
        file_size_bytes: 6
        slug: slug
      properties:
        artifact_meta:
          items:
            type: integer
          type: array
        artifact_type:
          $ref: '#/components/schemas/nulls.String'
        file_size_bytes:
          type: integer
        intermediate_file_info:
          items:
            type: integer
          type: array
        is_public_page_enabled:
          type: boolean
        slug:
          type: string
        title:
          $ref: '#/components/schemas/nulls.String'
      type: object
    v0.ArtifactListResponseModel:
      example:
        data:
        - intermediate_file_info:
          - 1
          - 1
          artifact_meta:
          - 0
          - 0
          artifact_type:
            valid: true
            string: string
          is_public_page_enabled: true
          title:
            valid: true
            string: string
          file_size_bytes: 6
          slug: slug
        - intermediate_file_info:
          - 1
          - 1
          artifact_meta:
          - 0
          - 0
          artifact_type:
            valid: true
            string: string
          is_public_page_enabled: true
          title:
            valid: true
            string: string
          file_size_bytes: 6
          slug: slug
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.ArtifactListElementResponseModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.ArtifactResponseItemModel:
      example:
        intermediate_file_info:
        - 1
        - 1
        artifact_meta:
        - 0
        - 0
        artifact_type:
          valid: true
          string: string
        is_public_page_enabled: true
        expiring_download_url: expiring_download_url
        public_install_page_url: public_install_page_url
        title:
          valid: true
          string: string
        file_size_bytes: 6
        slug: slug
      properties:
        artifact_meta:
          items:
            type: integer
          type: array
        artifact_type:
          $ref: '#/components/schemas/nulls.String'
        expiring_download_url:
          type: string
        file_size_bytes:
          type: integer
        intermediate_file_info:
          items:
            type: integer
          type: array
        is_public_page_enabled:
          type: boolean
        public_install_page_url:
          type: string
        slug:
          type: string
        title:
          $ref: '#/components/schemas/nulls.String'
      type: object
    v0.ArtifactShowResponseModel:
      example:
        data:
          intermediate_file_info:
          - 1
          - 1
          artifact_meta:
          - 0
          - 0
          artifact_type:
            valid: true
            string: string
          is_public_page_enabled: true
          expiring_download_url: expiring_download_url
          public_install_page_url: public_install_page_url
          title:
            valid: true
            string: string
          file_size_bytes: 6
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.ArtifactResponseItemModel'
      type: object
    v0.ArtifactUpdateParams:
      properties:
        is_public_page_enabled:
          type: boolean
      required:
      - is_public_page_enabled
      type: object
    v0.BitriseYMLConfigGetResponse:
      example:
        location: "{}"
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/website.BitriseYMLLocation'
          description: "Location of bitrise.yml file. Enums(bitrise.io, repository)"
          type: object
      type: object
    v0.BitriseYMLConfigUpdateParams:
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/website.BitriseYMLLocation'
          description: "Location of bitrise.yml file. Enums(bitrise.io, repository)"
          example: repository
          type: object
      type: object
    v0.BranchListResponseModel:
      example:
        data:
        - data
        - data
      properties:
        data:
          items:
            type: string
          type: array
      type: object
    v0.BuildAbortParams:
      properties:
        abort_reason:
          type: string
        abort_with_success:
          type: boolean
        skip_notifications:
          type: boolean
      required:
      - abort_reason
      - abort_with_success
      - skip_notifications
      type: object
    v0.BuildAbortResponseModel:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    v0.BuildCertificateListResponseModel:
      example:
        data:
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          certificate_password: certificate_password
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          certificate_password: certificate_password
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.BuildCertificateResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.BuildCertificateResponseItemModel:
      example:
        processed: true
        download_url: download_url
        is_expose: true
        upload_file_name: upload_file_name
        certificate_password: certificate_password
        upload_url: upload_url
        upload_file_size: 0
        is_protected: true
        slug: slug
      properties:
        certificate_password:
          type: string
        download_url:
          type: string
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
        slug:
          type: string
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
        upload_url:
          type: string
      type: object
    v0.BuildCertificateResponseModel:
      example:
        data:
          processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          certificate_password: certificate_password
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.BuildCertificateResponseItemModel'
      type: object
    v0.BuildCertificateUpdateParams:
      properties:
        certificate_password:
          type: string
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
      type: object
    v0.BuildCertificateUploadParams:
      properties:
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
      required:
      - upload_file_name
      - upload_file_size
      type: object
    v0.BuildListAllResponseItemModel:
      example:
        environment_prepare_finished_at: environment_prepare_finished_at
        finished_at: finished_at
        commit_message:
          valid: true
          string: string
        repository:
          owner:
            account_type: account_type
            name: name
            slug: slug
          project_type:
            valid: true
            string: string
          repo_url:
            valid: true
            string: string
          is_disabled: true
          title: title
          avatar_url:
            valid: true
            string: string
          provider:
            valid: true
            string: string
          is_public: true
          repo_slug:
            valid: true
            string: string
          repo_owner:
            valid: true
            string: string
          slug: slug
          is_github_checks_enabled: true
          status: 0
        triggered_by:
          valid: true
          string: string
        branch:
          valid: true
          string: string
        commit_hash:
          valid: true
          string: string
        pull_request_view_url:
          valid: true
          string: string
        stack_identifier:
          valid: true
          string: string
        pull_request_target_branch:
          valid: true
          string: string
        machine_type_id:
          valid: true
          string: string
        abort_reason:
          valid: true
          string: string
        tag:
          valid: true
          string: string
        slug: slug
        original_build_params:
        - 6
        - 6
        is_processed: true
        triggered_at: triggered_at
        commit_view_url:
          valid: true
          string: string
        is_on_hold: true
        started_on_worker_at: started_on_worker_at
        pull_request_id: 1
        credit_cost:
          valid: true
          int64: 6
        triggered_workflow: triggered_workflow
        build_number: 0
        status_text: status_text
        status: 5
      properties:
        abort_reason:
          $ref: '#/components/schemas/nulls.String'
        branch:
          $ref: '#/components/schemas/nulls.String'
        build_number:
          type: integer
        commit_hash:
          $ref: '#/components/schemas/nulls.String'
        commit_message:
          $ref: '#/components/schemas/nulls.String'
        commit_view_url:
          $ref: '#/components/schemas/nulls.String'
        credit_cost:
          $ref: '#/components/schemas/nulls.Int64'
        environment_prepare_finished_at:
          type: string
        finished_at:
          type: string
        is_on_hold:
          type: boolean
        is_processed:
          type: boolean
        machine_type_id:
          $ref: '#/components/schemas/nulls.String'
        original_build_params:
          items:
            type: integer
          type: array
        pull_request_id:
          type: integer
        pull_request_target_branch:
          $ref: '#/components/schemas/nulls.String'
        pull_request_view_url:
          $ref: '#/components/schemas/nulls.String'
        repository:
          $ref: '#/components/schemas/v0.AppResponseItemModel'
        slug:
          type: string
        stack_identifier:
          $ref: '#/components/schemas/nulls.String'
        started_on_worker_at:
          type: string
        status:
          type: integer
        status_text:
          type: string
        tag:
          $ref: '#/components/schemas/nulls.String'
        triggered_at:
          type: string
        triggered_by:
          $ref: '#/components/schemas/nulls.String'
        triggered_workflow:
          type: string
      type: object
    v0.BuildListAllResponseModel:
      example:
        data:
        - environment_prepare_finished_at: environment_prepare_finished_at
          finished_at: finished_at
          commit_message:
            valid: true
            string: string
          repository:
            owner:
              account_type: account_type
              name: name
              slug: slug
            project_type:
              valid: true
              string: string
            repo_url:
              valid: true
              string: string
            is_disabled: true
            title: title
            avatar_url:
              valid: true
              string: string
            provider:
              valid: true
              string: string
            is_public: true
            repo_slug:
              valid: true
              string: string
            repo_owner:
              valid: true
              string: string
            slug: slug
            is_github_checks_enabled: true
            status: 0
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          commit_hash:
            valid: true
            string: string
          pull_request_view_url:
            valid: true
            string: string
          stack_identifier:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          machine_type_id:
            valid: true
            string: string
          abort_reason:
            valid: true
            string: string
          tag:
            valid: true
            string: string
          slug: slug
          original_build_params:
          - 6
          - 6
          is_processed: true
          triggered_at: triggered_at
          commit_view_url:
            valid: true
            string: string
          is_on_hold: true
          started_on_worker_at: started_on_worker_at
          pull_request_id: 1
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          status_text: status_text
          status: 5
        - environment_prepare_finished_at: environment_prepare_finished_at
          finished_at: finished_at
          commit_message:
            valid: true
            string: string
          repository:
            owner:
              account_type: account_type
              name: name
              slug: slug
            project_type:
              valid: true
              string: string
            repo_url:
              valid: true
              string: string
            is_disabled: true
            title: title
            avatar_url:
              valid: true
              string: string
            provider:
              valid: true
              string: string
            is_public: true
            repo_slug:
              valid: true
              string: string
            repo_owner:
              valid: true
              string: string
            slug: slug
            is_github_checks_enabled: true
            status: 0
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          commit_hash:
            valid: true
            string: string
          pull_request_view_url:
            valid: true
            string: string
          stack_identifier:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          machine_type_id:
            valid: true
            string: string
          abort_reason:
            valid: true
            string: string
          tag:
            valid: true
            string: string
          slug: slug
          original_build_params:
          - 6
          - 6
          is_processed: true
          triggered_at: triggered_at
          commit_view_url:
            valid: true
            string: string
          is_on_hold: true
          started_on_worker_at: started_on_worker_at
          pull_request_id: 1
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          status_text: status_text
          status: 5
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.BuildListAllResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.BuildListResponseModel:
      example:
        data:
        - environment_prepare_finished_at: environment_prepare_finished_at
          log_format: log_format
          finished_at: finished_at
          commit_message:
            valid: true
            string: string
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          commit_hash:
            valid: true
            string: string
          pull_request_view_url:
            valid: true
            string: string
          stack_identifier:
            valid: true
            string: string
          is_status_sent: true
          pull_request_target_branch:
            valid: true
            string: string
          machine_type_id:
            valid: true
            string: string
          abort_reason:
            valid: true
            string: string
          tag:
            valid: true
            string: string
          slug: slug
          original_build_params:
          - 1
          - 1
          is_processed: true
          triggered_at: triggered_at
          commit_view_url:
            valid: true
            string: string
          is_on_hold: true
          started_on_worker_at: started_on_worker_at
          pipeline_workflow_id: pipeline_workflow_id
          pull_request_id: 5
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          status_text: status_text
          status: 5
        - environment_prepare_finished_at: environment_prepare_finished_at
          log_format: log_format
          finished_at: finished_at
          commit_message:
            valid: true
            string: string
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          commit_hash:
            valid: true
            string: string
          pull_request_view_url:
            valid: true
            string: string
          stack_identifier:
            valid: true
            string: string
          is_status_sent: true
          pull_request_target_branch:
            valid: true
            string: string
          machine_type_id:
            valid: true
            string: string
          abort_reason:
            valid: true
            string: string
          tag:
            valid: true
            string: string
          slug: slug
          original_build_params:
          - 1
          - 1
          is_processed: true
          triggered_at: triggered_at
          commit_view_url:
            valid: true
            string: string
          is_on_hold: true
          started_on_worker_at: started_on_worker_at
          pipeline_workflow_id: pipeline_workflow_id
          pull_request_id: 5
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          status_text: status_text
          status: 5
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.BuildResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.BuildParamsEnvironment:
      properties:
        is_expand:
          type: boolean
        mapped_to:
          type: string
        value:
          type: string
      type: object
    v0.BuildRequestListResponseModel:
      example:
        data:
        - build_params:
          - 0
          - 0
          created_at: created_at
          pull_request_url: pull_request_url
          slug: slug
        - build_params:
          - 0
          - 0
          created_at: created_at
          pull_request_url: pull_request_url
          slug: slug
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.BuildRequestResponseItemModel'
          type: array
      type: object
    v0.BuildRequestResponseItemModel:
      example:
        build_params:
        - 0
        - 0
        created_at: created_at
        pull_request_url: pull_request_url
        slug: slug
      properties:
        build_params:
          items:
            type: integer
          type: array
        created_at:
          type: string
        pull_request_url:
          type: string
        slug:
          type: string
      type: object
    v0.BuildRequestUpdateParams:
      properties:
        is_approved:
          type: boolean
      required:
      - is_approved
      type: object
    v0.BuildRequestUpdateResponseModel:
      example:
        data:
          build_params:
          - 0
          - 0
          created_at: created_at
          pull_request_url: pull_request_url
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.BuildRequestResponseItemModel'
      type: object
    v0.BuildResponseItemModel:
      example:
        environment_prepare_finished_at: environment_prepare_finished_at
        log_format: log_format
        finished_at: finished_at
        commit_message:
          valid: true
          string: string
        triggered_by:
          valid: true
          string: string
        branch:
          valid: true
          string: string
        commit_hash:
          valid: true
          string: string
        pull_request_view_url:
          valid: true
          string: string
        stack_identifier:
          valid: true
          string: string
        is_status_sent: true
        pull_request_target_branch:
          valid: true
          string: string
        machine_type_id:
          valid: true
          string: string
        abort_reason:
          valid: true
          string: string
        tag:
          valid: true
          string: string
        slug: slug
        original_build_params:
        - 1
        - 1
        is_processed: true
        triggered_at: triggered_at
        commit_view_url:
          valid: true
          string: string
        is_on_hold: true
        started_on_worker_at: started_on_worker_at
        pipeline_workflow_id: pipeline_workflow_id
        pull_request_id: 5
        credit_cost:
          valid: true
          int64: 6
        triggered_workflow: triggered_workflow
        build_number: 0
        status_text: status_text
        status: 5
      properties:
        abort_reason:
          $ref: '#/components/schemas/nulls.String'
        branch:
          $ref: '#/components/schemas/nulls.String'
        build_number:
          type: integer
        commit_hash:
          $ref: '#/components/schemas/nulls.String'
        commit_message:
          $ref: '#/components/schemas/nulls.String'
        commit_view_url:
          $ref: '#/components/schemas/nulls.String'
        credit_cost:
          $ref: '#/components/schemas/nulls.Int64'
        environment_prepare_finished_at:
          type: string
        finished_at:
          type: string
        is_on_hold:
          type: boolean
        is_processed:
          type: boolean
        is_status_sent:
          type: boolean
        log_format:
          type: string
        machine_type_id:
          $ref: '#/components/schemas/nulls.String'
        original_build_params:
          items:
            type: integer
          type: array
        pipeline_workflow_id:
          type: string
        pull_request_id:
          type: integer
        pull_request_target_branch:
          $ref: '#/components/schemas/nulls.String'
        pull_request_view_url:
          $ref: '#/components/schemas/nulls.String'
        slug:
          type: string
        stack_identifier:
          $ref: '#/components/schemas/nulls.String'
        started_on_worker_at:
          type: string
        status:
          type: integer
        status_text:
          type: string
        tag:
          $ref: '#/components/schemas/nulls.String'
        triggered_at:
          type: string
        triggered_by:
          $ref: '#/components/schemas/nulls.String'
        triggered_workflow:
          type: string
      type: object
    v0.BuildShowResponseModel:
      example:
        data:
          environment_prepare_finished_at: environment_prepare_finished_at
          log_format: log_format
          finished_at: finished_at
          commit_message:
            valid: true
            string: string
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          commit_hash:
            valid: true
            string: string
          pull_request_view_url:
            valid: true
            string: string
          stack_identifier:
            valid: true
            string: string
          is_status_sent: true
          pull_request_target_branch:
            valid: true
            string: string
          machine_type_id:
            valid: true
            string: string
          abort_reason:
            valid: true
            string: string
          tag:
            valid: true
            string: string
          slug: slug
          original_build_params:
          - 1
          - 1
          is_processed: true
          triggered_at: triggered_at
          commit_view_url:
            valid: true
            string: string
          is_on_hold: true
          started_on_worker_at: started_on_worker_at
          pipeline_workflow_id: pipeline_workflow_id
          pull_request_id: 5
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          status_text: status_text
          status: 5
      properties:
        data:
          $ref: '#/components/schemas/v0.BuildResponseItemModel'
      type: object
    v0.BuildTriggerParams:
      properties:
        build_params:
          allOf:
          - $ref: '#/components/schemas/v0.BuildTriggerParamsBuildParams'
          description: The public part of the SSH key you would like to use
          type: object
        hook_info:
          $ref: '#/components/schemas/v0.BuildTriggerParamsHookInfo'
      type: object
    v0.BuildTriggerParamsBuildParams:
      properties:
        base_repository_url:
          type: string
        branch:
          type: string
        branch_dest:
          type: string
        branch_dest_repo_owner:
          type: string
        branch_repo_owner:
          type: string
        build_request_slug:
          type: string
        commit_hash:
          type: string
        commit_message:
          type: string
        commit_paths:
          items:
            $ref: '#/components/schemas/v0.CommitPaths'
          type: array
        diff_url:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/v0.BuildParamsEnvironment'
          type: array
        head_repository_url:
          type: string
        pipeline_id:
          type: string
        pull_request_author:
          type: string
        pull_request_head_branch:
          type: string
        pull_request_id:
          type: object
        pull_request_merge_branch:
          type: string
        pull_request_repository_url:
          type: string
        pull_request_unverified_merge_branch:
          type: string
        skip_git_status_report:
          type: boolean
        tag:
          type: string
        workflow_id:
          type: string
      type: object
    v0.BuildTriggerParamsHookInfo:
      properties:
        type:
          description: Should be "bitrise"
          example: bitrise
          type: string
      type: object
    v0.BuildTriggerRespModel:
      example:
        service: service
        triggered_workflow: triggered_workflow
        build_number: 0
        build_slug: build_slug
        message: message
        build_url: build_url
        slug: slug
        status: status
      properties:
        build_number:
          type: integer
        build_slug:
          type: string
        build_url:
          type: string
        message:
          type: string
        service:
          type: string
        slug:
          type: string
        status:
          type: string
        triggered_workflow:
          type: string
      type: object
    v0.BuildWorkflowListResponseModel:
      example:
        data:
        - data
        - data
      properties:
        data:
          items:
            type: string
          type: array
      type: object
    v0.CacheItemDownloadResponseModel:
      example:
        data:
          download_url: download_url
      properties:
        data:
          $ref: '#/components/schemas/v0.CacheItemDownloadURLResponseModel'
      type: object
    v0.CacheItemDownloadURLResponseModel:
      example:
        download_url: download_url
      properties:
        download_url:
          type: string
      type: object
    v0.CacheItemListResponseItemModel:
      example:
        archive_filename: archive_filename
        archive_size: 0
        last_used_at: last_used_at
        expires_at: expires_at
        cache_key: cache_key
        created_at: created_at
        id: id
        app_id: app_id
      properties:
        app_id:
          type: string
        archive_filename:
          type: string
        archive_size:
          type: integer
        cache_key:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        id:
          type: string
        last_used_at:
          type: string
      type: object
    v0.CacheItemListResponseModel:
      example:
        data:
        - archive_filename: archive_filename
          archive_size: 0
          last_used_at: last_used_at
          expires_at: expires_at
          cache_key: cache_key
          created_at: created_at
          id: id
          app_id: app_id
        - archive_filename: archive_filename
          archive_size: 0
          last_used_at: last_used_at
          expires_at: expires_at
          cache_key: cache_key
          created_at: created_at
          id: id
          app_id: app_id
        paging:
          next: next
          page_item_limit: 6
          total_item_count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.CacheItemListResponseItemModel'
          type: array
        paging:
          $ref: '#/components/schemas/v0.PagingResponseModel'
      type: object
    v0.CommitPaths:
      properties:
        added:
          items:
            type: string
          type: array
        modified:
          items:
            type: string
          type: array
        removed:
          items:
            type: string
          type: array
      type: object
    v0.OrganizationDataModel:
      example:
        avatar_icon_url:
          valid: true
          string: string
        name: name
        owners:
        - email: email
          slug: slug
          username: username
        - email: email
          slug: slug
          username: username
        concurrency_count: 0
        slug: slug
      properties:
        avatar_icon_url:
          $ref: '#/components/schemas/nulls.String'
        concurrency_count:
          type: integer
        name:
          type: string
        owners:
          items:
            $ref: '#/components/schemas/v0.OrganizationOwner'
          type: array
        slug:
          type: string
      type: object
    v0.OrganizationListRespModel:
      example:
        data:
        - avatar_icon_url:
            valid: true
            string: string
          name: name
          owners:
          - email: email
            slug: slug
            username: username
          - email: email
            slug: slug
            username: username
          concurrency_count: 0
          slug: slug
        - avatar_icon_url:
            valid: true
            string: string
          name: name
          owners:
          - email: email
            slug: slug
            username: username
          - email: email
            slug: slug
            username: username
          concurrency_count: 0
          slug: slug
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.OrganizationDataModel'
          type: array
      type: object
    v0.OrganizationOwner:
      example:
        email: email
        slug: slug
        username: username
      properties:
        email:
          type: string
        slug:
          type: string
        username:
          type: string
      type: object
    v0.OrganizationRespModel:
      example:
        data:
          avatar_icon_url:
            valid: true
            string: string
          name: name
          owners:
          - email: email
            slug: slug
            username: username
          - email: email
            slug: slug
            username: username
          concurrency_count: 0
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.OrganizationDataModel'
      type: object
    v0.OrganizationUpdateMachineTypeParams:
      properties:
        from_machine:
          description: Machine type to migrate from
          type: string
        to_machine:
          description: Machine type to migrate to
          type: string
      type: object
    v0.OrganizationUpdateMachineTypeResponse:
      example:
        message: message
        errors:
        - app: app
          error: error
        - app: app
          error: error
        migrated_apps:
        - migrated_apps
        - migrated_apps
      properties:
        errors:
          items:
            $ref: '#/components/schemas/v0_OrganizationUpdateMachineTypeResponse_errors_inner'
          type: array
        message:
          description: The result of the migration
          type: string
        migrated_apps:
          description: "The migrated apps' identifiers in the following format \"\
            #{app.title} (#{app.slug})\""
          items:
            type: string
          type: array
      type: object
    v0.OwnerAccountResponseModel:
      example:
        account_type: account_type
        name: name
        slug: slug
      properties:
        account_type:
          type: string
        name:
          type: string
        slug:
          type: string
      type: object
    v0.OwnerAddOnResponseItemModel:
      example:
        summary: summary
        is_beta: true
        icon: icon
        id: id
        documentation_url: documentation_url
        title: title
        has_ui: true
        apps:
        - plan_started_at: plan_started_at
          icon:
            valid: true
            string: string
          title: title
          plan:
            features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          slug: slug
        - plan_started_at: plan_started_at
          icon:
            valid: true
            string: string
          title: title
          plan:
            features:
            - quantity: quantity
              available: true
              description: description
            - quantity: quantity
              available: true
              description: description
            price: 0
            name: name
            id: id
          slug: slug
      properties:
        apps:
          items:
            $ref: '#/components/schemas/v0.AddOnAppResponseItemModel'
          type: array
        documentation_url:
          type: string
        has_ui:
          type: boolean
        icon:
          type: string
        id:
          type: string
        is_beta:
          type: boolean
        summary:
          type: string
        title:
          type: string
      type: object
    v0.OwnerAddOnsListResponseModel:
      example:
        data:
        - summary: summary
          is_beta: true
          icon: icon
          id: id
          documentation_url: documentation_url
          title: title
          has_ui: true
          apps:
          - plan_started_at: plan_started_at
            icon:
              valid: true
              string: string
            title: title
            plan:
              features:
              - quantity: quantity
                available: true
                description: description
              - quantity: quantity
                available: true
                description: description
              price: 0
              name: name
              id: id
            slug: slug
          - plan_started_at: plan_started_at
            icon:
              valid: true
              string: string
            title: title
            plan:
              features:
              - quantity: quantity
                available: true
                description: description
              - quantity: quantity
                available: true
                description: description
              price: 0
              name: name
              id: id
            slug: slug
        - summary: summary
          is_beta: true
          icon: icon
          id: id
          documentation_url: documentation_url
          title: title
          has_ui: true
          apps:
          - plan_started_at: plan_started_at
            icon:
              valid: true
              string: string
            title: title
            plan:
              features:
              - quantity: quantity
                available: true
                description: description
              - quantity: quantity
                available: true
                description: description
              price: 0
              name: name
              id: id
            slug: slug
          - plan_started_at: plan_started_at
            icon:
              valid: true
              string: string
            title: title
            plan:
              features:
              - quantity: quantity
                available: true
                description: description
              - quantity: quantity
                available: true
                description: description
              price: 0
              name: name
              id: id
            slug: slug
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.OwnerAddOnResponseItemModel'
          type: array
      type: object
    v0.PagingResponseModel:
      example:
        next: next
        page_item_limit: 6
        total_item_count: 1
      properties:
        next:
          description: |-
            Next is the "anchor" for pagination. This value should be passed to the same endpoint
            to get the next page. Empty/not included if there's no "next" page.
            Stop paging when there's no "Next" item in the response!
          type: string
        page_item_limit:
          description: |-
            PageItemLimit - per-page item count. A given page might include
            less items if there's not enough items. This value is the "max item count per page".
          type: integer
        total_item_count:
          description: "TotalItemCount - total item count, through \"all pages\""
          type: integer
      type: object
    v0.PipelineAbortParams:
      properties:
        abort_reason:
          type: string
        abort_with_success:
          type: boolean
        skip_notifications:
          type: boolean
      required:
      - abort_reason
      - abort_with_success
      - skip_notifications
      type: object
    v0.PipelineListAllResponseItemModel:
      example:
        is_processed: true
        finished_at: finished_at
        triggered_at: triggered_at
        commit_message:
          valid: true
          string: string
        is_on_hold: true
        repository:
          owner:
            account_type: account_type
            name: name
            slug: slug
          project_type:
            valid: true
            string: string
          repo_url:
            valid: true
            string: string
          is_disabled: true
          title: title
          avatar_url:
            valid: true
            string: string
          provider:
            valid: true
            string: string
          is_public: true
          repo_slug:
            valid: true
            string: string
          repo_owner:
            valid: true
            string: string
          slug: slug
          is_github_checks_enabled: true
          status: 0
        triggered_by:
          valid: true
          string: string
        branch:
          valid: true
          string: string
        pull_request_id: 6
        commit_hash:
          valid: true
          string: string
        pull_request_target_branch:
          valid: true
          string: string
        is_pipeline: true
        credit_cost:
          valid: true
          int64: 6
        triggered_workflow: triggered_workflow
        build_number: 0
        started_at: started_at
        tag:
          valid: true
          string: string
        slug: slug
        status: 1
      properties:
        branch:
          $ref: '#/components/schemas/nulls.String'
        build_number:
          type: integer
        commit_hash:
          $ref: '#/components/schemas/nulls.String'
        commit_message:
          $ref: '#/components/schemas/nulls.String'
        credit_cost:
          $ref: '#/components/schemas/nulls.Int64'
        finished_at:
          type: string
        is_on_hold:
          type: boolean
        is_pipeline:
          type: boolean
        is_processed:
          type: boolean
        pull_request_id:
          type: integer
        pull_request_target_branch:
          $ref: '#/components/schemas/nulls.String'
        repository:
          $ref: '#/components/schemas/v0.AppResponseItemModel'
        slug:
          type: string
        started_at:
          type: string
        status:
          type: integer
        tag:
          $ref: '#/components/schemas/nulls.String'
        triggered_at:
          type: string
        triggered_by:
          $ref: '#/components/schemas/nulls.String'
        triggered_workflow:
          type: string
      type: object
    v0.PipelineListAllResponseModel:
      example:
        data:
        - is_processed: true
          finished_at: finished_at
          triggered_at: triggered_at
          commit_message:
            valid: true
            string: string
          is_on_hold: true
          repository:
            owner:
              account_type: account_type
              name: name
              slug: slug
            project_type:
              valid: true
              string: string
            repo_url:
              valid: true
              string: string
            is_disabled: true
            title: title
            avatar_url:
              valid: true
              string: string
            provider:
              valid: true
              string: string
            is_public: true
            repo_slug:
              valid: true
              string: string
            repo_owner:
              valid: true
              string: string
            slug: slug
            is_github_checks_enabled: true
            status: 0
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          pull_request_id: 6
          commit_hash:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          is_pipeline: true
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          started_at: started_at
          tag:
            valid: true
            string: string
          slug: slug
          status: 1
        - is_processed: true
          finished_at: finished_at
          triggered_at: triggered_at
          commit_message:
            valid: true
            string: string
          is_on_hold: true
          repository:
            owner:
              account_type: account_type
              name: name
              slug: slug
            project_type:
              valid: true
              string: string
            repo_url:
              valid: true
              string: string
            is_disabled: true
            title: title
            avatar_url:
              valid: true
              string: string
            provider:
              valid: true
              string: string
            is_public: true
            repo_slug:
              valid: true
              string: string
            repo_owner:
              valid: true
              string: string
            slug: slug
            is_github_checks_enabled: true
            status: 0
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          pull_request_id: 6
          commit_hash:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          is_pipeline: true
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          started_at: started_at
          tag:
            valid: true
            string: string
          slug: slug
          status: 1
        paging:
          next: next
          page_item_limit: 6
          total_item_count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.PipelineListAllResponseItemModel'
          type: array
        paging:
          $ref: '#/components/schemas/v0.PagingResponseModel'
      type: object
    v0.PipelineListResponseItemModel:
      example:
        is_processed: true
        finished_at: finished_at
        local_config:
          host: host
          username: username
        triggered_at: triggered_at
        build_tool_invocations:
        - tool_version: tool_version
          invocation_id: invocation_id
          tool: tool
        - tool_version: tool_version
          invocation_id: invocation_id
          tool: tool
        commit_message:
          valid: true
          string: string
        is_on_hold: true
        trigger_params:
          pull_request_merge_branch: pull_request_merge_branch
          branch_dest: branch_dest
          environments:
          - value: "{}"
            is_expand: "{}"
            key: key
          - value: "{}"
            is_expand: "{}"
            key: key
          pull_request_head_branch: pull_request_head_branch
          commit_message: commit_message
          branch: branch
          pull_request_author: pull_request_author
          pull_request_id: "{}"
          commit_hash: commit_hash
          pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
          branch_dest_repo_owner: branch_dest_repo_owner
          pull_request_repository_url: pull_request_repository_url
          tag: "{}"
          branch_repo_owner: branch_repo_owner
        triggered_by:
          valid: true
          string: string
        branch:
          valid: true
          string: string
        pull_request_id: 6
        commit_hash:
          valid: true
          string: string
        pull_request_target_branch:
          valid: true
          string: string
        is_pipeline: true
        credit_cost:
          valid: true
          int64: 6
        triggered_workflow: triggered_workflow
        build_number: 0
        started_at: started_at
        tag:
          valid: true
          string: string
        slug: slug
        artifacts:
        - artifact_type: artifact_type
          version_name: version_name
          version_code: version_code
          id: id
          title: title
        - artifact_type: artifact_type
          version_name: version_name
          version_code: version_code
          id: id
          title: title
        status: 1
      properties:
        artifacts:
          items:
            $ref: '#/components/schemas/pipelineabledomain.ArtifactMeta'
          type: array
        branch:
          $ref: '#/components/schemas/nulls.String'
        build_number:
          type: integer
        build_tool_invocations:
          items:
            $ref: '#/components/schemas/pipelineabledomain.BuildToolInvocation'
          type: array
        commit_hash:
          $ref: '#/components/schemas/nulls.String'
        commit_message:
          $ref: '#/components/schemas/nulls.String'
        credit_cost:
          $ref: '#/components/schemas/nulls.Int64'
        finished_at:
          type: string
        is_on_hold:
          type: boolean
        is_pipeline:
          type: boolean
        is_processed:
          type: boolean
        local_config:
          $ref: '#/components/schemas/pipelineabledomain.LocalConfig'
        pull_request_id:
          type: integer
        pull_request_target_branch:
          $ref: '#/components/schemas/nulls.String'
        slug:
          type: string
        started_at:
          type: string
        status:
          type: integer
        tag:
          $ref: '#/components/schemas/nulls.String'
        trigger_params:
          $ref: '#/components/schemas/pipelineabledomain.TriggerParams'
        triggered_at:
          type: string
        triggered_by:
          $ref: '#/components/schemas/nulls.String'
        triggered_workflow:
          type: string
      type: object
    v0.PipelineListResponseModel:
      example:
        data:
        - is_processed: true
          finished_at: finished_at
          local_config:
            host: host
            username: username
          triggered_at: triggered_at
          build_tool_invocations:
          - tool_version: tool_version
            invocation_id: invocation_id
            tool: tool
          - tool_version: tool_version
            invocation_id: invocation_id
            tool: tool
          commit_message:
            valid: true
            string: string
          is_on_hold: true
          trigger_params:
            pull_request_merge_branch: pull_request_merge_branch
            branch_dest: branch_dest
            environments:
            - value: "{}"
              is_expand: "{}"
              key: key
            - value: "{}"
              is_expand: "{}"
              key: key
            pull_request_head_branch: pull_request_head_branch
            commit_message: commit_message
            branch: branch
            pull_request_author: pull_request_author
            pull_request_id: "{}"
            commit_hash: commit_hash
            pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
            branch_dest_repo_owner: branch_dest_repo_owner
            pull_request_repository_url: pull_request_repository_url
            tag: "{}"
            branch_repo_owner: branch_repo_owner
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          pull_request_id: 6
          commit_hash:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          is_pipeline: true
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          started_at: started_at
          tag:
            valid: true
            string: string
          slug: slug
          artifacts:
          - artifact_type: artifact_type
            version_name: version_name
            version_code: version_code
            id: id
            title: title
          - artifact_type: artifact_type
            version_name: version_name
            version_code: version_code
            id: id
            title: title
          status: 1
        - is_processed: true
          finished_at: finished_at
          local_config:
            host: host
            username: username
          triggered_at: triggered_at
          build_tool_invocations:
          - tool_version: tool_version
            invocation_id: invocation_id
            tool: tool
          - tool_version: tool_version
            invocation_id: invocation_id
            tool: tool
          commit_message:
            valid: true
            string: string
          is_on_hold: true
          trigger_params:
            pull_request_merge_branch: pull_request_merge_branch
            branch_dest: branch_dest
            environments:
            - value: "{}"
              is_expand: "{}"
              key: key
            - value: "{}"
              is_expand: "{}"
              key: key
            pull_request_head_branch: pull_request_head_branch
            commit_message: commit_message
            branch: branch
            pull_request_author: pull_request_author
            pull_request_id: "{}"
            commit_hash: commit_hash
            pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
            branch_dest_repo_owner: branch_dest_repo_owner
            pull_request_repository_url: pull_request_repository_url
            tag: "{}"
            branch_repo_owner: branch_repo_owner
          triggered_by:
            valid: true
            string: string
          branch:
            valid: true
            string: string
          pull_request_id: 6
          commit_hash:
            valid: true
            string: string
          pull_request_target_branch:
            valid: true
            string: string
          is_pipeline: true
          credit_cost:
            valid: true
            int64: 6
          triggered_workflow: triggered_workflow
          build_number: 0
          started_at: started_at
          tag:
            valid: true
            string: string
          slug: slug
          artifacts:
          - artifact_type: artifact_type
            version_name: version_name
            version_code: version_code
            id: id
            title: title
          - artifact_type: artifact_type
            version_name: version_name
            version_code: version_code
            id: id
            title: title
          status: 1
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.PipelineListResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.PipelineRebuildParams:
      properties:
        partial:
          type: boolean
        triggered_by:
          type: string
      type: object
    v0.PipelineShowAppResponseModel:
      example:
        slug: slug
      properties:
        slug:
          type: string
      type: object
    v0.PipelineShowAttemptResponseModel:
      example:
        number_in_pipeline_build_scope: 0
        triggered_at: triggered_at
        id: id
        status: status
      properties:
        id:
          type: string
        number_in_pipeline_build_scope:
          type: integer
        status:
          type: string
        triggered_at:
          type: string
      type: object
    v0.PipelineShowEnvironmentsResponseModel:
      example:
        value: "{}"
        is_expand: true
        key: key
      properties:
        is_expand:
          type: boolean
        key:
          type: string
        value:
          type: object
      type: object
    v0.PipelineShowResponseModel:
      example:
        app:
          slug: slug
        finished_at: finished_at
        current_attempt_id: current_attempt_id
        triggered_at: triggered_at
        put_on_hold_at: "{}"
        trigger_params:
          pull_request_merge_branch: pull_request_merge_branch
          branch_dest: branch_dest
          environments:
          - value: "{}"
            is_expand: true
            key: key
          - value: "{}"
            is_expand: true
            key: key
          pull_request_head_branch: pull_request_head_branch
          commit_message: commit_message
          branch: branch
          pull_request_author: pull_request_author
          pull_request_id: pull_request_id
          commit_hash: commit_hash
          pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
          branch_dest_repo_owner: branch_dest_repo_owner
          pull_request_repository_url: pull_request_repository_url
          tag: tag
          branch_repo_owner: branch_repo_owner
        triggered_by: triggered_by
        credit_cost: "{}"
        abort_reason: abort_reason
        name: name
        stages:
        - name: name
          id: id
          workflows:
          - finished_at: finished_at
            credit_cost: "{}"
            name: name
            started_at: started_at
            external_id: external_id
            id: id
            startFailureReason: startFailureReason
            status: status
          - finished_at: finished_at
            credit_cost: "{}"
            name: name
            started_at: started_at
            external_id: external_id
            id: id
            startFailureReason: startFailureReason
            status: status
        - name: name
          id: id
          workflows:
          - finished_at: finished_at
            credit_cost: "{}"
            name: name
            started_at: started_at
            external_id: external_id
            id: id
            startFailureReason: startFailureReason
            status: status
          - finished_at: finished_at
            credit_cost: "{}"
            name: name
            started_at: started_at
            external_id: external_id
            id: id
            startFailureReason: startFailureReason
            status: status
        started_at: started_at
        id: id
        number_in_app_scope: 6
        attempts:
        - number_in_pipeline_build_scope: 0
          triggered_at: triggered_at
          id: id
          status: status
        - number_in_pipeline_build_scope: 0
          triggered_at: triggered_at
          id: id
          status: status
        status: aborted
      properties:
        abort_reason:
          type: string
        app:
          $ref: '#/components/schemas/v0.PipelineShowAppResponseModel'
        attempts:
          items:
            $ref: '#/components/schemas/v0.PipelineShowAttemptResponseModel'
          type: array
        credit_cost:
          type: object
        current_attempt_id:
          type: string
        finished_at:
          type: string
        id:
          type: string
        name:
          type: string
        number_in_app_scope:
          type: integer
        put_on_hold_at:
          type: object
        stages:
          items:
            $ref: '#/components/schemas/v0.PipelineShowStageResponseModel'
          type: array
        started_at:
          type: string
        status:
          enum:
          - aborted
          - failed
          - initializing
          - on_hold
          - running
          - succeeded
          - succeeded_with_abort
          type: string
        trigger_params:
          $ref: '#/components/schemas/v0.PipelineShowTriggerParamsResponseModel'
        triggered_at:
          type: string
        triggered_by:
          type: string
      type: object
    v0.PipelineShowStageResponseModel:
      example:
        name: name
        id: id
        workflows:
        - finished_at: finished_at
          credit_cost: "{}"
          name: name
          started_at: started_at
          external_id: external_id
          id: id
          startFailureReason: startFailureReason
          status: status
        - finished_at: finished_at
          credit_cost: "{}"
          name: name
          started_at: started_at
          external_id: external_id
          id: id
          startFailureReason: startFailureReason
          status: status
      properties:
        id:
          type: string
        name:
          type: string
        workflows:
          items:
            $ref: '#/components/schemas/v0.PipelineShowWorkflowResponseModel'
          type: array
      type: object
    v0.PipelineShowTriggerParamsResponseModel:
      example:
        pull_request_merge_branch: pull_request_merge_branch
        branch_dest: branch_dest
        environments:
        - value: "{}"
          is_expand: true
          key: key
        - value: "{}"
          is_expand: true
          key: key
        pull_request_head_branch: pull_request_head_branch
        commit_message: commit_message
        branch: branch
        pull_request_author: pull_request_author
        pull_request_id: pull_request_id
        commit_hash: commit_hash
        pull_request_unverified_merge_branch: pull_request_unverified_merge_branch
        branch_dest_repo_owner: branch_dest_repo_owner
        pull_request_repository_url: pull_request_repository_url
        tag: tag
        branch_repo_owner: branch_repo_owner
      properties:
        branch:
          type: string
        branch_dest:
          type: string
        branch_dest_repo_owner:
          type: string
        branch_repo_owner:
          type: string
        commit_hash:
          type: string
        commit_message:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/v0.PipelineShowEnvironmentsResponseModel'
          type: array
        pull_request_author:
          type: string
        pull_request_head_branch:
          type: string
        pull_request_id:
          type: string
        pull_request_merge_branch:
          type: string
        pull_request_repository_url:
          type: string
        pull_request_unverified_merge_branch:
          type: string
        tag:
          type: string
      type: object
    v0.PipelineShowWorkflowResponseModel:
      example:
        finished_at: finished_at
        credit_cost: "{}"
        name: name
        started_at: started_at
        external_id: external_id
        id: id
        startFailureReason: startFailureReason
        status: status
      properties:
        credit_cost:
          type: object
        external_id:
          type: string
        finished_at:
          type: string
        id:
          type: string
        name:
          type: string
        startFailureReason:
          type: string
        started_at:
          type: string
        status:
          type: string
      type: object
    v0.PlanDataModel:
      example:
        expires_at: expires_at
        price:
          valid: true
          int64: 6
        name: name
        id: id
        container_count: 0
      properties:
        container_count:
          type: integer
        expires_at:
          type: string
        id:
          type: string
        name:
          type: string
        price:
          $ref: '#/components/schemas/nulls.Int64'
      type: object
    v0.ProjectFileStorageDocumentUpdateParams:
      properties:
        exposed_meta_datastore:
          items:
            type: integer
          type: array
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
        user_env_key:
          type: string
      type: object
    v0.ProjectFileStorageListResponseModel:
      example:
        data:
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 6
          user_env_key: user_env_key
          exposed_meta_datastore:
          - 0
          - 0
          is_protected: true
          slug: slug
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 6
          user_env_key: user_env_key
          exposed_meta_datastore:
          - 0
          - 0
          is_protected: true
          slug: slug
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.ProjectFileStorageResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.ProjectFileStorageResponseItemModel:
      example:
        processed: true
        download_url: download_url
        is_expose: true
        upload_file_name: upload_file_name
        upload_url: upload_url
        upload_file_size: 6
        user_env_key: user_env_key
        exposed_meta_datastore:
        - 0
        - 0
        is_protected: true
        slug: slug
      properties:
        download_url:
          type: string
        exposed_meta_datastore:
          items:
            type: integer
          type: array
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
        slug:
          type: string
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
        upload_url:
          type: string
        user_env_key:
          type: string
      type: object
    v0.ProjectFileStorageResponseModel:
      example:
        data:
          processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 6
          user_env_key: user_env_key
          exposed_meta_datastore:
          - 0
          - 0
          is_protected: true
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.ProjectFileStorageResponseItemModel'
      type: object
    v0.ProjectFileStorageUploadParams:
      properties:
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
        user_env_key:
          type: string
      required:
      - upload_file_name
      - upload_file_size
      - user_env_key
      type: object
    v0.ProvProfileDocumentUpdateParams:
      properties:
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
      type: object
    v0.ProvisionProfileListResponseModel:
      example:
        data:
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
        - processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
        paging: "{}"
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.ProvisionProfileResponseItemModel'
          type: array
        paging:
          allOf:
          - $ref: '#/components/schemas/v0.PagingResponseModel'
          description: pagination
          type: object
      type: object
    v0.ProvisionProfileResponseItemModel:
      example:
        processed: true
        download_url: download_url
        is_expose: true
        upload_file_name: upload_file_name
        upload_url: upload_url
        upload_file_size: 0
        is_protected: true
        slug: slug
      properties:
        download_url:
          type: string
        is_expose:
          type: boolean
        is_protected:
          type: boolean
        processed:
          type: boolean
        slug:
          type: string
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
        upload_url:
          type: string
      type: object
    v0.ProvisionProfileResponseModel:
      example:
        data:
          processed: true
          download_url: download_url
          is_expose: true
          upload_file_name: upload_file_name
          upload_url: upload_url
          upload_file_size: 0
          is_protected: true
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.ProvisionProfileResponseItemModel'
      type: object
    v0.ProvisionProfileUploadParams:
      properties:
        upload_file_name:
          type: string
        upload_file_size:
          type: integer
      required:
      - upload_file_name
      - upload_file_size
      type: object
    v0.ReleaseCreateAppStoreParams:
      properties:
        automatic_testflight_upload:
          description: "@Deprecated use `automatic_store_upload` instead. Indicates\
            \ whether or not to upload every release candidate build automatically\
            \ to TestFlight (default: `false`)"
          type: boolean
        bundle_id:
          description: The bundle ID of the app to be released
          type: string
        description:
          description: "An internal description of the release; it won't be propagated\
            \ to the App Store (default: empty)"
          type: string
        name:
          description: The name/version of the release (e.g. `1.2`)
          type: string
        release_branch:
          description: "The branch used for building the release candidate (default:\
            \ empty)"
          type: string
        slack_webhook_url:
          description: "The Slack webhook URL to use for sending Slack notifications\
            \ (default: empty)"
          type: string
        teams_webhook_url:
          description: "The Teams webhook URL to use for sending MS Teams notifications\
            \ (default: empty)"
          type: string
        workflow:
          description: "The workflow used for building the release candidate (default:\
            \ empty)"
          type: string
      required:
      - bundle_id
      - name
      type: object
    v0.ReleaseCreateAppStoreRespModel:
      example:
        bundle_id: bundle_id
        name: name
        id: id
        platform: platform
        status: status
      properties:
        bundle_id:
          description: The bundle ID of the app
          type: string
        id:
          description: The ID of the newly created release
          type: string
        name:
          description: The name/version of the release (e.g. `1.2`)
          type: string
        platform:
          description: The platform of the release (`ios`)
          type: string
        status:
          description: "The status of the newly created release (`scheduled` or `in-progress`,\
            \ depending on whether or not the release candidate settings were specified)"
          type: string
      type: object
    v0.ReleaseCreateGooglePlayParams:
      properties:
        automatic_play_console_upload:
          description: "Indicates whether or not to upload every release candidate\
            \ build automatically to the Google Play Console (default: `false`)"
          type: boolean
        description:
          description: "An internal description of the release; it won't be propagated\
            \ to the App Store (default: empty)"
          type: string
        name:
          description: The name/version of the release (e.g. `1.2`)
          type: string
        package_name:
          description: The package name of the app to be released
          type: string
        release_branch:
          description: "The branch used for building the release candidate (default:\
            \ empty)"
          type: string
        slack_webhook_url:
          description: "The Slack webhook URL to use for sending Slack notifications\
            \ (default: empty)"
          type: string
        teams_webhook_url:
          description: "The Teams webhook URL to use for sending MS Teams notifications\
            \ (default: empty)"
          type: string
        workflow:
          description: "The workflow used for building the release candidate (default:\
            \ empty)"
          type: string
      required:
      - name
      - package_name
      type: object
    v0.ReleaseCreateGooglePlayRespModel:
      example:
        name: name
        package_name: package_name
        id: id
        platform: platform
        status: status
      properties:
        id:
          description: The ID of the newly created release
          type: string
        name:
          description: The name/version of the release (e.g. `1.2`)
          type: string
        package_name:
          description: The package name of the app
          type: string
        platform:
          description: The platform of the release (`android`)
          type: string
        status:
          description: "The status of the newly created release (`scheduled` or `in-progress`,\
            \ depending on whether or not the release candidate settings were specified)"
          type: string
      type: object
    v0.SSHKeyRespModel:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    v0.SSHKeyUploadParams:
      properties:
        auth_ssh_private_key:
          description: The private part of the SSH key you would like to use
          type: string
        auth_ssh_public_key:
          description: The public part of the SSH key you would like to use
          type: string
        is_register_key_into_provider_service:
          description: "If it's set to true, the provided SSH key will be registered\
            \ at the provider of the application"
          type: boolean
      required:
      - auth_ssh_private_key
      - auth_ssh_public_key
      type: object
    v0.TestDeviceListResponseModel:
      example:
        data:
        - owner: owner
          device_id: device_id
          device_type: device_type
        - owner: owner
          device_id: device_id
          device_type: device_type
      properties:
        data:
          items:
            $ref: '#/components/schemas/v0.TestDeviceResponseItemModel'
          type: array
      type: object
    v0.TestDeviceResponseItemModel:
      example:
        owner: owner
        device_id: device_id
        device_type: device_type
      properties:
        device_id:
          type: string
        device_type:
          type: string
        owner:
          type: string
      type: object
    v0.UserPlanDataModel:
      example:
        current_plan:
          expires_at: expires_at
          price:
            valid: true
            int64: 6
          name: name
          id: id
          container_count: 0
        pending_plan:
          expires_at: expires_at
          price:
            valid: true
            int64: 6
          name: name
          id: id
          container_count: 0
        trial_expires_at: trial_expires_at
      properties:
        current_plan:
          $ref: '#/components/schemas/v0.PlanDataModel'
        pending_plan:
          $ref: '#/components/schemas/v0.PlanDataModel'
        trial_expires_at:
          type: string
      type: object
    v0.UserPlanRespModel:
      example:
        data:
          current_plan:
            expires_at: expires_at
            price:
              valid: true
              int64: 6
            name: name
            id: id
            container_count: 0
          pending_plan:
            expires_at: expires_at
            price:
              valid: true
              int64: 6
            name: name
            id: id
            container_count: 0
          trial_expires_at: trial_expires_at
      properties:
        data:
          $ref: '#/components/schemas/v0.UserPlanDataModel'
      type: object
    v0.UserProfileDataModel:
      example:
        unconfirmed_email: unconfirmed_email
        avatar_url: avatar_url
        data_id: 0
        created_at: created_at
        payment_processor: payment_processor
        email: email
        slug: slug
        has_used_organization_trial: true
        username: username
      properties:
        avatar_url:
          type: string
        created_at:
          type: string
        data_id:
          type: integer
        email:
          type: string
        has_used_organization_trial:
          type: boolean
        payment_processor:
          type: string
        slug:
          type: string
        unconfirmed_email:
          type: string
        username:
          type: string
      type: object
    v0.UserProfileRespModel:
      example:
        data:
          unconfirmed_email: unconfirmed_email
          avatar_url: avatar_url
          data_id: 0
          created_at: created_at
          payment_processor: payment_processor
          email: email
          slug: slug
          has_used_organization_trial: true
          username: username
      properties:
        data:
          $ref: '#/components/schemas/v0.UserProfileDataModel'
      type: object
    v0.WebhookDeliveryItemResponseModel:
      example:
        response_seconds:
          valid: true
          int64: 6
        response_headers:
          valid: true
          string: string
        updated_at: updated_at
        response_http_status:
          valid: true
          int64: 6
        request_headers: request_headers
        created_at: created_at
        response_body:
          valid: true
          string: string
        request_payload: request_payload
        request_url: request_url
        slug: slug
      properties:
        created_at:
          type: string
        request_headers:
          type: string
        request_payload:
          type: string
        request_url:
          type: string
        response_body:
          $ref: '#/components/schemas/nulls.String'
        response_headers:
          $ref: '#/components/schemas/nulls.String'
        response_http_status:
          $ref: '#/components/schemas/nulls.Int64'
        response_seconds:
          $ref: '#/components/schemas/nulls.Int64'
        slug:
          type: string
        updated_at:
          type: string
      type: object
    v0.WebhookDeliveryItemShowResponseModel:
      example:
        data:
          response_seconds:
            valid: true
            int64: 6
          response_headers:
            valid: true
            string: string
          updated_at: updated_at
          response_http_status:
            valid: true
            int64: 6
          request_headers: request_headers
          created_at: created_at
          response_body:
            valid: true
            string: string
          request_payload: request_payload
          request_url: request_url
          slug: slug
      properties:
        data:
          $ref: '#/components/schemas/v0.WebhookDeliveryItemResponseModel'
      type: object
    v0.WebhookRespModel:
      example:
        status: status
      properties:
        status:
          type: string
      type: object
    website.BitriseYMLLocation:
      enum:
      - bitrise.io
      - repository
      type: string
      x-enum-varnames:
      - LocationBitriseIo
      - LocationRepository
    app_roles_query_200_response:
      allOf:
      - type: object
      - properties:
          groups:
            items:
              type: string
            type: array
        type: object
    organzation_groups_list_200_response_inner:
      allOf:
      - properties: {}
        type: object
      - properties:
          name:
            type: string
          slug:
            type: string
        type: object
      type: object
    v0_OrganizationUpdateMachineTypeResponse_errors_inner:
      example:
        app: app
        error: error
      properties:
        app:
          description: "The apps which had an error's identifiers in the following\
            \ format \"#{app.title} (#{app.slug})\""
          type: string
        error:
          type: string
      type: object
  securitySchemes:
    AddonAuthToken:
      in: header
      name: Bitrise-Addon-Auth-Token
      type: apiKey
    PersonalAccessToken:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
