// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V0ProjectFileStorageUploadParams v0 project file storage upload params
//
// swagger:model v0.ProjectFileStorageUploadParams
type V0ProjectFileStorageUploadParams struct {

	// upload file name
	// Required: true
	UploadFileName *string `json:"upload_file_name"`

	// upload file size
	// Required: true
	UploadFileSize *int64 `json:"upload_file_size"`

	// user env key
	// Required: true
	UserEnvKey *string `json:"user_env_key"`
}

// Validate validates this v0 project file storage upload params
func (m *V0ProjectFileStorageUploadParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUploadFileName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUploadFileSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserEnvKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V0ProjectFileStorageUploadParams) validateUploadFileName(formats strfmt.Registry) error {

	if err := validate.Required("upload_file_name", "body", m.UploadFileName); err != nil {
		return err
	}

	return nil
}

func (m *V0ProjectFileStorageUploadParams) validateUploadFileSize(formats strfmt.Registry) error {

	if err := validate.Required("upload_file_size", "body", m.UploadFileSize); err != nil {
		return err
	}

	return nil
}

func (m *V0ProjectFileStorageUploadParams) validateUserEnvKey(formats strfmt.Registry) error {

	if err := validate.Required("user_env_key", "body", m.UserEnvKey); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v0 project file storage upload params based on context it is used
func (m *V0ProjectFileStorageUploadParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V0ProjectFileStorageUploadParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V0ProjectFileStorageUploadParams) UnmarshalBinary(b []byte) error {
	var res V0ProjectFileStorageUploadParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
