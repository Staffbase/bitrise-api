// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WebsiteBitriseYMLLocation website bitrise y m l location
//
// swagger:model website.BitriseYMLLocation
type WebsiteBitriseYMLLocation string

func NewWebsiteBitriseYMLLocation(value WebsiteBitriseYMLLocation) *WebsiteBitriseYMLLocation {
	return &value
}

// Pointer returns a pointer to a freshly-allocated WebsiteBitriseYMLLocation.
func (m WebsiteBitriseYMLLocation) Pointer() *WebsiteBitriseYMLLocation {
	return &m
}

const (

	// WebsiteBitriseYMLLocationBitriseDotIo captures enum value "bitrise.io"
	WebsiteBitriseYMLLocationBitriseDotIo WebsiteBitriseYMLLocation = "bitrise.io"

	// WebsiteBitriseYMLLocationRepository captures enum value "repository"
	WebsiteBitriseYMLLocationRepository WebsiteBitriseYMLLocation = "repository"
)

// for schema
var websiteBitriseYMLLocationEnum []interface{}

func init() {
	var res []WebsiteBitriseYMLLocation
	if err := json.Unmarshal([]byte(`["bitrise.io","repository"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		websiteBitriseYMLLocationEnum = append(websiteBitriseYMLLocationEnum, v)
	}
}

func (m WebsiteBitriseYMLLocation) validateWebsiteBitriseYMLLocationEnum(path, location string, value WebsiteBitriseYMLLocation) error {
	if err := validate.EnumCase(path, location, value, websiteBitriseYMLLocationEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this website bitrise y m l location
func (m WebsiteBitriseYMLLocation) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWebsiteBitriseYMLLocationEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this website bitrise y m l location based on context it is used
func (m WebsiteBitriseYMLLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
