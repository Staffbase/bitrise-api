// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// NewAppSetupBitriseYmlConfigUpdateParams creates a new AppSetupBitriseYmlConfigUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAppSetupBitriseYmlConfigUpdateParams() *AppSetupBitriseYmlConfigUpdateParams {
	return &AppSetupBitriseYmlConfigUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAppSetupBitriseYmlConfigUpdateParamsWithTimeout creates a new AppSetupBitriseYmlConfigUpdateParams object
// with the ability to set a timeout on a request.
func NewAppSetupBitriseYmlConfigUpdateParamsWithTimeout(timeout time.Duration) *AppSetupBitriseYmlConfigUpdateParams {
	return &AppSetupBitriseYmlConfigUpdateParams{
		timeout: timeout,
	}
}

// NewAppSetupBitriseYmlConfigUpdateParamsWithContext creates a new AppSetupBitriseYmlConfigUpdateParams object
// with the ability to set a context for a request.
func NewAppSetupBitriseYmlConfigUpdateParamsWithContext(ctx context.Context) *AppSetupBitriseYmlConfigUpdateParams {
	return &AppSetupBitriseYmlConfigUpdateParams{
		Context: ctx,
	}
}

// NewAppSetupBitriseYmlConfigUpdateParamsWithHTTPClient creates a new AppSetupBitriseYmlConfigUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewAppSetupBitriseYmlConfigUpdateParamsWithHTTPClient(client *http.Client) *AppSetupBitriseYmlConfigUpdateParams {
	return &AppSetupBitriseYmlConfigUpdateParams{
		HTTPClient: client,
	}
}

/*
AppSetupBitriseYmlConfigUpdateParams contains all the parameters to send to the API endpoint

	for the app setup bitrise yml config update operation.

	Typically these are written to a http.Request.
*/
type AppSetupBitriseYmlConfigUpdateParams struct {

	/* App.

	   Bitrise YML Config Update Params
	*/
	App *models.V0BitriseYMLConfigUpdateParams

	/* AppSlug.

	   App slug
	*/
	AppSlug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the app setup bitrise yml config update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppSetupBitriseYmlConfigUpdateParams) WithDefaults() *AppSetupBitriseYmlConfigUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the app setup bitrise yml config update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AppSetupBitriseYmlConfigUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) WithTimeout(timeout time.Duration) *AppSetupBitriseYmlConfigUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) WithContext(ctx context.Context) *AppSetupBitriseYmlConfigUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) WithHTTPClient(client *http.Client) *AppSetupBitriseYmlConfigUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApp adds the app to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) WithApp(app *models.V0BitriseYMLConfigUpdateParams) *AppSetupBitriseYmlConfigUpdateParams {
	o.SetApp(app)
	return o
}

// SetApp adds the app to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) SetApp(app *models.V0BitriseYMLConfigUpdateParams) {
	o.App = app
}

// WithAppSlug adds the appSlug to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) WithAppSlug(appSlug string) *AppSetupBitriseYmlConfigUpdateParams {
	o.SetAppSlug(appSlug)
	return o
}

// SetAppSlug adds the appSlug to the app setup bitrise yml config update params
func (o *AppSetupBitriseYmlConfigUpdateParams) SetAppSlug(appSlug string) {
	o.AppSlug = appSlug
}

// WriteToRequest writes these params to a swagger request
func (o *AppSetupBitriseYmlConfigUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.App != nil {
		if err := r.SetBodyParam(o.App); err != nil {
			return err
		}
	}

	// path param app-slug
	if err := r.SetPathParam("app-slug", o.AppSlug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
