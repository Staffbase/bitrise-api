// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// UserProfileReader is a Reader for the UserProfile structure.
type UserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /me] user-profile", response, response.Code())
	}
}

// NewUserProfileOK creates a UserProfileOK with default headers values
func NewUserProfileOK() *UserProfileOK {
	return &UserProfileOK{}
}

/*
UserProfileOK describes a response with status code 200, with default header values.

OK
*/
type UserProfileOK struct {
	Payload *models.V0UserProfileRespModel
}

// IsSuccess returns true when this user profile o k response has a 2xx status code
func (o *UserProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user profile o k response has a 3xx status code
func (o *UserProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user profile o k response has a 4xx status code
func (o *UserProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user profile o k response has a 5xx status code
func (o *UserProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user profile o k response a status code equal to that given
func (o *UserProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user profile o k response
func (o *UserProfileOK) Code() int {
	return 200
}

func (o *UserProfileOK) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileOK  %+v", 200, o.Payload)
}

func (o *UserProfileOK) String() string {
	return fmt.Sprintf("[GET /me][%d] userProfileOK  %+v", 200, o.Payload)
}

func (o *UserProfileOK) GetPayload() *models.V0UserProfileRespModel {
	return o.Payload
}

func (o *UserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0UserProfileRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileUnauthorized creates a UserProfileUnauthorized with default headers values
func NewUserProfileUnauthorized() *UserProfileUnauthorized {
	return &UserProfileUnauthorized{}
}

/*
UserProfileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UserProfileUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this user profile unauthorized response has a 2xx status code
func (o *UserProfileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user profile unauthorized response has a 3xx status code
func (o *UserProfileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user profile unauthorized response has a 4xx status code
func (o *UserProfileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user profile unauthorized response has a 5xx status code
func (o *UserProfileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user profile unauthorized response a status code equal to that given
func (o *UserProfileUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the user profile unauthorized response
func (o *UserProfileUnauthorized) Code() int {
	return 401
}

func (o *UserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *UserProfileUnauthorized) String() string {
	return fmt.Sprintf("[GET /me][%d] userProfileUnauthorized  %+v", 401, o.Payload)
}

func (o *UserProfileUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *UserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileNotFound creates a UserProfileNotFound with default headers values
func NewUserProfileNotFound() *UserProfileNotFound {
	return &UserProfileNotFound{}
}

/*
UserProfileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UserProfileNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this user profile not found response has a 2xx status code
func (o *UserProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user profile not found response has a 3xx status code
func (o *UserProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user profile not found response has a 4xx status code
func (o *UserProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user profile not found response has a 5xx status code
func (o *UserProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user profile not found response a status code equal to that given
func (o *UserProfileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user profile not found response
func (o *UserProfileNotFound) Code() int {
	return 404
}

func (o *UserProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileNotFound  %+v", 404, o.Payload)
}

func (o *UserProfileNotFound) String() string {
	return fmt.Sprintf("[GET /me][%d] userProfileNotFound  %+v", 404, o.Payload)
}

func (o *UserProfileNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *UserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserProfileInternalServerError creates a UserProfileInternalServerError with default headers values
func NewUserProfileInternalServerError() *UserProfileInternalServerError {
	return &UserProfileInternalServerError{}
}

/*
UserProfileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UserProfileInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this user profile internal server error response has a 2xx status code
func (o *UserProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user profile internal server error response has a 3xx status code
func (o *UserProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user profile internal server error response has a 4xx status code
func (o *UserProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user profile internal server error response has a 5xx status code
func (o *UserProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user profile internal server error response a status code equal to that given
func (o *UserProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the user profile internal server error response
func (o *UserProfileInternalServerError) Code() int {
	return 500
}

func (o *UserProfileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /me][%d] userProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *UserProfileInternalServerError) String() string {
	return fmt.Sprintf("[GET /me][%d] userProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *UserProfileInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *UserProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
