// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// BuildCertificateShowReader is a Reader for the BuildCertificateShow structure.
type BuildCertificateShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildCertificateShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildCertificateShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildCertificateShowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBuildCertificateShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuildCertificateShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildCertificateShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}] build-certificate-show", response, response.Code())
	}
}

// NewBuildCertificateShowOK creates a BuildCertificateShowOK with default headers values
func NewBuildCertificateShowOK() *BuildCertificateShowOK {
	return &BuildCertificateShowOK{}
}

/*
BuildCertificateShowOK describes a response with status code 200, with default header values.

OK
*/
type BuildCertificateShowOK struct {
	Payload *models.V0BuildCertificateResponseModel
}

// IsSuccess returns true when this build certificate show o k response has a 2xx status code
func (o *BuildCertificateShowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this build certificate show o k response has a 3xx status code
func (o *BuildCertificateShowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate show o k response has a 4xx status code
func (o *BuildCertificateShowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this build certificate show o k response has a 5xx status code
func (o *BuildCertificateShowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate show o k response a status code equal to that given
func (o *BuildCertificateShowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the build certificate show o k response
func (o *BuildCertificateShowOK) Code() int {
	return 200
}

func (o *BuildCertificateShowOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowOK  %+v", 200, o.Payload)
}

func (o *BuildCertificateShowOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowOK  %+v", 200, o.Payload)
}

func (o *BuildCertificateShowOK) GetPayload() *models.V0BuildCertificateResponseModel {
	return o.Payload
}

func (o *BuildCertificateShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildCertificateResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateShowBadRequest creates a BuildCertificateShowBadRequest with default headers values
func NewBuildCertificateShowBadRequest() *BuildCertificateShowBadRequest {
	return &BuildCertificateShowBadRequest{}
}

/*
BuildCertificateShowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BuildCertificateShowBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate show bad request response has a 2xx status code
func (o *BuildCertificateShowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate show bad request response has a 3xx status code
func (o *BuildCertificateShowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate show bad request response has a 4xx status code
func (o *BuildCertificateShowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate show bad request response has a 5xx status code
func (o *BuildCertificateShowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate show bad request response a status code equal to that given
func (o *BuildCertificateShowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the build certificate show bad request response
func (o *BuildCertificateShowBadRequest) Code() int {
	return 400
}

func (o *BuildCertificateShowBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowBadRequest  %+v", 400, o.Payload)
}

func (o *BuildCertificateShowBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowBadRequest  %+v", 400, o.Payload)
}

func (o *BuildCertificateShowBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateShowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateShowUnauthorized creates a BuildCertificateShowUnauthorized with default headers values
func NewBuildCertificateShowUnauthorized() *BuildCertificateShowUnauthorized {
	return &BuildCertificateShowUnauthorized{}
}

/*
BuildCertificateShowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuildCertificateShowUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate show unauthorized response has a 2xx status code
func (o *BuildCertificateShowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate show unauthorized response has a 3xx status code
func (o *BuildCertificateShowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate show unauthorized response has a 4xx status code
func (o *BuildCertificateShowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate show unauthorized response has a 5xx status code
func (o *BuildCertificateShowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate show unauthorized response a status code equal to that given
func (o *BuildCertificateShowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the build certificate show unauthorized response
func (o *BuildCertificateShowUnauthorized) Code() int {
	return 401
}

func (o *BuildCertificateShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildCertificateShowUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildCertificateShowUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateShowNotFound creates a BuildCertificateShowNotFound with default headers values
func NewBuildCertificateShowNotFound() *BuildCertificateShowNotFound {
	return &BuildCertificateShowNotFound{}
}

/*
BuildCertificateShowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuildCertificateShowNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate show not found response has a 2xx status code
func (o *BuildCertificateShowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate show not found response has a 3xx status code
func (o *BuildCertificateShowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate show not found response has a 4xx status code
func (o *BuildCertificateShowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate show not found response has a 5xx status code
func (o *BuildCertificateShowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate show not found response a status code equal to that given
func (o *BuildCertificateShowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the build certificate show not found response
func (o *BuildCertificateShowNotFound) Code() int {
	return 404
}

func (o *BuildCertificateShowNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowNotFound  %+v", 404, o.Payload)
}

func (o *BuildCertificateShowNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowNotFound  %+v", 404, o.Payload)
}

func (o *BuildCertificateShowNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateShowInternalServerError creates a BuildCertificateShowInternalServerError with default headers values
func NewBuildCertificateShowInternalServerError() *BuildCertificateShowInternalServerError {
	return &BuildCertificateShowInternalServerError{}
}

/*
BuildCertificateShowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BuildCertificateShowInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate show internal server error response has a 2xx status code
func (o *BuildCertificateShowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate show internal server error response has a 3xx status code
func (o *BuildCertificateShowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate show internal server error response has a 4xx status code
func (o *BuildCertificateShowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this build certificate show internal server error response has a 5xx status code
func (o *BuildCertificateShowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this build certificate show internal server error response a status code equal to that given
func (o *BuildCertificateShowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the build certificate show internal server error response
func (o *BuildCertificateShowInternalServerError) Code() int {
	return 500
}

func (o *BuildCertificateShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildCertificateShowInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateShowInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildCertificateShowInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
