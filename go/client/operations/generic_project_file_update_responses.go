// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// GenericProjectFileUpdateReader is a Reader for the GenericProjectFileUpdate structure.
type GenericProjectFileUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenericProjectFileUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGenericProjectFileUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenericProjectFileUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGenericProjectFileUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGenericProjectFileUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGenericProjectFileUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGenericProjectFileUpdateOK creates a GenericProjectFileUpdateOK with default headers values
func NewGenericProjectFileUpdateOK() *GenericProjectFileUpdateOK {
	return &GenericProjectFileUpdateOK{}
}

/* GenericProjectFileUpdateOK describes a response with status code 200, with default header values.

OK
*/
type GenericProjectFileUpdateOK struct {
	Payload *models.V0ProjectFileStorageResponseModel
}

func (o *GenericProjectFileUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileUpdateOK  %+v", 200, o.Payload)
}
func (o *GenericProjectFileUpdateOK) GetPayload() *models.V0ProjectFileStorageResponseModel {
	return o.Payload
}

func (o *GenericProjectFileUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ProjectFileStorageResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileUpdateBadRequest creates a GenericProjectFileUpdateBadRequest with default headers values
func NewGenericProjectFileUpdateBadRequest() *GenericProjectFileUpdateBadRequest {
	return &GenericProjectFileUpdateBadRequest{}
}

/* GenericProjectFileUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GenericProjectFileUpdateBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *GenericProjectFileUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileUpdateBadRequest  %+v", 400, o.Payload)
}
func (o *GenericProjectFileUpdateBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileUpdateUnauthorized creates a GenericProjectFileUpdateUnauthorized with default headers values
func NewGenericProjectFileUpdateUnauthorized() *GenericProjectFileUpdateUnauthorized {
	return &GenericProjectFileUpdateUnauthorized{}
}

/* GenericProjectFileUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GenericProjectFileUpdateUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *GenericProjectFileUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileUpdateUnauthorized  %+v", 401, o.Payload)
}
func (o *GenericProjectFileUpdateUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileUpdateNotFound creates a GenericProjectFileUpdateNotFound with default headers values
func NewGenericProjectFileUpdateNotFound() *GenericProjectFileUpdateNotFound {
	return &GenericProjectFileUpdateNotFound{}
}

/* GenericProjectFileUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GenericProjectFileUpdateNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *GenericProjectFileUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileUpdateNotFound  %+v", 404, o.Payload)
}
func (o *GenericProjectFileUpdateNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileUpdateInternalServerError creates a GenericProjectFileUpdateInternalServerError with default headers values
func NewGenericProjectFileUpdateInternalServerError() *GenericProjectFileUpdateInternalServerError {
	return &GenericProjectFileUpdateInternalServerError{}
}

/* GenericProjectFileUpdateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GenericProjectFileUpdateInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *GenericProjectFileUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileUpdateInternalServerError  %+v", 500, o.Payload)
}
func (o *GenericProjectFileUpdateInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
