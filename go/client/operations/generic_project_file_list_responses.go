// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// GenericProjectFileListReader is a Reader for the GenericProjectFileList structure.
type GenericProjectFileListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenericProjectFileListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGenericProjectFileListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenericProjectFileListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGenericProjectFileListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGenericProjectFileListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGenericProjectFileListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGenericProjectFileListOK creates a GenericProjectFileListOK with default headers values
func NewGenericProjectFileListOK() *GenericProjectFileListOK {
	return &GenericProjectFileListOK{}
}

/*
GenericProjectFileListOK describes a response with status code 200, with default header values.

OK
*/
type GenericProjectFileListOK struct {
	Payload *models.V0ProjectFileStorageListResponseModel
}

// IsSuccess returns true when this generic project file list o k response has a 2xx status code
func (o *GenericProjectFileListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generic project file list o k response has a 3xx status code
func (o *GenericProjectFileListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file list o k response has a 4xx status code
func (o *GenericProjectFileListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this generic project file list o k response has a 5xx status code
func (o *GenericProjectFileListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file list o k response a status code equal to that given
func (o *GenericProjectFileListOK) IsCode(code int) bool {
	return code == 200
}

func (o *GenericProjectFileListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListOK  %+v", 200, o.Payload)
}

func (o *GenericProjectFileListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListOK  %+v", 200, o.Payload)
}

func (o *GenericProjectFileListOK) GetPayload() *models.V0ProjectFileStorageListResponseModel {
	return o.Payload
}

func (o *GenericProjectFileListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ProjectFileStorageListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileListBadRequest creates a GenericProjectFileListBadRequest with default headers values
func NewGenericProjectFileListBadRequest() *GenericProjectFileListBadRequest {
	return &GenericProjectFileListBadRequest{}
}

/*
GenericProjectFileListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GenericProjectFileListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file list bad request response has a 2xx status code
func (o *GenericProjectFileListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file list bad request response has a 3xx status code
func (o *GenericProjectFileListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file list bad request response has a 4xx status code
func (o *GenericProjectFileListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file list bad request response has a 5xx status code
func (o *GenericProjectFileListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file list bad request response a status code equal to that given
func (o *GenericProjectFileListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GenericProjectFileListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListBadRequest  %+v", 400, o.Payload)
}

func (o *GenericProjectFileListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListBadRequest  %+v", 400, o.Payload)
}

func (o *GenericProjectFileListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileListUnauthorized creates a GenericProjectFileListUnauthorized with default headers values
func NewGenericProjectFileListUnauthorized() *GenericProjectFileListUnauthorized {
	return &GenericProjectFileListUnauthorized{}
}

/*
GenericProjectFileListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GenericProjectFileListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file list unauthorized response has a 2xx status code
func (o *GenericProjectFileListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file list unauthorized response has a 3xx status code
func (o *GenericProjectFileListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file list unauthorized response has a 4xx status code
func (o *GenericProjectFileListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file list unauthorized response has a 5xx status code
func (o *GenericProjectFileListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file list unauthorized response a status code equal to that given
func (o *GenericProjectFileListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GenericProjectFileListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListUnauthorized  %+v", 401, o.Payload)
}

func (o *GenericProjectFileListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListUnauthorized  %+v", 401, o.Payload)
}

func (o *GenericProjectFileListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileListNotFound creates a GenericProjectFileListNotFound with default headers values
func NewGenericProjectFileListNotFound() *GenericProjectFileListNotFound {
	return &GenericProjectFileListNotFound{}
}

/*
GenericProjectFileListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GenericProjectFileListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file list not found response has a 2xx status code
func (o *GenericProjectFileListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file list not found response has a 3xx status code
func (o *GenericProjectFileListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file list not found response has a 4xx status code
func (o *GenericProjectFileListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file list not found response has a 5xx status code
func (o *GenericProjectFileListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file list not found response a status code equal to that given
func (o *GenericProjectFileListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GenericProjectFileListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListNotFound  %+v", 404, o.Payload)
}

func (o *GenericProjectFileListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListNotFound  %+v", 404, o.Payload)
}

func (o *GenericProjectFileListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileListInternalServerError creates a GenericProjectFileListInternalServerError with default headers values
func NewGenericProjectFileListInternalServerError() *GenericProjectFileListInternalServerError {
	return &GenericProjectFileListInternalServerError{}
}

/*
GenericProjectFileListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GenericProjectFileListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file list internal server error response has a 2xx status code
func (o *GenericProjectFileListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file list internal server error response has a 3xx status code
func (o *GenericProjectFileListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file list internal server error response has a 4xx status code
func (o *GenericProjectFileListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this generic project file list internal server error response has a 5xx status code
func (o *GenericProjectFileListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this generic project file list internal server error response a status code equal to that given
func (o *GenericProjectFileListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GenericProjectFileListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListInternalServerError  %+v", 500, o.Payload)
}

func (o *GenericProjectFileListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files][%d] genericProjectFileListInternalServerError  %+v", 500, o.Payload)
}

func (o *GenericProjectFileListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
