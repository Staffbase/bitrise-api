// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// ProvisioningProfileUpdateReader is a Reader for the ProvisioningProfileUpdate structure.
type ProvisioningProfileUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProvisioningProfileUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProvisioningProfileUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProvisioningProfileUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProvisioningProfileUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProvisioningProfileUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProvisioningProfileUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProvisioningProfileUpdateOK creates a ProvisioningProfileUpdateOK with default headers values
func NewProvisioningProfileUpdateOK() *ProvisioningProfileUpdateOK {
	return &ProvisioningProfileUpdateOK{}
}

/*
ProvisioningProfileUpdateOK describes a response with status code 200, with default header values.

OK
*/
type ProvisioningProfileUpdateOK struct {
	Payload *models.V0ProvisionProfileResponseModel
}

// IsSuccess returns true when this provisioning profile update o k response has a 2xx status code
func (o *ProvisioningProfileUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this provisioning profile update o k response has a 3xx status code
func (o *ProvisioningProfileUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provisioning profile update o k response has a 4xx status code
func (o *ProvisioningProfileUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this provisioning profile update o k response has a 5xx status code
func (o *ProvisioningProfileUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this provisioning profile update o k response a status code equal to that given
func (o *ProvisioningProfileUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProvisioningProfileUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateOK  %+v", 200, o.Payload)
}

func (o *ProvisioningProfileUpdateOK) String() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateOK  %+v", 200, o.Payload)
}

func (o *ProvisioningProfileUpdateOK) GetPayload() *models.V0ProvisionProfileResponseModel {
	return o.Payload
}

func (o *ProvisioningProfileUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ProvisionProfileResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProvisioningProfileUpdateBadRequest creates a ProvisioningProfileUpdateBadRequest with default headers values
func NewProvisioningProfileUpdateBadRequest() *ProvisioningProfileUpdateBadRequest {
	return &ProvisioningProfileUpdateBadRequest{}
}

/*
ProvisioningProfileUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProvisioningProfileUpdateBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this provisioning profile update bad request response has a 2xx status code
func (o *ProvisioningProfileUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this provisioning profile update bad request response has a 3xx status code
func (o *ProvisioningProfileUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provisioning profile update bad request response has a 4xx status code
func (o *ProvisioningProfileUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this provisioning profile update bad request response has a 5xx status code
func (o *ProvisioningProfileUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this provisioning profile update bad request response a status code equal to that given
func (o *ProvisioningProfileUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ProvisioningProfileUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *ProvisioningProfileUpdateBadRequest) String() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *ProvisioningProfileUpdateBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ProvisioningProfileUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProvisioningProfileUpdateUnauthorized creates a ProvisioningProfileUpdateUnauthorized with default headers values
func NewProvisioningProfileUpdateUnauthorized() *ProvisioningProfileUpdateUnauthorized {
	return &ProvisioningProfileUpdateUnauthorized{}
}

/*
ProvisioningProfileUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ProvisioningProfileUpdateUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this provisioning profile update unauthorized response has a 2xx status code
func (o *ProvisioningProfileUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this provisioning profile update unauthorized response has a 3xx status code
func (o *ProvisioningProfileUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provisioning profile update unauthorized response has a 4xx status code
func (o *ProvisioningProfileUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this provisioning profile update unauthorized response has a 5xx status code
func (o *ProvisioningProfileUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this provisioning profile update unauthorized response a status code equal to that given
func (o *ProvisioningProfileUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ProvisioningProfileUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProvisioningProfileUpdateUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *ProvisioningProfileUpdateUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ProvisioningProfileUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProvisioningProfileUpdateNotFound creates a ProvisioningProfileUpdateNotFound with default headers values
func NewProvisioningProfileUpdateNotFound() *ProvisioningProfileUpdateNotFound {
	return &ProvisioningProfileUpdateNotFound{}
}

/*
ProvisioningProfileUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProvisioningProfileUpdateNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this provisioning profile update not found response has a 2xx status code
func (o *ProvisioningProfileUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this provisioning profile update not found response has a 3xx status code
func (o *ProvisioningProfileUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provisioning profile update not found response has a 4xx status code
func (o *ProvisioningProfileUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this provisioning profile update not found response has a 5xx status code
func (o *ProvisioningProfileUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this provisioning profile update not found response a status code equal to that given
func (o *ProvisioningProfileUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ProvisioningProfileUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateNotFound  %+v", 404, o.Payload)
}

func (o *ProvisioningProfileUpdateNotFound) String() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateNotFound  %+v", 404, o.Payload)
}

func (o *ProvisioningProfileUpdateNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ProvisioningProfileUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProvisioningProfileUpdateInternalServerError creates a ProvisioningProfileUpdateInternalServerError with default headers values
func NewProvisioningProfileUpdateInternalServerError() *ProvisioningProfileUpdateInternalServerError {
	return &ProvisioningProfileUpdateInternalServerError{}
}

/*
ProvisioningProfileUpdateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ProvisioningProfileUpdateInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this provisioning profile update internal server error response has a 2xx status code
func (o *ProvisioningProfileUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this provisioning profile update internal server error response has a 3xx status code
func (o *ProvisioningProfileUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provisioning profile update internal server error response has a 4xx status code
func (o *ProvisioningProfileUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this provisioning profile update internal server error response has a 5xx status code
func (o *ProvisioningProfileUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this provisioning profile update internal server error response a status code equal to that given
func (o *ProvisioningProfileUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ProvisioningProfileUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *ProvisioningProfileUpdateInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /apps/{app-slug}/provisioning-profiles/{provisioning-profile-slug}][%d] provisioningProfileUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *ProvisioningProfileUpdateInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ProvisioningProfileUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
