// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// BuildCertificateConfirmReader is a Reader for the BuildCertificateConfirm structure.
type BuildCertificateConfirmReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildCertificateConfirmReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildCertificateConfirmOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildCertificateConfirmBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBuildCertificateConfirmUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuildCertificateConfirmNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildCertificateConfirmInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBuildCertificateConfirmOK creates a BuildCertificateConfirmOK with default headers values
func NewBuildCertificateConfirmOK() *BuildCertificateConfirmOK {
	return &BuildCertificateConfirmOK{}
}

/* BuildCertificateConfirmOK describes a response with status code 200, with default header values.

OK
*/
type BuildCertificateConfirmOK struct {
	Payload *models.V0BuildCertificateResponseModel
}

func (o *BuildCertificateConfirmOK) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded][%d] buildCertificateConfirmOK  %+v", 200, o.Payload)
}
func (o *BuildCertificateConfirmOK) GetPayload() *models.V0BuildCertificateResponseModel {
	return o.Payload
}

func (o *BuildCertificateConfirmOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildCertificateResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateConfirmBadRequest creates a BuildCertificateConfirmBadRequest with default headers values
func NewBuildCertificateConfirmBadRequest() *BuildCertificateConfirmBadRequest {
	return &BuildCertificateConfirmBadRequest{}
}

/* BuildCertificateConfirmBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BuildCertificateConfirmBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildCertificateConfirmBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded][%d] buildCertificateConfirmBadRequest  %+v", 400, o.Payload)
}
func (o *BuildCertificateConfirmBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateConfirmBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateConfirmUnauthorized creates a BuildCertificateConfirmUnauthorized with default headers values
func NewBuildCertificateConfirmUnauthorized() *BuildCertificateConfirmUnauthorized {
	return &BuildCertificateConfirmUnauthorized{}
}

/* BuildCertificateConfirmUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuildCertificateConfirmUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildCertificateConfirmUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded][%d] buildCertificateConfirmUnauthorized  %+v", 401, o.Payload)
}
func (o *BuildCertificateConfirmUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateConfirmUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateConfirmNotFound creates a BuildCertificateConfirmNotFound with default headers values
func NewBuildCertificateConfirmNotFound() *BuildCertificateConfirmNotFound {
	return &BuildCertificateConfirmNotFound{}
}

/* BuildCertificateConfirmNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuildCertificateConfirmNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildCertificateConfirmNotFound) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded][%d] buildCertificateConfirmNotFound  %+v", 404, o.Payload)
}
func (o *BuildCertificateConfirmNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateConfirmNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateConfirmInternalServerError creates a BuildCertificateConfirmInternalServerError with default headers values
func NewBuildCertificateConfirmInternalServerError() *BuildCertificateConfirmInternalServerError {
	return &BuildCertificateConfirmInternalServerError{}
}

/* BuildCertificateConfirmInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BuildCertificateConfirmInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

func (o *BuildCertificateConfirmInternalServerError) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/build-certificates/{build-certificate-slug}/uploaded][%d] buildCertificateConfirmInternalServerError  %+v", 500, o.Payload)
}
func (o *BuildCertificateConfirmInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateConfirmInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
