// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// ActivityListReader is a Reader for the ActivityList structure.
type ActivityListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActivityListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActivityListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewActivityListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewActivityListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewActivityListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewActivityListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /me/activities] activity-list", response, response.Code())
	}
}

// NewActivityListOK creates a ActivityListOK with default headers values
func NewActivityListOK() *ActivityListOK {
	return &ActivityListOK{}
}

/*
ActivityListOK describes a response with status code 200, with default header values.

OK
*/
type ActivityListOK struct {
	Payload *models.V0ActivityEventListResponseModel
}

// IsSuccess returns true when this activity list o k response has a 2xx status code
func (o *ActivityListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this activity list o k response has a 3xx status code
func (o *ActivityListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activity list o k response has a 4xx status code
func (o *ActivityListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this activity list o k response has a 5xx status code
func (o *ActivityListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this activity list o k response a status code equal to that given
func (o *ActivityListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the activity list o k response
func (o *ActivityListOK) Code() int {
	return 200
}

func (o *ActivityListOK) Error() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListOK  %+v", 200, o.Payload)
}

func (o *ActivityListOK) String() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListOK  %+v", 200, o.Payload)
}

func (o *ActivityListOK) GetPayload() *models.V0ActivityEventListResponseModel {
	return o.Payload
}

func (o *ActivityListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ActivityEventListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivityListBadRequest creates a ActivityListBadRequest with default headers values
func NewActivityListBadRequest() *ActivityListBadRequest {
	return &ActivityListBadRequest{}
}

/*
ActivityListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ActivityListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this activity list bad request response has a 2xx status code
func (o *ActivityListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activity list bad request response has a 3xx status code
func (o *ActivityListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activity list bad request response has a 4xx status code
func (o *ActivityListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this activity list bad request response has a 5xx status code
func (o *ActivityListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this activity list bad request response a status code equal to that given
func (o *ActivityListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the activity list bad request response
func (o *ActivityListBadRequest) Code() int {
	return 400
}

func (o *ActivityListBadRequest) Error() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListBadRequest  %+v", 400, o.Payload)
}

func (o *ActivityListBadRequest) String() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListBadRequest  %+v", 400, o.Payload)
}

func (o *ActivityListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ActivityListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivityListUnauthorized creates a ActivityListUnauthorized with default headers values
func NewActivityListUnauthorized() *ActivityListUnauthorized {
	return &ActivityListUnauthorized{}
}

/*
ActivityListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ActivityListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this activity list unauthorized response has a 2xx status code
func (o *ActivityListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activity list unauthorized response has a 3xx status code
func (o *ActivityListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activity list unauthorized response has a 4xx status code
func (o *ActivityListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this activity list unauthorized response has a 5xx status code
func (o *ActivityListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this activity list unauthorized response a status code equal to that given
func (o *ActivityListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the activity list unauthorized response
func (o *ActivityListUnauthorized) Code() int {
	return 401
}

func (o *ActivityListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListUnauthorized  %+v", 401, o.Payload)
}

func (o *ActivityListUnauthorized) String() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListUnauthorized  %+v", 401, o.Payload)
}

func (o *ActivityListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ActivityListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivityListNotFound creates a ActivityListNotFound with default headers values
func NewActivityListNotFound() *ActivityListNotFound {
	return &ActivityListNotFound{}
}

/*
ActivityListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ActivityListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this activity list not found response has a 2xx status code
func (o *ActivityListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activity list not found response has a 3xx status code
func (o *ActivityListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activity list not found response has a 4xx status code
func (o *ActivityListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this activity list not found response has a 5xx status code
func (o *ActivityListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this activity list not found response a status code equal to that given
func (o *ActivityListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the activity list not found response
func (o *ActivityListNotFound) Code() int {
	return 404
}

func (o *ActivityListNotFound) Error() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListNotFound  %+v", 404, o.Payload)
}

func (o *ActivityListNotFound) String() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListNotFound  %+v", 404, o.Payload)
}

func (o *ActivityListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ActivityListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivityListInternalServerError creates a ActivityListInternalServerError with default headers values
func NewActivityListInternalServerError() *ActivityListInternalServerError {
	return &ActivityListInternalServerError{}
}

/*
ActivityListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ActivityListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this activity list internal server error response has a 2xx status code
func (o *ActivityListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activity list internal server error response has a 3xx status code
func (o *ActivityListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activity list internal server error response has a 4xx status code
func (o *ActivityListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this activity list internal server error response has a 5xx status code
func (o *ActivityListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this activity list internal server error response a status code equal to that given
func (o *ActivityListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the activity list internal server error response
func (o *ActivityListInternalServerError) Code() int {
	return 500
}

func (o *ActivityListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListInternalServerError  %+v", 500, o.Payload)
}

func (o *ActivityListInternalServerError) String() string {
	return fmt.Sprintf("[GET /me/activities][%d] activityListInternalServerError  %+v", 500, o.Payload)
}

func (o *ActivityListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ActivityListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
