// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// BuildShowReader is a Reader for the BuildShow structure.
type BuildShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildShowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBuildShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuildShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /apps/{app-slug}/builds/{build-slug}] build-show", response, response.Code())
	}
}

// NewBuildShowOK creates a BuildShowOK with default headers values
func NewBuildShowOK() *BuildShowOK {
	return &BuildShowOK{}
}

/*
BuildShowOK describes a response with status code 200, with default header values.

OK
*/
type BuildShowOK struct {
	Payload *models.V0BuildShowResponseModel
}

// IsSuccess returns true when this build show o k response has a 2xx status code
func (o *BuildShowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this build show o k response has a 3xx status code
func (o *BuildShowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build show o k response has a 4xx status code
func (o *BuildShowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this build show o k response has a 5xx status code
func (o *BuildShowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this build show o k response a status code equal to that given
func (o *BuildShowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the build show o k response
func (o *BuildShowOK) Code() int {
	return 200
}

func (o *BuildShowOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowOK  %+v", 200, o.Payload)
}

func (o *BuildShowOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowOK  %+v", 200, o.Payload)
}

func (o *BuildShowOK) GetPayload() *models.V0BuildShowResponseModel {
	return o.Payload
}

func (o *BuildShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildShowResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildShowBadRequest creates a BuildShowBadRequest with default headers values
func NewBuildShowBadRequest() *BuildShowBadRequest {
	return &BuildShowBadRequest{}
}

/*
BuildShowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BuildShowBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build show bad request response has a 2xx status code
func (o *BuildShowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build show bad request response has a 3xx status code
func (o *BuildShowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build show bad request response has a 4xx status code
func (o *BuildShowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this build show bad request response has a 5xx status code
func (o *BuildShowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this build show bad request response a status code equal to that given
func (o *BuildShowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the build show bad request response
func (o *BuildShowBadRequest) Code() int {
	return 400
}

func (o *BuildShowBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowBadRequest  %+v", 400, o.Payload)
}

func (o *BuildShowBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowBadRequest  %+v", 400, o.Payload)
}

func (o *BuildShowBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildShowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildShowUnauthorized creates a BuildShowUnauthorized with default headers values
func NewBuildShowUnauthorized() *BuildShowUnauthorized {
	return &BuildShowUnauthorized{}
}

/*
BuildShowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuildShowUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build show unauthorized response has a 2xx status code
func (o *BuildShowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build show unauthorized response has a 3xx status code
func (o *BuildShowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build show unauthorized response has a 4xx status code
func (o *BuildShowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this build show unauthorized response has a 5xx status code
func (o *BuildShowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this build show unauthorized response a status code equal to that given
func (o *BuildShowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the build show unauthorized response
func (o *BuildShowUnauthorized) Code() int {
	return 401
}

func (o *BuildShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildShowUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildShowUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildShowNotFound creates a BuildShowNotFound with default headers values
func NewBuildShowNotFound() *BuildShowNotFound {
	return &BuildShowNotFound{}
}

/*
BuildShowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuildShowNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build show not found response has a 2xx status code
func (o *BuildShowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build show not found response has a 3xx status code
func (o *BuildShowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build show not found response has a 4xx status code
func (o *BuildShowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this build show not found response has a 5xx status code
func (o *BuildShowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this build show not found response a status code equal to that given
func (o *BuildShowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the build show not found response
func (o *BuildShowNotFound) Code() int {
	return 404
}

func (o *BuildShowNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowNotFound  %+v", 404, o.Payload)
}

func (o *BuildShowNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowNotFound  %+v", 404, o.Payload)
}

func (o *BuildShowNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildShowInternalServerError creates a BuildShowInternalServerError with default headers values
func NewBuildShowInternalServerError() *BuildShowInternalServerError {
	return &BuildShowInternalServerError{}
}

/*
BuildShowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BuildShowInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build show internal server error response has a 2xx status code
func (o *BuildShowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build show internal server error response has a 3xx status code
func (o *BuildShowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build show internal server error response has a 4xx status code
func (o *BuildShowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this build show internal server error response has a 5xx status code
func (o *BuildShowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this build show internal server error response a status code equal to that given
func (o *BuildShowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the build show internal server error response
func (o *BuildShowInternalServerError) Code() int {
	return 500
}

func (o *BuildShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildShowInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds/{build-slug}][%d] buildShowInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildShowInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
