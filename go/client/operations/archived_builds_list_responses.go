// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// ArchivedBuildsListReader is a Reader for the ArchivedBuildsList structure.
type ArchivedBuildsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArchivedBuildsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArchivedBuildsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewArchivedBuildsListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewArchivedBuildsListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewArchivedBuildsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewArchivedBuildsListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewArchivedBuildsListOK creates a ArchivedBuildsListOK with default headers values
func NewArchivedBuildsListOK() *ArchivedBuildsListOK {
	return &ArchivedBuildsListOK{}
}

/*
ArchivedBuildsListOK describes a response with status code 200, with default header values.

OK
*/
type ArchivedBuildsListOK struct {
	Payload *models.V0ArchivedBuildListResponseModel
}

// IsSuccess returns true when this archived builds list o k response has a 2xx status code
func (o *ArchivedBuildsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this archived builds list o k response has a 3xx status code
func (o *ArchivedBuildsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archived builds list o k response has a 4xx status code
func (o *ArchivedBuildsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this archived builds list o k response has a 5xx status code
func (o *ArchivedBuildsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this archived builds list o k response a status code equal to that given
func (o *ArchivedBuildsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *ArchivedBuildsListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListOK  %+v", 200, o.Payload)
}

func (o *ArchivedBuildsListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListOK  %+v", 200, o.Payload)
}

func (o *ArchivedBuildsListOK) GetPayload() *models.V0ArchivedBuildListResponseModel {
	return o.Payload
}

func (o *ArchivedBuildsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ArchivedBuildListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArchivedBuildsListBadRequest creates a ArchivedBuildsListBadRequest with default headers values
func NewArchivedBuildsListBadRequest() *ArchivedBuildsListBadRequest {
	return &ArchivedBuildsListBadRequest{}
}

/*
ArchivedBuildsListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ArchivedBuildsListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this archived builds list bad request response has a 2xx status code
func (o *ArchivedBuildsListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this archived builds list bad request response has a 3xx status code
func (o *ArchivedBuildsListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archived builds list bad request response has a 4xx status code
func (o *ArchivedBuildsListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this archived builds list bad request response has a 5xx status code
func (o *ArchivedBuildsListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this archived builds list bad request response a status code equal to that given
func (o *ArchivedBuildsListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ArchivedBuildsListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListBadRequest  %+v", 400, o.Payload)
}

func (o *ArchivedBuildsListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListBadRequest  %+v", 400, o.Payload)
}

func (o *ArchivedBuildsListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ArchivedBuildsListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArchivedBuildsListUnauthorized creates a ArchivedBuildsListUnauthorized with default headers values
func NewArchivedBuildsListUnauthorized() *ArchivedBuildsListUnauthorized {
	return &ArchivedBuildsListUnauthorized{}
}

/*
ArchivedBuildsListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ArchivedBuildsListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this archived builds list unauthorized response has a 2xx status code
func (o *ArchivedBuildsListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this archived builds list unauthorized response has a 3xx status code
func (o *ArchivedBuildsListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archived builds list unauthorized response has a 4xx status code
func (o *ArchivedBuildsListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this archived builds list unauthorized response has a 5xx status code
func (o *ArchivedBuildsListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this archived builds list unauthorized response a status code equal to that given
func (o *ArchivedBuildsListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ArchivedBuildsListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListUnauthorized  %+v", 401, o.Payload)
}

func (o *ArchivedBuildsListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListUnauthorized  %+v", 401, o.Payload)
}

func (o *ArchivedBuildsListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ArchivedBuildsListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArchivedBuildsListNotFound creates a ArchivedBuildsListNotFound with default headers values
func NewArchivedBuildsListNotFound() *ArchivedBuildsListNotFound {
	return &ArchivedBuildsListNotFound{}
}

/*
ArchivedBuildsListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ArchivedBuildsListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this archived builds list not found response has a 2xx status code
func (o *ArchivedBuildsListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this archived builds list not found response has a 3xx status code
func (o *ArchivedBuildsListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archived builds list not found response has a 4xx status code
func (o *ArchivedBuildsListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this archived builds list not found response has a 5xx status code
func (o *ArchivedBuildsListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this archived builds list not found response a status code equal to that given
func (o *ArchivedBuildsListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ArchivedBuildsListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListNotFound  %+v", 404, o.Payload)
}

func (o *ArchivedBuildsListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListNotFound  %+v", 404, o.Payload)
}

func (o *ArchivedBuildsListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ArchivedBuildsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArchivedBuildsListInternalServerError creates a ArchivedBuildsListInternalServerError with default headers values
func NewArchivedBuildsListInternalServerError() *ArchivedBuildsListInternalServerError {
	return &ArchivedBuildsListInternalServerError{}
}

/*
ArchivedBuildsListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ArchivedBuildsListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this archived builds list internal server error response has a 2xx status code
func (o *ArchivedBuildsListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this archived builds list internal server error response has a 3xx status code
func (o *ArchivedBuildsListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archived builds list internal server error response has a 4xx status code
func (o *ArchivedBuildsListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this archived builds list internal server error response has a 5xx status code
func (o *ArchivedBuildsListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this archived builds list internal server error response a status code equal to that given
func (o *ArchivedBuildsListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ArchivedBuildsListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListInternalServerError  %+v", 500, o.Payload)
}

func (o *ArchivedBuildsListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/archived-builds][%d] archivedBuildsListInternalServerError  %+v", 500, o.Payload)
}

func (o *ArchivedBuildsListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *ArchivedBuildsListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
