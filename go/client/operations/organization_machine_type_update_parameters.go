// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// NewOrganizationMachineTypeUpdateParams creates a new OrganizationMachineTypeUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewOrganizationMachineTypeUpdateParams() *OrganizationMachineTypeUpdateParams {
	return &OrganizationMachineTypeUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewOrganizationMachineTypeUpdateParamsWithTimeout creates a new OrganizationMachineTypeUpdateParams object
// with the ability to set a timeout on a request.
func NewOrganizationMachineTypeUpdateParamsWithTimeout(timeout time.Duration) *OrganizationMachineTypeUpdateParams {
	return &OrganizationMachineTypeUpdateParams{
		timeout: timeout,
	}
}

// NewOrganizationMachineTypeUpdateParamsWithContext creates a new OrganizationMachineTypeUpdateParams object
// with the ability to set a context for a request.
func NewOrganizationMachineTypeUpdateParamsWithContext(ctx context.Context) *OrganizationMachineTypeUpdateParams {
	return &OrganizationMachineTypeUpdateParams{
		Context: ctx,
	}
}

// NewOrganizationMachineTypeUpdateParamsWithHTTPClient creates a new OrganizationMachineTypeUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewOrganizationMachineTypeUpdateParamsWithHTTPClient(client *http.Client) *OrganizationMachineTypeUpdateParams {
	return &OrganizationMachineTypeUpdateParams{
		HTTPClient: client,
	}
}

/*
OrganizationMachineTypeUpdateParams contains all the parameters to send to the API endpoint

	for the organization machine type update operation.

	Typically these are written to a http.Request.
*/
type OrganizationMachineTypeUpdateParams struct {

	/* OrgSlug.

	   Organization slug
	*/
	OrgSlug string

	/* Types.

	   Machine type to migrate from and to
	*/
	Types *models.V0OrganizationUpdateMachineTypeParams

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the organization machine type update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OrganizationMachineTypeUpdateParams) WithDefaults() *OrganizationMachineTypeUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the organization machine type update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OrganizationMachineTypeUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) WithTimeout(timeout time.Duration) *OrganizationMachineTypeUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) WithContext(ctx context.Context) *OrganizationMachineTypeUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) WithHTTPClient(client *http.Client) *OrganizationMachineTypeUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrgSlug adds the orgSlug to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) WithOrgSlug(orgSlug string) *OrganizationMachineTypeUpdateParams {
	o.SetOrgSlug(orgSlug)
	return o
}

// SetOrgSlug adds the orgSlug to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) SetOrgSlug(orgSlug string) {
	o.OrgSlug = orgSlug
}

// WithTypes adds the types to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) WithTypes(types *models.V0OrganizationUpdateMachineTypeParams) *OrganizationMachineTypeUpdateParams {
	o.SetTypes(types)
	return o
}

// SetTypes adds the types to the organization machine type update params
func (o *OrganizationMachineTypeUpdateParams) SetTypes(types *models.V0OrganizationUpdateMachineTypeParams) {
	o.Types = types
}

// WriteToRequest writes these params to a swagger request
func (o *OrganizationMachineTypeUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param org-slug
	if err := r.SetPathParam("org-slug", o.OrgSlug); err != nil {
		return err
	}
	if o.Types != nil {
		if err := r.SetBodyParam(o.Types); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
