// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// PipelineShowReader is a Reader for the PipelineShow structure.
type PipelineShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PipelineShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPipelineShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPipelineShowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPipelineShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPipelineShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPipelineShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPipelineShowOK creates a PipelineShowOK with default headers values
func NewPipelineShowOK() *PipelineShowOK {
	return &PipelineShowOK{}
}

/*
PipelineShowOK describes a response with status code 200, with default header values.

OK
*/
type PipelineShowOK struct {
	Payload *models.V0PipelineShowResponseModel
}

// IsSuccess returns true when this pipeline show o k response has a 2xx status code
func (o *PipelineShowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pipeline show o k response has a 3xx status code
func (o *PipelineShowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline show o k response has a 4xx status code
func (o *PipelineShowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pipeline show o k response has a 5xx status code
func (o *PipelineShowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline show o k response a status code equal to that given
func (o *PipelineShowOK) IsCode(code int) bool {
	return code == 200
}

func (o *PipelineShowOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowOK  %+v", 200, o.Payload)
}

func (o *PipelineShowOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowOK  %+v", 200, o.Payload)
}

func (o *PipelineShowOK) GetPayload() *models.V0PipelineShowResponseModel {
	return o.Payload
}

func (o *PipelineShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0PipelineShowResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineShowBadRequest creates a PipelineShowBadRequest with default headers values
func NewPipelineShowBadRequest() *PipelineShowBadRequest {
	return &PipelineShowBadRequest{}
}

/*
PipelineShowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PipelineShowBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline show bad request response has a 2xx status code
func (o *PipelineShowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline show bad request response has a 3xx status code
func (o *PipelineShowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline show bad request response has a 4xx status code
func (o *PipelineShowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline show bad request response has a 5xx status code
func (o *PipelineShowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline show bad request response a status code equal to that given
func (o *PipelineShowBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PipelineShowBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowBadRequest  %+v", 400, o.Payload)
}

func (o *PipelineShowBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowBadRequest  %+v", 400, o.Payload)
}

func (o *PipelineShowBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineShowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineShowUnauthorized creates a PipelineShowUnauthorized with default headers values
func NewPipelineShowUnauthorized() *PipelineShowUnauthorized {
	return &PipelineShowUnauthorized{}
}

/*
PipelineShowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PipelineShowUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline show unauthorized response has a 2xx status code
func (o *PipelineShowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline show unauthorized response has a 3xx status code
func (o *PipelineShowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline show unauthorized response has a 4xx status code
func (o *PipelineShowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline show unauthorized response has a 5xx status code
func (o *PipelineShowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline show unauthorized response a status code equal to that given
func (o *PipelineShowUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PipelineShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowUnauthorized  %+v", 401, o.Payload)
}

func (o *PipelineShowUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowUnauthorized  %+v", 401, o.Payload)
}

func (o *PipelineShowUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineShowNotFound creates a PipelineShowNotFound with default headers values
func NewPipelineShowNotFound() *PipelineShowNotFound {
	return &PipelineShowNotFound{}
}

/*
PipelineShowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PipelineShowNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline show not found response has a 2xx status code
func (o *PipelineShowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline show not found response has a 3xx status code
func (o *PipelineShowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline show not found response has a 4xx status code
func (o *PipelineShowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline show not found response has a 5xx status code
func (o *PipelineShowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline show not found response a status code equal to that given
func (o *PipelineShowNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PipelineShowNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowNotFound  %+v", 404, o.Payload)
}

func (o *PipelineShowNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowNotFound  %+v", 404, o.Payload)
}

func (o *PipelineShowNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineShowInternalServerError creates a PipelineShowInternalServerError with default headers values
func NewPipelineShowInternalServerError() *PipelineShowInternalServerError {
	return &PipelineShowInternalServerError{}
}

/*
PipelineShowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PipelineShowInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline show internal server error response has a 2xx status code
func (o *PipelineShowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline show internal server error response has a 3xx status code
func (o *PipelineShowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline show internal server error response has a 4xx status code
func (o *PipelineShowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pipeline show internal server error response has a 5xx status code
func (o *PipelineShowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pipeline show internal server error response a status code equal to that given
func (o *PipelineShowInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PipelineShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowInternalServerError  %+v", 500, o.Payload)
}

func (o *PipelineShowInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines/{pipeline-id}][%d] pipelineShowInternalServerError  %+v", 500, o.Payload)
}

func (o *PipelineShowInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
