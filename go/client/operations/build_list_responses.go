// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// BuildListReader is a Reader for the BuildList structure.
type BuildListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBuildListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuildListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBuildListOK creates a BuildListOK with default headers values
func NewBuildListOK() *BuildListOK {
	return &BuildListOK{}
}

/*
BuildListOK describes a response with status code 200, with default header values.

OK
*/
type BuildListOK struct {
	Payload *models.V0BuildListResponseModel
}

// IsSuccess returns true when this build list o k response has a 2xx status code
func (o *BuildListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this build list o k response has a 3xx status code
func (o *BuildListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build list o k response has a 4xx status code
func (o *BuildListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this build list o k response has a 5xx status code
func (o *BuildListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this build list o k response a status code equal to that given
func (o *BuildListOK) IsCode(code int) bool {
	return code == 200
}

func (o *BuildListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListOK  %+v", 200, o.Payload)
}

func (o *BuildListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListOK  %+v", 200, o.Payload)
}

func (o *BuildListOK) GetPayload() *models.V0BuildListResponseModel {
	return o.Payload
}

func (o *BuildListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildListBadRequest creates a BuildListBadRequest with default headers values
func NewBuildListBadRequest() *BuildListBadRequest {
	return &BuildListBadRequest{}
}

/*
BuildListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BuildListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build list bad request response has a 2xx status code
func (o *BuildListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build list bad request response has a 3xx status code
func (o *BuildListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build list bad request response has a 4xx status code
func (o *BuildListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this build list bad request response has a 5xx status code
func (o *BuildListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this build list bad request response a status code equal to that given
func (o *BuildListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *BuildListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListBadRequest  %+v", 400, o.Payload)
}

func (o *BuildListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListBadRequest  %+v", 400, o.Payload)
}

func (o *BuildListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildListUnauthorized creates a BuildListUnauthorized with default headers values
func NewBuildListUnauthorized() *BuildListUnauthorized {
	return &BuildListUnauthorized{}
}

/*
BuildListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuildListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build list unauthorized response has a 2xx status code
func (o *BuildListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build list unauthorized response has a 3xx status code
func (o *BuildListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build list unauthorized response has a 4xx status code
func (o *BuildListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this build list unauthorized response has a 5xx status code
func (o *BuildListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this build list unauthorized response a status code equal to that given
func (o *BuildListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *BuildListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildListNotFound creates a BuildListNotFound with default headers values
func NewBuildListNotFound() *BuildListNotFound {
	return &BuildListNotFound{}
}

/*
BuildListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuildListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build list not found response has a 2xx status code
func (o *BuildListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build list not found response has a 3xx status code
func (o *BuildListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build list not found response has a 4xx status code
func (o *BuildListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this build list not found response has a 5xx status code
func (o *BuildListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this build list not found response a status code equal to that given
func (o *BuildListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *BuildListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListNotFound  %+v", 404, o.Payload)
}

func (o *BuildListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListNotFound  %+v", 404, o.Payload)
}

func (o *BuildListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildListInternalServerError creates a BuildListInternalServerError with default headers values
func NewBuildListInternalServerError() *BuildListInternalServerError {
	return &BuildListInternalServerError{}
}

/*
BuildListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BuildListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build list internal server error response has a 2xx status code
func (o *BuildListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build list internal server error response has a 3xx status code
func (o *BuildListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build list internal server error response has a 4xx status code
func (o *BuildListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this build list internal server error response has a 5xx status code
func (o *BuildListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this build list internal server error response a status code equal to that given
func (o *BuildListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *BuildListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/builds][%d] buildListInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
