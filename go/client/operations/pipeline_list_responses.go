// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// PipelineListReader is a Reader for the PipelineList structure.
type PipelineListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PipelineListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPipelineListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPipelineListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPipelineListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPipelineListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPipelineListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPipelineListOK creates a PipelineListOK with default headers values
func NewPipelineListOK() *PipelineListOK {
	return &PipelineListOK{}
}

/*
PipelineListOK describes a response with status code 200, with default header values.

OK
*/
type PipelineListOK struct {
	Payload *models.V0PipelineListResponseModel
}

// IsSuccess returns true when this pipeline list o k response has a 2xx status code
func (o *PipelineListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pipeline list o k response has a 3xx status code
func (o *PipelineListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline list o k response has a 4xx status code
func (o *PipelineListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this pipeline list o k response has a 5xx status code
func (o *PipelineListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline list o k response a status code equal to that given
func (o *PipelineListOK) IsCode(code int) bool {
	return code == 200
}

func (o *PipelineListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListOK  %+v", 200, o.Payload)
}

func (o *PipelineListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListOK  %+v", 200, o.Payload)
}

func (o *PipelineListOK) GetPayload() *models.V0PipelineListResponseModel {
	return o.Payload
}

func (o *PipelineListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0PipelineListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineListBadRequest creates a PipelineListBadRequest with default headers values
func NewPipelineListBadRequest() *PipelineListBadRequest {
	return &PipelineListBadRequest{}
}

/*
PipelineListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PipelineListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline list bad request response has a 2xx status code
func (o *PipelineListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline list bad request response has a 3xx status code
func (o *PipelineListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline list bad request response has a 4xx status code
func (o *PipelineListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline list bad request response has a 5xx status code
func (o *PipelineListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline list bad request response a status code equal to that given
func (o *PipelineListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PipelineListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListBadRequest  %+v", 400, o.Payload)
}

func (o *PipelineListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListBadRequest  %+v", 400, o.Payload)
}

func (o *PipelineListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineListUnauthorized creates a PipelineListUnauthorized with default headers values
func NewPipelineListUnauthorized() *PipelineListUnauthorized {
	return &PipelineListUnauthorized{}
}

/*
PipelineListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PipelineListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline list unauthorized response has a 2xx status code
func (o *PipelineListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline list unauthorized response has a 3xx status code
func (o *PipelineListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline list unauthorized response has a 4xx status code
func (o *PipelineListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline list unauthorized response has a 5xx status code
func (o *PipelineListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline list unauthorized response a status code equal to that given
func (o *PipelineListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PipelineListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListUnauthorized  %+v", 401, o.Payload)
}

func (o *PipelineListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListUnauthorized  %+v", 401, o.Payload)
}

func (o *PipelineListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineListNotFound creates a PipelineListNotFound with default headers values
func NewPipelineListNotFound() *PipelineListNotFound {
	return &PipelineListNotFound{}
}

/*
PipelineListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PipelineListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline list not found response has a 2xx status code
func (o *PipelineListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline list not found response has a 3xx status code
func (o *PipelineListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline list not found response has a 4xx status code
func (o *PipelineListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pipeline list not found response has a 5xx status code
func (o *PipelineListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pipeline list not found response a status code equal to that given
func (o *PipelineListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *PipelineListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListNotFound  %+v", 404, o.Payload)
}

func (o *PipelineListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListNotFound  %+v", 404, o.Payload)
}

func (o *PipelineListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineListInternalServerError creates a PipelineListInternalServerError with default headers values
func NewPipelineListInternalServerError() *PipelineListInternalServerError {
	return &PipelineListInternalServerError{}
}

/*
PipelineListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PipelineListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this pipeline list internal server error response has a 2xx status code
func (o *PipelineListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pipeline list internal server error response has a 3xx status code
func (o *PipelineListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pipeline list internal server error response has a 4xx status code
func (o *PipelineListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pipeline list internal server error response has a 5xx status code
func (o *PipelineListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pipeline list internal server error response a status code equal to that given
func (o *PipelineListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *PipelineListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListInternalServerError  %+v", 500, o.Payload)
}

func (o *PipelineListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/pipelines][%d] pipelineListInternalServerError  %+v", 500, o.Payload)
}

func (o *PipelineListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *PipelineListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
