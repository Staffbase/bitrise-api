// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// BuildCertificateDeleteReader is a Reader for the BuildCertificateDelete structure.
type BuildCertificateDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildCertificateDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildCertificateDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildCertificateDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBuildCertificateDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuildCertificateDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildCertificateDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}] build-certificate-delete", response, response.Code())
	}
}

// NewBuildCertificateDeleteOK creates a BuildCertificateDeleteOK with default headers values
func NewBuildCertificateDeleteOK() *BuildCertificateDeleteOK {
	return &BuildCertificateDeleteOK{}
}

/*
BuildCertificateDeleteOK describes a response with status code 200, with default header values.

OK
*/
type BuildCertificateDeleteOK struct {
	Payload *models.V0BuildCertificateResponseModel
}

// IsSuccess returns true when this build certificate delete o k response has a 2xx status code
func (o *BuildCertificateDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this build certificate delete o k response has a 3xx status code
func (o *BuildCertificateDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate delete o k response has a 4xx status code
func (o *BuildCertificateDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this build certificate delete o k response has a 5xx status code
func (o *BuildCertificateDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate delete o k response a status code equal to that given
func (o *BuildCertificateDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the build certificate delete o k response
func (o *BuildCertificateDeleteOK) Code() int {
	return 200
}

func (o *BuildCertificateDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteOK  %+v", 200, o.Payload)
}

func (o *BuildCertificateDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteOK  %+v", 200, o.Payload)
}

func (o *BuildCertificateDeleteOK) GetPayload() *models.V0BuildCertificateResponseModel {
	return o.Payload
}

func (o *BuildCertificateDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0BuildCertificateResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateDeleteBadRequest creates a BuildCertificateDeleteBadRequest with default headers values
func NewBuildCertificateDeleteBadRequest() *BuildCertificateDeleteBadRequest {
	return &BuildCertificateDeleteBadRequest{}
}

/*
BuildCertificateDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BuildCertificateDeleteBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate delete bad request response has a 2xx status code
func (o *BuildCertificateDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate delete bad request response has a 3xx status code
func (o *BuildCertificateDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate delete bad request response has a 4xx status code
func (o *BuildCertificateDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate delete bad request response has a 5xx status code
func (o *BuildCertificateDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate delete bad request response a status code equal to that given
func (o *BuildCertificateDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the build certificate delete bad request response
func (o *BuildCertificateDeleteBadRequest) Code() int {
	return 400
}

func (o *BuildCertificateDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *BuildCertificateDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *BuildCertificateDeleteBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateDeleteUnauthorized creates a BuildCertificateDeleteUnauthorized with default headers values
func NewBuildCertificateDeleteUnauthorized() *BuildCertificateDeleteUnauthorized {
	return &BuildCertificateDeleteUnauthorized{}
}

/*
BuildCertificateDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuildCertificateDeleteUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate delete unauthorized response has a 2xx status code
func (o *BuildCertificateDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate delete unauthorized response has a 3xx status code
func (o *BuildCertificateDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate delete unauthorized response has a 4xx status code
func (o *BuildCertificateDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate delete unauthorized response has a 5xx status code
func (o *BuildCertificateDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate delete unauthorized response a status code equal to that given
func (o *BuildCertificateDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the build certificate delete unauthorized response
func (o *BuildCertificateDeleteUnauthorized) Code() int {
	return 401
}

func (o *BuildCertificateDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildCertificateDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *BuildCertificateDeleteUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateDeleteNotFound creates a BuildCertificateDeleteNotFound with default headers values
func NewBuildCertificateDeleteNotFound() *BuildCertificateDeleteNotFound {
	return &BuildCertificateDeleteNotFound{}
}

/*
BuildCertificateDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuildCertificateDeleteNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate delete not found response has a 2xx status code
func (o *BuildCertificateDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate delete not found response has a 3xx status code
func (o *BuildCertificateDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate delete not found response has a 4xx status code
func (o *BuildCertificateDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this build certificate delete not found response has a 5xx status code
func (o *BuildCertificateDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this build certificate delete not found response a status code equal to that given
func (o *BuildCertificateDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the build certificate delete not found response
func (o *BuildCertificateDeleteNotFound) Code() int {
	return 404
}

func (o *BuildCertificateDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteNotFound  %+v", 404, o.Payload)
}

func (o *BuildCertificateDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteNotFound  %+v", 404, o.Payload)
}

func (o *BuildCertificateDeleteNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildCertificateDeleteInternalServerError creates a BuildCertificateDeleteInternalServerError with default headers values
func NewBuildCertificateDeleteInternalServerError() *BuildCertificateDeleteInternalServerError {
	return &BuildCertificateDeleteInternalServerError{}
}

/*
BuildCertificateDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BuildCertificateDeleteInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this build certificate delete internal server error response has a 2xx status code
func (o *BuildCertificateDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this build certificate delete internal server error response has a 3xx status code
func (o *BuildCertificateDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this build certificate delete internal server error response has a 4xx status code
func (o *BuildCertificateDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this build certificate delete internal server error response has a 5xx status code
func (o *BuildCertificateDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this build certificate delete internal server error response a status code equal to that given
func (o *BuildCertificateDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the build certificate delete internal server error response
func (o *BuildCertificateDeleteInternalServerError) Code() int {
	return 500
}

func (o *BuildCertificateDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildCertificateDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}/build-certificates/{build-certificate-slug}][%d] buildCertificateDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildCertificateDeleteInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *BuildCertificateDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
