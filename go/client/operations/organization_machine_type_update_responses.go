// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// OrganizationMachineTypeUpdateReader is a Reader for the OrganizationMachineTypeUpdate structure.
type OrganizationMachineTypeUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrganizationMachineTypeUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrganizationMachineTypeUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrganizationMachineTypeUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOrganizationMachineTypeUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrganizationMachineTypeUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOrganizationMachineTypeUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOrganizationMachineTypeUpdateOK creates a OrganizationMachineTypeUpdateOK with default headers values
func NewOrganizationMachineTypeUpdateOK() *OrganizationMachineTypeUpdateOK {
	return &OrganizationMachineTypeUpdateOK{}
}

/*
OrganizationMachineTypeUpdateOK describes a response with status code 200, with default header values.

OK
*/
type OrganizationMachineTypeUpdateOK struct {
	Payload *models.V0OrganizationUpdateMachineTypeResponse
}

// IsSuccess returns true when this organization machine type update o k response has a 2xx status code
func (o *OrganizationMachineTypeUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this organization machine type update o k response has a 3xx status code
func (o *OrganizationMachineTypeUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization machine type update o k response has a 4xx status code
func (o *OrganizationMachineTypeUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this organization machine type update o k response has a 5xx status code
func (o *OrganizationMachineTypeUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this organization machine type update o k response a status code equal to that given
func (o *OrganizationMachineTypeUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *OrganizationMachineTypeUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateOK  %+v", 200, o.Payload)
}

func (o *OrganizationMachineTypeUpdateOK) String() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateOK  %+v", 200, o.Payload)
}

func (o *OrganizationMachineTypeUpdateOK) GetPayload() *models.V0OrganizationUpdateMachineTypeResponse {
	return o.Payload
}

func (o *OrganizationMachineTypeUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0OrganizationUpdateMachineTypeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationMachineTypeUpdateBadRequest creates a OrganizationMachineTypeUpdateBadRequest with default headers values
func NewOrganizationMachineTypeUpdateBadRequest() *OrganizationMachineTypeUpdateBadRequest {
	return &OrganizationMachineTypeUpdateBadRequest{}
}

/*
OrganizationMachineTypeUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type OrganizationMachineTypeUpdateBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this organization machine type update bad request response has a 2xx status code
func (o *OrganizationMachineTypeUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization machine type update bad request response has a 3xx status code
func (o *OrganizationMachineTypeUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization machine type update bad request response has a 4xx status code
func (o *OrganizationMachineTypeUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization machine type update bad request response has a 5xx status code
func (o *OrganizationMachineTypeUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this organization machine type update bad request response a status code equal to that given
func (o *OrganizationMachineTypeUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *OrganizationMachineTypeUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationMachineTypeUpdateBadRequest) String() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *OrganizationMachineTypeUpdateBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *OrganizationMachineTypeUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationMachineTypeUpdateUnauthorized creates a OrganizationMachineTypeUpdateUnauthorized with default headers values
func NewOrganizationMachineTypeUpdateUnauthorized() *OrganizationMachineTypeUpdateUnauthorized {
	return &OrganizationMachineTypeUpdateUnauthorized{}
}

/*
OrganizationMachineTypeUpdateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OrganizationMachineTypeUpdateUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this organization machine type update unauthorized response has a 2xx status code
func (o *OrganizationMachineTypeUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization machine type update unauthorized response has a 3xx status code
func (o *OrganizationMachineTypeUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization machine type update unauthorized response has a 4xx status code
func (o *OrganizationMachineTypeUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization machine type update unauthorized response has a 5xx status code
func (o *OrganizationMachineTypeUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this organization machine type update unauthorized response a status code equal to that given
func (o *OrganizationMachineTypeUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *OrganizationMachineTypeUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationMachineTypeUpdateUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *OrganizationMachineTypeUpdateUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *OrganizationMachineTypeUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationMachineTypeUpdateNotFound creates a OrganizationMachineTypeUpdateNotFound with default headers values
func NewOrganizationMachineTypeUpdateNotFound() *OrganizationMachineTypeUpdateNotFound {
	return &OrganizationMachineTypeUpdateNotFound{}
}

/*
OrganizationMachineTypeUpdateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OrganizationMachineTypeUpdateNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this organization machine type update not found response has a 2xx status code
func (o *OrganizationMachineTypeUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization machine type update not found response has a 3xx status code
func (o *OrganizationMachineTypeUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization machine type update not found response has a 4xx status code
func (o *OrganizationMachineTypeUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this organization machine type update not found response has a 5xx status code
func (o *OrganizationMachineTypeUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this organization machine type update not found response a status code equal to that given
func (o *OrganizationMachineTypeUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OrganizationMachineTypeUpdateNotFound) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationMachineTypeUpdateNotFound) String() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateNotFound  %+v", 404, o.Payload)
}

func (o *OrganizationMachineTypeUpdateNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *OrganizationMachineTypeUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrganizationMachineTypeUpdateInternalServerError creates a OrganizationMachineTypeUpdateInternalServerError with default headers values
func NewOrganizationMachineTypeUpdateInternalServerError() *OrganizationMachineTypeUpdateInternalServerError {
	return &OrganizationMachineTypeUpdateInternalServerError{}
}

/*
OrganizationMachineTypeUpdateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type OrganizationMachineTypeUpdateInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this organization machine type update internal server error response has a 2xx status code
func (o *OrganizationMachineTypeUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this organization machine type update internal server error response has a 3xx status code
func (o *OrganizationMachineTypeUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this organization machine type update internal server error response has a 4xx status code
func (o *OrganizationMachineTypeUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this organization machine type update internal server error response has a 5xx status code
func (o *OrganizationMachineTypeUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this organization machine type update internal server error response a status code equal to that given
func (o *OrganizationMachineTypeUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OrganizationMachineTypeUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *OrganizationMachineTypeUpdateInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /organizations/{org-slug}/apps/machine_types][%d] organizationMachineTypeUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *OrganizationMachineTypeUpdateInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *OrganizationMachineTypeUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
