// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// AddonListByAppReader is a Reader for the AddonListByApp structure.
type AddonListByAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddonListByAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddonListByAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddonListByAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddonListByAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddonListByAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddonListByAppInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddonListByAppOK creates a AddonListByAppOK with default headers values
func NewAddonListByAppOK() *AddonListByAppOK {
	return &AddonListByAppOK{}
}

/*
AddonListByAppOK describes a response with status code 200, with default header values.

OK
*/
type AddonListByAppOK struct {
	Payload *models.V0AppAddOnsListResponseModel
}

// IsSuccess returns true when this addon list by app o k response has a 2xx status code
func (o *AddonListByAppOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this addon list by app o k response has a 3xx status code
func (o *AddonListByAppOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this addon list by app o k response has a 4xx status code
func (o *AddonListByAppOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this addon list by app o k response has a 5xx status code
func (o *AddonListByAppOK) IsServerError() bool {
	return false
}

// IsCode returns true when this addon list by app o k response a status code equal to that given
func (o *AddonListByAppOK) IsCode(code int) bool {
	return code == 200
}

func (o *AddonListByAppOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppOK  %+v", 200, o.Payload)
}

func (o *AddonListByAppOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppOK  %+v", 200, o.Payload)
}

func (o *AddonListByAppOK) GetPayload() *models.V0AppAddOnsListResponseModel {
	return o.Payload
}

func (o *AddonListByAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0AppAddOnsListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddonListByAppBadRequest creates a AddonListByAppBadRequest with default headers values
func NewAddonListByAppBadRequest() *AddonListByAppBadRequest {
	return &AddonListByAppBadRequest{}
}

/*
AddonListByAppBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddonListByAppBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this addon list by app bad request response has a 2xx status code
func (o *AddonListByAppBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this addon list by app bad request response has a 3xx status code
func (o *AddonListByAppBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this addon list by app bad request response has a 4xx status code
func (o *AddonListByAppBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this addon list by app bad request response has a 5xx status code
func (o *AddonListByAppBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this addon list by app bad request response a status code equal to that given
func (o *AddonListByAppBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddonListByAppBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppBadRequest  %+v", 400, o.Payload)
}

func (o *AddonListByAppBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppBadRequest  %+v", 400, o.Payload)
}

func (o *AddonListByAppBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AddonListByAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddonListByAppUnauthorized creates a AddonListByAppUnauthorized with default headers values
func NewAddonListByAppUnauthorized() *AddonListByAppUnauthorized {
	return &AddonListByAppUnauthorized{}
}

/*
AddonListByAppUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddonListByAppUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this addon list by app unauthorized response has a 2xx status code
func (o *AddonListByAppUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this addon list by app unauthorized response has a 3xx status code
func (o *AddonListByAppUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this addon list by app unauthorized response has a 4xx status code
func (o *AddonListByAppUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this addon list by app unauthorized response has a 5xx status code
func (o *AddonListByAppUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this addon list by app unauthorized response a status code equal to that given
func (o *AddonListByAppUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AddonListByAppUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppUnauthorized  %+v", 401, o.Payload)
}

func (o *AddonListByAppUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppUnauthorized  %+v", 401, o.Payload)
}

func (o *AddonListByAppUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AddonListByAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddonListByAppNotFound creates a AddonListByAppNotFound with default headers values
func NewAddonListByAppNotFound() *AddonListByAppNotFound {
	return &AddonListByAppNotFound{}
}

/*
AddonListByAppNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddonListByAppNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this addon list by app not found response has a 2xx status code
func (o *AddonListByAppNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this addon list by app not found response has a 3xx status code
func (o *AddonListByAppNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this addon list by app not found response has a 4xx status code
func (o *AddonListByAppNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this addon list by app not found response has a 5xx status code
func (o *AddonListByAppNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this addon list by app not found response a status code equal to that given
func (o *AddonListByAppNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AddonListByAppNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppNotFound  %+v", 404, o.Payload)
}

func (o *AddonListByAppNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppNotFound  %+v", 404, o.Payload)
}

func (o *AddonListByAppNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AddonListByAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddonListByAppInternalServerError creates a AddonListByAppInternalServerError with default headers values
func NewAddonListByAppInternalServerError() *AddonListByAppInternalServerError {
	return &AddonListByAppInternalServerError{}
}

/*
AddonListByAppInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddonListByAppInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this addon list by app internal server error response has a 2xx status code
func (o *AddonListByAppInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this addon list by app internal server error response has a 3xx status code
func (o *AddonListByAppInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this addon list by app internal server error response has a 4xx status code
func (o *AddonListByAppInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this addon list by app internal server error response has a 5xx status code
func (o *AddonListByAppInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this addon list by app internal server error response a status code equal to that given
func (o *AddonListByAppInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddonListByAppInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppInternalServerError  %+v", 500, o.Payload)
}

func (o *AddonListByAppInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/addons][%d] addonListByAppInternalServerError  %+v", 500, o.Payload)
}

func (o *AddonListByAppInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AddonListByAppInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
