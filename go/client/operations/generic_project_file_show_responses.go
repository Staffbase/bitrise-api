// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// GenericProjectFileShowReader is a Reader for the GenericProjectFileShow structure.
type GenericProjectFileShowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenericProjectFileShowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGenericProjectFileShowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenericProjectFileShowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGenericProjectFileShowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGenericProjectFileShowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGenericProjectFileShowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGenericProjectFileShowOK creates a GenericProjectFileShowOK with default headers values
func NewGenericProjectFileShowOK() *GenericProjectFileShowOK {
	return &GenericProjectFileShowOK{}
}

/*
GenericProjectFileShowOK describes a response with status code 200, with default header values.

OK
*/
type GenericProjectFileShowOK struct {
	Payload *models.V0ProjectFileStorageResponseModel
}

// IsSuccess returns true when this generic project file show o k response has a 2xx status code
func (o *GenericProjectFileShowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generic project file show o k response has a 3xx status code
func (o *GenericProjectFileShowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file show o k response has a 4xx status code
func (o *GenericProjectFileShowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this generic project file show o k response has a 5xx status code
func (o *GenericProjectFileShowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file show o k response a status code equal to that given
func (o *GenericProjectFileShowOK) IsCode(code int) bool {
	return code == 200
}

func (o *GenericProjectFileShowOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowOK  %+v", 200, o.Payload)
}

func (o *GenericProjectFileShowOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowOK  %+v", 200, o.Payload)
}

func (o *GenericProjectFileShowOK) GetPayload() *models.V0ProjectFileStorageResponseModel {
	return o.Payload
}

func (o *GenericProjectFileShowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0ProjectFileStorageResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileShowBadRequest creates a GenericProjectFileShowBadRequest with default headers values
func NewGenericProjectFileShowBadRequest() *GenericProjectFileShowBadRequest {
	return &GenericProjectFileShowBadRequest{}
}

/*
GenericProjectFileShowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GenericProjectFileShowBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file show bad request response has a 2xx status code
func (o *GenericProjectFileShowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file show bad request response has a 3xx status code
func (o *GenericProjectFileShowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file show bad request response has a 4xx status code
func (o *GenericProjectFileShowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file show bad request response has a 5xx status code
func (o *GenericProjectFileShowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file show bad request response a status code equal to that given
func (o *GenericProjectFileShowBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GenericProjectFileShowBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowBadRequest  %+v", 400, o.Payload)
}

func (o *GenericProjectFileShowBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowBadRequest  %+v", 400, o.Payload)
}

func (o *GenericProjectFileShowBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileShowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileShowUnauthorized creates a GenericProjectFileShowUnauthorized with default headers values
func NewGenericProjectFileShowUnauthorized() *GenericProjectFileShowUnauthorized {
	return &GenericProjectFileShowUnauthorized{}
}

/*
GenericProjectFileShowUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GenericProjectFileShowUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file show unauthorized response has a 2xx status code
func (o *GenericProjectFileShowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file show unauthorized response has a 3xx status code
func (o *GenericProjectFileShowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file show unauthorized response has a 4xx status code
func (o *GenericProjectFileShowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file show unauthorized response has a 5xx status code
func (o *GenericProjectFileShowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file show unauthorized response a status code equal to that given
func (o *GenericProjectFileShowUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GenericProjectFileShowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowUnauthorized  %+v", 401, o.Payload)
}

func (o *GenericProjectFileShowUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowUnauthorized  %+v", 401, o.Payload)
}

func (o *GenericProjectFileShowUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileShowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileShowNotFound creates a GenericProjectFileShowNotFound with default headers values
func NewGenericProjectFileShowNotFound() *GenericProjectFileShowNotFound {
	return &GenericProjectFileShowNotFound{}
}

/*
GenericProjectFileShowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GenericProjectFileShowNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file show not found response has a 2xx status code
func (o *GenericProjectFileShowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file show not found response has a 3xx status code
func (o *GenericProjectFileShowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file show not found response has a 4xx status code
func (o *GenericProjectFileShowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this generic project file show not found response has a 5xx status code
func (o *GenericProjectFileShowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this generic project file show not found response a status code equal to that given
func (o *GenericProjectFileShowNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GenericProjectFileShowNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowNotFound  %+v", 404, o.Payload)
}

func (o *GenericProjectFileShowNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowNotFound  %+v", 404, o.Payload)
}

func (o *GenericProjectFileShowNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileShowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenericProjectFileShowInternalServerError creates a GenericProjectFileShowInternalServerError with default headers values
func NewGenericProjectFileShowInternalServerError() *GenericProjectFileShowInternalServerError {
	return &GenericProjectFileShowInternalServerError{}
}

/*
GenericProjectFileShowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GenericProjectFileShowInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this generic project file show internal server error response has a 2xx status code
func (o *GenericProjectFileShowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generic project file show internal server error response has a 3xx status code
func (o *GenericProjectFileShowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generic project file show internal server error response has a 4xx status code
func (o *GenericProjectFileShowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this generic project file show internal server error response has a 5xx status code
func (o *GenericProjectFileShowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this generic project file show internal server error response a status code equal to that given
func (o *GenericProjectFileShowInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GenericProjectFileShowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowInternalServerError  %+v", 500, o.Payload)
}

func (o *GenericProjectFileShowInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/generic-project-files/{generic-project-file-slug}][%d] genericProjectFileShowInternalServerError  %+v", 500, o.Payload)
}

func (o *GenericProjectFileShowInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *GenericProjectFileShowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
