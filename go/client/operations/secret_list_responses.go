// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// SecretListReader is a Reader for the SecretList structure.
type SecretListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSecretListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecretListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSecretListOK creates a SecretListOK with default headers values
func NewSecretListOK() *SecretListOK {
	return &SecretListOK{}
}

/*
SecretListOK describes a response with status code 200, with default header values.

OK
*/
type SecretListOK struct {
	Payload *models.V0AppSecretListResponse
}

// IsSuccess returns true when this secret list o k response has a 2xx status code
func (o *SecretListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secret list o k response has a 3xx status code
func (o *SecretListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret list o k response has a 4xx status code
func (o *SecretListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret list o k response has a 5xx status code
func (o *SecretListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secret list o k response a status code equal to that given
func (o *SecretListOK) IsCode(code int) bool {
	return code == 200
}

func (o *SecretListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListOK  %+v", 200, o.Payload)
}

func (o *SecretListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListOK  %+v", 200, o.Payload)
}

func (o *SecretListOK) GetPayload() *models.V0AppSecretListResponse {
	return o.Payload
}

func (o *SecretListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0AppSecretListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretListBadRequest creates a SecretListBadRequest with default headers values
func NewSecretListBadRequest() *SecretListBadRequest {
	return &SecretListBadRequest{}
}

/*
SecretListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SecretListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret list bad request response has a 2xx status code
func (o *SecretListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret list bad request response has a 3xx status code
func (o *SecretListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret list bad request response has a 4xx status code
func (o *SecretListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret list bad request response has a 5xx status code
func (o *SecretListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secret list bad request response a status code equal to that given
func (o *SecretListBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SecretListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListBadRequest  %+v", 400, o.Payload)
}

func (o *SecretListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListBadRequest  %+v", 400, o.Payload)
}

func (o *SecretListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretListUnauthorized creates a SecretListUnauthorized with default headers values
func NewSecretListUnauthorized() *SecretListUnauthorized {
	return &SecretListUnauthorized{}
}

/*
SecretListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SecretListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret list unauthorized response has a 2xx status code
func (o *SecretListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret list unauthorized response has a 3xx status code
func (o *SecretListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret list unauthorized response has a 4xx status code
func (o *SecretListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret list unauthorized response has a 5xx status code
func (o *SecretListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this secret list unauthorized response a status code equal to that given
func (o *SecretListUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SecretListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListUnauthorized  %+v", 401, o.Payload)
}

func (o *SecretListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListUnauthorized  %+v", 401, o.Payload)
}

func (o *SecretListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretListNotFound creates a SecretListNotFound with default headers values
func NewSecretListNotFound() *SecretListNotFound {
	return &SecretListNotFound{}
}

/*
SecretListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SecretListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret list not found response has a 2xx status code
func (o *SecretListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret list not found response has a 3xx status code
func (o *SecretListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret list not found response has a 4xx status code
func (o *SecretListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret list not found response has a 5xx status code
func (o *SecretListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this secret list not found response a status code equal to that given
func (o *SecretListNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SecretListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListNotFound  %+v", 404, o.Payload)
}

func (o *SecretListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListNotFound  %+v", 404, o.Payload)
}

func (o *SecretListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretListInternalServerError creates a SecretListInternalServerError with default headers values
func NewSecretListInternalServerError() *SecretListInternalServerError {
	return &SecretListInternalServerError{}
}

/*
SecretListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SecretListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret list internal server error response has a 2xx status code
func (o *SecretListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret list internal server error response has a 3xx status code
func (o *SecretListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret list internal server error response has a 4xx status code
func (o *SecretListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret list internal server error response has a 5xx status code
func (o *SecretListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secret list internal server error response a status code equal to that given
func (o *SecretListInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SecretListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets][%d] secretListInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
