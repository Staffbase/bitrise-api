// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// LocalBuildListReader is a Reader for the LocalBuildList structure.
type LocalBuildListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LocalBuildListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLocalBuildListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLocalBuildListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLocalBuildListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLocalBuildListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLocalBuildListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /apps/{app-slug}/local-builds] local-build-list", response, response.Code())
	}
}

// NewLocalBuildListOK creates a LocalBuildListOK with default headers values
func NewLocalBuildListOK() *LocalBuildListOK {
	return &LocalBuildListOK{}
}

/*
LocalBuildListOK describes a response with status code 200, with default header values.

OK
*/
type LocalBuildListOK struct {
	Payload *models.V0PipelineListResponseModel
}

// IsSuccess returns true when this local build list o k response has a 2xx status code
func (o *LocalBuildListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this local build list o k response has a 3xx status code
func (o *LocalBuildListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local build list o k response has a 4xx status code
func (o *LocalBuildListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this local build list o k response has a 5xx status code
func (o *LocalBuildListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this local build list o k response a status code equal to that given
func (o *LocalBuildListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the local build list o k response
func (o *LocalBuildListOK) Code() int {
	return 200
}

func (o *LocalBuildListOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListOK  %+v", 200, o.Payload)
}

func (o *LocalBuildListOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListOK  %+v", 200, o.Payload)
}

func (o *LocalBuildListOK) GetPayload() *models.V0PipelineListResponseModel {
	return o.Payload
}

func (o *LocalBuildListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0PipelineListResponseModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalBuildListBadRequest creates a LocalBuildListBadRequest with default headers values
func NewLocalBuildListBadRequest() *LocalBuildListBadRequest {
	return &LocalBuildListBadRequest{}
}

/*
LocalBuildListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LocalBuildListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this local build list bad request response has a 2xx status code
func (o *LocalBuildListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this local build list bad request response has a 3xx status code
func (o *LocalBuildListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local build list bad request response has a 4xx status code
func (o *LocalBuildListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this local build list bad request response has a 5xx status code
func (o *LocalBuildListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this local build list bad request response a status code equal to that given
func (o *LocalBuildListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the local build list bad request response
func (o *LocalBuildListBadRequest) Code() int {
	return 400
}

func (o *LocalBuildListBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListBadRequest  %+v", 400, o.Payload)
}

func (o *LocalBuildListBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListBadRequest  %+v", 400, o.Payload)
}

func (o *LocalBuildListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *LocalBuildListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalBuildListUnauthorized creates a LocalBuildListUnauthorized with default headers values
func NewLocalBuildListUnauthorized() *LocalBuildListUnauthorized {
	return &LocalBuildListUnauthorized{}
}

/*
LocalBuildListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LocalBuildListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this local build list unauthorized response has a 2xx status code
func (o *LocalBuildListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this local build list unauthorized response has a 3xx status code
func (o *LocalBuildListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local build list unauthorized response has a 4xx status code
func (o *LocalBuildListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this local build list unauthorized response has a 5xx status code
func (o *LocalBuildListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this local build list unauthorized response a status code equal to that given
func (o *LocalBuildListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the local build list unauthorized response
func (o *LocalBuildListUnauthorized) Code() int {
	return 401
}

func (o *LocalBuildListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListUnauthorized  %+v", 401, o.Payload)
}

func (o *LocalBuildListUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListUnauthorized  %+v", 401, o.Payload)
}

func (o *LocalBuildListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *LocalBuildListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalBuildListNotFound creates a LocalBuildListNotFound with default headers values
func NewLocalBuildListNotFound() *LocalBuildListNotFound {
	return &LocalBuildListNotFound{}
}

/*
LocalBuildListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LocalBuildListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this local build list not found response has a 2xx status code
func (o *LocalBuildListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this local build list not found response has a 3xx status code
func (o *LocalBuildListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local build list not found response has a 4xx status code
func (o *LocalBuildListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this local build list not found response has a 5xx status code
func (o *LocalBuildListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this local build list not found response a status code equal to that given
func (o *LocalBuildListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the local build list not found response
func (o *LocalBuildListNotFound) Code() int {
	return 404
}

func (o *LocalBuildListNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListNotFound  %+v", 404, o.Payload)
}

func (o *LocalBuildListNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListNotFound  %+v", 404, o.Payload)
}

func (o *LocalBuildListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *LocalBuildListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLocalBuildListInternalServerError creates a LocalBuildListInternalServerError with default headers values
func NewLocalBuildListInternalServerError() *LocalBuildListInternalServerError {
	return &LocalBuildListInternalServerError{}
}

/*
LocalBuildListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LocalBuildListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this local build list internal server error response has a 2xx status code
func (o *LocalBuildListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this local build list internal server error response has a 3xx status code
func (o *LocalBuildListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this local build list internal server error response has a 4xx status code
func (o *LocalBuildListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this local build list internal server error response has a 5xx status code
func (o *LocalBuildListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this local build list internal server error response a status code equal to that given
func (o *LocalBuildListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the local build list internal server error response
func (o *LocalBuildListInternalServerError) Code() int {
	return 500
}

func (o *LocalBuildListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListInternalServerError  %+v", 500, o.Payload)
}

func (o *LocalBuildListInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/local-builds][%d] localBuildListInternalServerError  %+v", 500, o.Payload)
}

func (o *LocalBuildListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *LocalBuildListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
