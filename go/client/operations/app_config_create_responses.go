// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// AppConfigCreateReader is a Reader for the AppConfigCreate structure.
type AppConfigCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppConfigCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppConfigCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAppConfigCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAppConfigCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAppConfigCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAppConfigCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /apps/{app-slug}/bitrise.yml] app-config-create", response, response.Code())
	}
}

// NewAppConfigCreateOK creates a AppConfigCreateOK with default headers values
func NewAppConfigCreateOK() *AppConfigCreateOK {
	return &AppConfigCreateOK{}
}

/*
AppConfigCreateOK describes a response with status code 200, with default header values.

OK
*/
type AppConfigCreateOK struct {
	Payload models.V0AppConfigRespModel
}

// IsSuccess returns true when this app config create o k response has a 2xx status code
func (o *AppConfigCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this app config create o k response has a 3xx status code
func (o *AppConfigCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app config create o k response has a 4xx status code
func (o *AppConfigCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this app config create o k response has a 5xx status code
func (o *AppConfigCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this app config create o k response a status code equal to that given
func (o *AppConfigCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the app config create o k response
func (o *AppConfigCreateOK) Code() int {
	return 200
}

func (o *AppConfigCreateOK) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateOK  %+v", 200, o.Payload)
}

func (o *AppConfigCreateOK) String() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateOK  %+v", 200, o.Payload)
}

func (o *AppConfigCreateOK) GetPayload() models.V0AppConfigRespModel {
	return o.Payload
}

func (o *AppConfigCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppConfigCreateBadRequest creates a AppConfigCreateBadRequest with default headers values
func NewAppConfigCreateBadRequest() *AppConfigCreateBadRequest {
	return &AppConfigCreateBadRequest{}
}

/*
AppConfigCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AppConfigCreateBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app config create bad request response has a 2xx status code
func (o *AppConfigCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app config create bad request response has a 3xx status code
func (o *AppConfigCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app config create bad request response has a 4xx status code
func (o *AppConfigCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this app config create bad request response has a 5xx status code
func (o *AppConfigCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this app config create bad request response a status code equal to that given
func (o *AppConfigCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the app config create bad request response
func (o *AppConfigCreateBadRequest) Code() int {
	return 400
}

func (o *AppConfigCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateBadRequest  %+v", 400, o.Payload)
}

func (o *AppConfigCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateBadRequest  %+v", 400, o.Payload)
}

func (o *AppConfigCreateBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppConfigCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppConfigCreateUnauthorized creates a AppConfigCreateUnauthorized with default headers values
func NewAppConfigCreateUnauthorized() *AppConfigCreateUnauthorized {
	return &AppConfigCreateUnauthorized{}
}

/*
AppConfigCreateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AppConfigCreateUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app config create unauthorized response has a 2xx status code
func (o *AppConfigCreateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app config create unauthorized response has a 3xx status code
func (o *AppConfigCreateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app config create unauthorized response has a 4xx status code
func (o *AppConfigCreateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this app config create unauthorized response has a 5xx status code
func (o *AppConfigCreateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this app config create unauthorized response a status code equal to that given
func (o *AppConfigCreateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the app config create unauthorized response
func (o *AppConfigCreateUnauthorized) Code() int {
	return 401
}

func (o *AppConfigCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *AppConfigCreateUnauthorized) String() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *AppConfigCreateUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppConfigCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppConfigCreateNotFound creates a AppConfigCreateNotFound with default headers values
func NewAppConfigCreateNotFound() *AppConfigCreateNotFound {
	return &AppConfigCreateNotFound{}
}

/*
AppConfigCreateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AppConfigCreateNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app config create not found response has a 2xx status code
func (o *AppConfigCreateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app config create not found response has a 3xx status code
func (o *AppConfigCreateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app config create not found response has a 4xx status code
func (o *AppConfigCreateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this app config create not found response has a 5xx status code
func (o *AppConfigCreateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this app config create not found response a status code equal to that given
func (o *AppConfigCreateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the app config create not found response
func (o *AppConfigCreateNotFound) Code() int {
	return 404
}

func (o *AppConfigCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateNotFound  %+v", 404, o.Payload)
}

func (o *AppConfigCreateNotFound) String() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateNotFound  %+v", 404, o.Payload)
}

func (o *AppConfigCreateNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppConfigCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppConfigCreateInternalServerError creates a AppConfigCreateInternalServerError with default headers values
func NewAppConfigCreateInternalServerError() *AppConfigCreateInternalServerError {
	return &AppConfigCreateInternalServerError{}
}

/*
AppConfigCreateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AppConfigCreateInternalServerError struct {
	Payload *models.ServiceProxyErrorRespModel
}

// IsSuccess returns true when this app config create internal server error response has a 2xx status code
func (o *AppConfigCreateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app config create internal server error response has a 3xx status code
func (o *AppConfigCreateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app config create internal server error response has a 4xx status code
func (o *AppConfigCreateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this app config create internal server error response has a 5xx status code
func (o *AppConfigCreateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this app config create internal server error response a status code equal to that given
func (o *AppConfigCreateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the app config create internal server error response
func (o *AppConfigCreateInternalServerError) Code() int {
	return 500
}

func (o *AppConfigCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *AppConfigCreateInternalServerError) String() string {
	return fmt.Sprintf("[POST /apps/{app-slug}/bitrise.yml][%d] appConfigCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *AppConfigCreateInternalServerError) GetPayload() *models.ServiceProxyErrorRespModel {
	return o.Payload
}

func (o *AppConfigCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceProxyErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
