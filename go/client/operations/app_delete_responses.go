// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// AppDeleteReader is a Reader for the AppDelete structure.
type AppDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAppDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAppDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAppDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAppDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAppDeleteOK creates a AppDeleteOK with default headers values
func NewAppDeleteOK() *AppDeleteOK {
	return &AppDeleteOK{}
}

/*
AppDeleteOK describes a response with status code 200, with default header values.

OK
*/
type AppDeleteOK struct {
	Payload *models.V0AppDeleteRespModel
}

// IsSuccess returns true when this app delete o k response has a 2xx status code
func (o *AppDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this app delete o k response has a 3xx status code
func (o *AppDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app delete o k response has a 4xx status code
func (o *AppDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this app delete o k response has a 5xx status code
func (o *AppDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this app delete o k response a status code equal to that given
func (o *AppDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *AppDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteOK  %+v", 200, o.Payload)
}

func (o *AppDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteOK  %+v", 200, o.Payload)
}

func (o *AppDeleteOK) GetPayload() *models.V0AppDeleteRespModel {
	return o.Payload
}

func (o *AppDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0AppDeleteRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppDeleteBadRequest creates a AppDeleteBadRequest with default headers values
func NewAppDeleteBadRequest() *AppDeleteBadRequest {
	return &AppDeleteBadRequest{}
}

/*
AppDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AppDeleteBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app delete bad request response has a 2xx status code
func (o *AppDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app delete bad request response has a 3xx status code
func (o *AppDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app delete bad request response has a 4xx status code
func (o *AppDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this app delete bad request response has a 5xx status code
func (o *AppDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this app delete bad request response a status code equal to that given
func (o *AppDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AppDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *AppDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *AppDeleteBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppDeleteUnauthorized creates a AppDeleteUnauthorized with default headers values
func NewAppDeleteUnauthorized() *AppDeleteUnauthorized {
	return &AppDeleteUnauthorized{}
}

/*
AppDeleteUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AppDeleteUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app delete unauthorized response has a 2xx status code
func (o *AppDeleteUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app delete unauthorized response has a 3xx status code
func (o *AppDeleteUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app delete unauthorized response has a 4xx status code
func (o *AppDeleteUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this app delete unauthorized response has a 5xx status code
func (o *AppDeleteUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this app delete unauthorized response a status code equal to that given
func (o *AppDeleteUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *AppDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *AppDeleteUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *AppDeleteUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppDeleteNotFound creates a AppDeleteNotFound with default headers values
func NewAppDeleteNotFound() *AppDeleteNotFound {
	return &AppDeleteNotFound{}
}

/*
AppDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AppDeleteNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app delete not found response has a 2xx status code
func (o *AppDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app delete not found response has a 3xx status code
func (o *AppDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app delete not found response has a 4xx status code
func (o *AppDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this app delete not found response has a 5xx status code
func (o *AppDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this app delete not found response a status code equal to that given
func (o *AppDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *AppDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteNotFound  %+v", 404, o.Payload)
}

func (o *AppDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteNotFound  %+v", 404, o.Payload)
}

func (o *AppDeleteNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppDeleteInternalServerError creates a AppDeleteInternalServerError with default headers values
func NewAppDeleteInternalServerError() *AppDeleteInternalServerError {
	return &AppDeleteInternalServerError{}
}

/*
AppDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AppDeleteInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this app delete internal server error response has a 2xx status code
func (o *AppDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this app delete internal server error response has a 3xx status code
func (o *AppDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this app delete internal server error response has a 4xx status code
func (o *AppDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this app delete internal server error response has a 5xx status code
func (o *AppDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this app delete internal server error response a status code equal to that given
func (o *AppDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AppDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *AppDeleteInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /apps/{app-slug}][%d] appDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *AppDeleteInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
