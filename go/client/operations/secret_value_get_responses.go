// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// SecretValueGetReader is a Reader for the SecretValueGet structure.
type SecretValueGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretValueGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretValueGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSecretValueGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSecretValueGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSecretValueGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSecretValueGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSecretValueGetOK creates a SecretValueGetOK with default headers values
func NewSecretValueGetOK() *SecretValueGetOK {
	return &SecretValueGetOK{}
}

/*
SecretValueGetOK describes a response with status code 200, with default header values.

OK
*/
type SecretValueGetOK struct {
	Payload *models.V0AppSecretGetValueResponse
}

// IsSuccess returns true when this secret value get o k response has a 2xx status code
func (o *SecretValueGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secret value get o k response has a 3xx status code
func (o *SecretValueGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret value get o k response has a 4xx status code
func (o *SecretValueGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret value get o k response has a 5xx status code
func (o *SecretValueGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secret value get o k response a status code equal to that given
func (o *SecretValueGetOK) IsCode(code int) bool {
	return code == 200
}

func (o *SecretValueGetOK) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetOK  %+v", 200, o.Payload)
}

func (o *SecretValueGetOK) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetOK  %+v", 200, o.Payload)
}

func (o *SecretValueGetOK) GetPayload() *models.V0AppSecretGetValueResponse {
	return o.Payload
}

func (o *SecretValueGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0AppSecretGetValueResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretValueGetBadRequest creates a SecretValueGetBadRequest with default headers values
func NewSecretValueGetBadRequest() *SecretValueGetBadRequest {
	return &SecretValueGetBadRequest{}
}

/*
SecretValueGetBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SecretValueGetBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret value get bad request response has a 2xx status code
func (o *SecretValueGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret value get bad request response has a 3xx status code
func (o *SecretValueGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret value get bad request response has a 4xx status code
func (o *SecretValueGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret value get bad request response has a 5xx status code
func (o *SecretValueGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this secret value get bad request response a status code equal to that given
func (o *SecretValueGetBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SecretValueGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetBadRequest  %+v", 400, o.Payload)
}

func (o *SecretValueGetBadRequest) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetBadRequest  %+v", 400, o.Payload)
}

func (o *SecretValueGetBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretValueGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretValueGetUnauthorized creates a SecretValueGetUnauthorized with default headers values
func NewSecretValueGetUnauthorized() *SecretValueGetUnauthorized {
	return &SecretValueGetUnauthorized{}
}

/*
SecretValueGetUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SecretValueGetUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret value get unauthorized response has a 2xx status code
func (o *SecretValueGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret value get unauthorized response has a 3xx status code
func (o *SecretValueGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret value get unauthorized response has a 4xx status code
func (o *SecretValueGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret value get unauthorized response has a 5xx status code
func (o *SecretValueGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this secret value get unauthorized response a status code equal to that given
func (o *SecretValueGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SecretValueGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SecretValueGetUnauthorized) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SecretValueGetUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretValueGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretValueGetNotFound creates a SecretValueGetNotFound with default headers values
func NewSecretValueGetNotFound() *SecretValueGetNotFound {
	return &SecretValueGetNotFound{}
}

/*
SecretValueGetNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SecretValueGetNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret value get not found response has a 2xx status code
func (o *SecretValueGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret value get not found response has a 3xx status code
func (o *SecretValueGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret value get not found response has a 4xx status code
func (o *SecretValueGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this secret value get not found response has a 5xx status code
func (o *SecretValueGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this secret value get not found response a status code equal to that given
func (o *SecretValueGetNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SecretValueGetNotFound) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetNotFound  %+v", 404, o.Payload)
}

func (o *SecretValueGetNotFound) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetNotFound  %+v", 404, o.Payload)
}

func (o *SecretValueGetNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretValueGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretValueGetInternalServerError creates a SecretValueGetInternalServerError with default headers values
func NewSecretValueGetInternalServerError() *SecretValueGetInternalServerError {
	return &SecretValueGetInternalServerError{}
}

/*
SecretValueGetInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SecretValueGetInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this secret value get internal server error response has a 2xx status code
func (o *SecretValueGetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this secret value get internal server error response has a 3xx status code
func (o *SecretValueGetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret value get internal server error response has a 4xx status code
func (o *SecretValueGetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret value get internal server error response has a 5xx status code
func (o *SecretValueGetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this secret value get internal server error response a status code equal to that given
func (o *SecretValueGetInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *SecretValueGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretValueGetInternalServerError) String() string {
	return fmt.Sprintf("[GET /apps/{app-slug}/secrets/{secret-name}/value][%d] secretValueGetInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretValueGetInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *SecretValueGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
