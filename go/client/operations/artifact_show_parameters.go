// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewArtifactShowParams creates a new ArtifactShowParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewArtifactShowParams() *ArtifactShowParams {
	return &ArtifactShowParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewArtifactShowParamsWithTimeout creates a new ArtifactShowParams object
// with the ability to set a timeout on a request.
func NewArtifactShowParamsWithTimeout(timeout time.Duration) *ArtifactShowParams {
	return &ArtifactShowParams{
		timeout: timeout,
	}
}

// NewArtifactShowParamsWithContext creates a new ArtifactShowParams object
// with the ability to set a context for a request.
func NewArtifactShowParamsWithContext(ctx context.Context) *ArtifactShowParams {
	return &ArtifactShowParams{
		Context: ctx,
	}
}

// NewArtifactShowParamsWithHTTPClient creates a new ArtifactShowParams object
// with the ability to set a custom HTTPClient for a request.
func NewArtifactShowParamsWithHTTPClient(client *http.Client) *ArtifactShowParams {
	return &ArtifactShowParams{
		HTTPClient: client,
	}
}

/*
ArtifactShowParams contains all the parameters to send to the API endpoint

	for the artifact show operation.

	Typically these are written to a http.Request.
*/
type ArtifactShowParams struct {

	/* AppSlug.

	   App slug
	*/
	AppSlug string

	/* ArtifactSlug.

	   Artifact slug
	*/
	ArtifactSlug string

	/* BuildSlug.

	   Build slug
	*/
	BuildSlug string

	/* Download.

	   Setting this will result in a redirect to the artifact download location
	*/
	Download *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the artifact show params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ArtifactShowParams) WithDefaults() *ArtifactShowParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the artifact show params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ArtifactShowParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the artifact show params
func (o *ArtifactShowParams) WithTimeout(timeout time.Duration) *ArtifactShowParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the artifact show params
func (o *ArtifactShowParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the artifact show params
func (o *ArtifactShowParams) WithContext(ctx context.Context) *ArtifactShowParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the artifact show params
func (o *ArtifactShowParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the artifact show params
func (o *ArtifactShowParams) WithHTTPClient(client *http.Client) *ArtifactShowParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the artifact show params
func (o *ArtifactShowParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppSlug adds the appSlug to the artifact show params
func (o *ArtifactShowParams) WithAppSlug(appSlug string) *ArtifactShowParams {
	o.SetAppSlug(appSlug)
	return o
}

// SetAppSlug adds the appSlug to the artifact show params
func (o *ArtifactShowParams) SetAppSlug(appSlug string) {
	o.AppSlug = appSlug
}

// WithArtifactSlug adds the artifactSlug to the artifact show params
func (o *ArtifactShowParams) WithArtifactSlug(artifactSlug string) *ArtifactShowParams {
	o.SetArtifactSlug(artifactSlug)
	return o
}

// SetArtifactSlug adds the artifactSlug to the artifact show params
func (o *ArtifactShowParams) SetArtifactSlug(artifactSlug string) {
	o.ArtifactSlug = artifactSlug
}

// WithBuildSlug adds the buildSlug to the artifact show params
func (o *ArtifactShowParams) WithBuildSlug(buildSlug string) *ArtifactShowParams {
	o.SetBuildSlug(buildSlug)
	return o
}

// SetBuildSlug adds the buildSlug to the artifact show params
func (o *ArtifactShowParams) SetBuildSlug(buildSlug string) {
	o.BuildSlug = buildSlug
}

// WithDownload adds the download to the artifact show params
func (o *ArtifactShowParams) WithDownload(download *int64) *ArtifactShowParams {
	o.SetDownload(download)
	return o
}

// SetDownload adds the download to the artifact show params
func (o *ArtifactShowParams) SetDownload(download *int64) {
	o.Download = download
}

// WriteToRequest writes these params to a swagger request
func (o *ArtifactShowParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app-slug
	if err := r.SetPathParam("app-slug", o.AppSlug); err != nil {
		return err
	}

	// path param artifact-slug
	if err := r.SetPathParam("artifact-slug", o.ArtifactSlug); err != nil {
		return err
	}

	// path param build-slug
	if err := r.SetPathParam("build-slug", o.BuildSlug); err != nil {
		return err
	}

	if o.Download != nil {

		// query param download
		var qrDownload int64

		if o.Download != nil {
			qrDownload = *o.Download
		}
		qDownload := swag.FormatInt64(qrDownload)
		if qDownload != "" {

			if err := r.SetQueryParam("download", qDownload); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
