// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Staffbase/bitrise-api/go/models"
)

// AppleAPICredentialListReader is a Reader for the AppleAPICredentialList structure.
type AppleAPICredentialListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AppleAPICredentialListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAppleAPICredentialListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAppleAPICredentialListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAppleAPICredentialListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAppleAPICredentialListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAppleAPICredentialListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /users/{user-slug}/apple-api-credentials] apple-api-credential-list", response, response.Code())
	}
}

// NewAppleAPICredentialListOK creates a AppleAPICredentialListOK with default headers values
func NewAppleAPICredentialListOK() *AppleAPICredentialListOK {
	return &AppleAPICredentialListOK{}
}

/*
AppleAPICredentialListOK describes a response with status code 200, with default header values.

OK
*/
type AppleAPICredentialListOK struct {
	Payload *models.V0AppleAPICredentialsListResponse
}

// IsSuccess returns true when this apple Api credential list o k response has a 2xx status code
func (o *AppleAPICredentialListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this apple Api credential list o k response has a 3xx status code
func (o *AppleAPICredentialListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apple Api credential list o k response has a 4xx status code
func (o *AppleAPICredentialListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this apple Api credential list o k response has a 5xx status code
func (o *AppleAPICredentialListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this apple Api credential list o k response a status code equal to that given
func (o *AppleAPICredentialListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the apple Api credential list o k response
func (o *AppleAPICredentialListOK) Code() int {
	return 200
}

func (o *AppleAPICredentialListOK) Error() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListOK  %+v", 200, o.Payload)
}

func (o *AppleAPICredentialListOK) String() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListOK  %+v", 200, o.Payload)
}

func (o *AppleAPICredentialListOK) GetPayload() *models.V0AppleAPICredentialsListResponse {
	return o.Payload
}

func (o *AppleAPICredentialListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V0AppleAPICredentialsListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppleAPICredentialListBadRequest creates a AppleAPICredentialListBadRequest with default headers values
func NewAppleAPICredentialListBadRequest() *AppleAPICredentialListBadRequest {
	return &AppleAPICredentialListBadRequest{}
}

/*
AppleAPICredentialListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AppleAPICredentialListBadRequest struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this apple Api credential list bad request response has a 2xx status code
func (o *AppleAPICredentialListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apple Api credential list bad request response has a 3xx status code
func (o *AppleAPICredentialListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apple Api credential list bad request response has a 4xx status code
func (o *AppleAPICredentialListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this apple Api credential list bad request response has a 5xx status code
func (o *AppleAPICredentialListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this apple Api credential list bad request response a status code equal to that given
func (o *AppleAPICredentialListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the apple Api credential list bad request response
func (o *AppleAPICredentialListBadRequest) Code() int {
	return 400
}

func (o *AppleAPICredentialListBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListBadRequest  %+v", 400, o.Payload)
}

func (o *AppleAPICredentialListBadRequest) String() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListBadRequest  %+v", 400, o.Payload)
}

func (o *AppleAPICredentialListBadRequest) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppleAPICredentialListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppleAPICredentialListUnauthorized creates a AppleAPICredentialListUnauthorized with default headers values
func NewAppleAPICredentialListUnauthorized() *AppleAPICredentialListUnauthorized {
	return &AppleAPICredentialListUnauthorized{}
}

/*
AppleAPICredentialListUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AppleAPICredentialListUnauthorized struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this apple Api credential list unauthorized response has a 2xx status code
func (o *AppleAPICredentialListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apple Api credential list unauthorized response has a 3xx status code
func (o *AppleAPICredentialListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apple Api credential list unauthorized response has a 4xx status code
func (o *AppleAPICredentialListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this apple Api credential list unauthorized response has a 5xx status code
func (o *AppleAPICredentialListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this apple Api credential list unauthorized response a status code equal to that given
func (o *AppleAPICredentialListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the apple Api credential list unauthorized response
func (o *AppleAPICredentialListUnauthorized) Code() int {
	return 401
}

func (o *AppleAPICredentialListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListUnauthorized  %+v", 401, o.Payload)
}

func (o *AppleAPICredentialListUnauthorized) String() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListUnauthorized  %+v", 401, o.Payload)
}

func (o *AppleAPICredentialListUnauthorized) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppleAPICredentialListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppleAPICredentialListNotFound creates a AppleAPICredentialListNotFound with default headers values
func NewAppleAPICredentialListNotFound() *AppleAPICredentialListNotFound {
	return &AppleAPICredentialListNotFound{}
}

/*
AppleAPICredentialListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AppleAPICredentialListNotFound struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this apple Api credential list not found response has a 2xx status code
func (o *AppleAPICredentialListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apple Api credential list not found response has a 3xx status code
func (o *AppleAPICredentialListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apple Api credential list not found response has a 4xx status code
func (o *AppleAPICredentialListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this apple Api credential list not found response has a 5xx status code
func (o *AppleAPICredentialListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this apple Api credential list not found response a status code equal to that given
func (o *AppleAPICredentialListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the apple Api credential list not found response
func (o *AppleAPICredentialListNotFound) Code() int {
	return 404
}

func (o *AppleAPICredentialListNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListNotFound  %+v", 404, o.Payload)
}

func (o *AppleAPICredentialListNotFound) String() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListNotFound  %+v", 404, o.Payload)
}

func (o *AppleAPICredentialListNotFound) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppleAPICredentialListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAppleAPICredentialListInternalServerError creates a AppleAPICredentialListInternalServerError with default headers values
func NewAppleAPICredentialListInternalServerError() *AppleAPICredentialListInternalServerError {
	return &AppleAPICredentialListInternalServerError{}
}

/*
AppleAPICredentialListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AppleAPICredentialListInternalServerError struct {
	Payload *models.ServiceStandardErrorRespModel
}

// IsSuccess returns true when this apple Api credential list internal server error response has a 2xx status code
func (o *AppleAPICredentialListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this apple Api credential list internal server error response has a 3xx status code
func (o *AppleAPICredentialListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this apple Api credential list internal server error response has a 4xx status code
func (o *AppleAPICredentialListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this apple Api credential list internal server error response has a 5xx status code
func (o *AppleAPICredentialListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this apple Api credential list internal server error response a status code equal to that given
func (o *AppleAPICredentialListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the apple Api credential list internal server error response
func (o *AppleAPICredentialListInternalServerError) Code() int {
	return 500
}

func (o *AppleAPICredentialListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListInternalServerError  %+v", 500, o.Payload)
}

func (o *AppleAPICredentialListInternalServerError) String() string {
	return fmt.Sprintf("[GET /users/{user-slug}/apple-api-credentials][%d] appleApiCredentialListInternalServerError  %+v", 500, o.Payload)
}

func (o *AppleAPICredentialListInternalServerError) GetPayload() *models.ServiceStandardErrorRespModel {
	return o.Payload
}

func (o *AppleAPICredentialListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceStandardErrorRespModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
